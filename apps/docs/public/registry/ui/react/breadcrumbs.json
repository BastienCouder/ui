{
  "name": "breadcrumbs",
  "type": "registry:ui",
  "files": [
    {
      "path": "ui/react/breadcrumb.tsx",
      "content": "\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { ChevronRight, ChevronDown } from \"lucide-react\";\r\nimport { tv } from \"tailwind-variants\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst breadcrumbStyles = tv({\r\n  variants: {\r\n    variant: {\r\n      neutral: \"text-fg hover:text-primary-hover\",\r\n      active: \"text-primary-active font-bold\",\r\n    },\r\n    size: {\r\n      sm: \"text-sm [&_svg]:w-4 [&_svg]:h-4\",\r\n      md: \"text-base [&_svg]:w-4.5 [&_svg]:h-4.5\",\r\n      lg: \"text-lg [&_svg]:w-5 [&_svg]:h-5\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    variant: \"neutral\",\r\n    size: \"sm\",\r\n  },\r\n});\r\n\r\ninterface BreadcrumbProps extends React.ComponentPropsWithoutRef<\"li\"> {\r\n  href?: string;\r\n  isLast?: boolean;\r\n  separatorIcon?: React.ReactNode;\r\n  orientation?: \"horizontal\" | \"vertical\";\r\n  disabled?: boolean;\r\n  className?: string;\r\n  itemClassName?: string;\r\n  variant?: \"neutral\";\r\n  size?: \"sm\" | \"md\" | \"lg\";\r\n}\r\n\r\ninterface BreadcrumbsProps extends React.ComponentPropsWithoutRef<\"nav\"> {\r\n  orientation?: \"horizontal\" | \"vertical\";\r\n  separatorIcon?: React.ReactNode;\r\n  className?: string;\r\n  listClassName?: string;\r\n  size?: \"sm\" | \"md\" | \"lg\";\r\n  variant?: \"neutral\";\r\n}\r\n\r\nconst Breadcrumbs = React.forwardRef<HTMLElement, BreadcrumbsProps>(\r\n  (\r\n    {\r\n      orientation = \"horizontal\",\r\n      separatorIcon,\r\n      children,\r\n      className,\r\n      listClassName,\r\n      size = \"sm\",\r\n      variant = \"neutral\",\r\n      ...props\r\n    },\r\n    ref,\r\n  ) => {\r\n    const defaultSeparatorIcon =\r\n      orientation === \"vertical\" ? (\r\n        <ChevronDown size={18} />\r\n      ) : (\r\n        <ChevronRight size={18} />\r\n      );\r\n    const effectiveSeparatorIcon = separatorIcon || defaultSeparatorIcon;\r\n\r\n    return (\r\n      <nav ref={ref} aria-label=\"breadcrumb\" className={className} {...props}>\r\n        <ol\r\n          className={cn(\r\n            \"flex\",\r\n            orientation === \"horizontal\"\r\n              ? \"flex-row items-center gap-2\"\r\n              : \"flex-col gap-2\",\r\n            listClassName,\r\n          )}\r\n        >\r\n          {React.Children.map(children, (child, index) => {\r\n            if (React.isValidElement<BreadcrumbProps>(child)) {\r\n              return React.cloneElement(child, {\r\n                isLast: index === React.Children.count(children) - 1,\r\n                separatorIcon: effectiveSeparatorIcon,\r\n                orientation,\r\n                size,\r\n                variant,\r\n              });\r\n            }\r\n            return child;\r\n          })}\r\n        </ol>\r\n      </nav>\r\n    );\r\n  },\r\n);\r\nBreadcrumbs.displayName = \"Breadcrumbs\";\r\n\r\nconst BreadcrumbItem = React.forwardRef<HTMLLIElement, BreadcrumbProps>(\r\n  (\r\n    {\r\n      className,\r\n      isLast,\r\n      separatorIcon,\r\n      orientation = \"horizontal\",\r\n      size,\r\n      variant,\r\n      children,\r\n      ...props\r\n    },\r\n    ref,\r\n  ) => {\r\n    return (\r\n      <li\r\n        ref={ref}\r\n        className={cn(\r\n          `flex items-center ${orientation === \"vertical\" ? \"flex-col\" : \"flex-row\"} ${className}`,\r\n        )}\r\n        {...props}\r\n      >\r\n        {children}\r\n        {!isLast && separatorIcon && (\r\n          <div\r\n            className={cn(\r\n              `flex items-center ${\r\n                orientation === \"vertical\"\r\n                  ? \"mt-2 flex justify-center w-full\"\r\n                  : \"ml-2\"\r\n              }`,\r\n            )}\r\n          >\r\n            {separatorIcon}\r\n          </div>\r\n        )}\r\n      </li>\r\n    );\r\n  },\r\n);\r\nBreadcrumbItem.displayName = \"BreadcrumbItem\";\r\n\r\nconst BreadcrumbLink = React.forwardRef<\r\n  HTMLAnchorElement | HTMLSpanElement,\r\n  React.ComponentPropsWithoutRef<\"a\"> & {\r\n    href?: string;\r\n    disabled?: boolean;\r\n    className?: string;\r\n    variant?: \"neutral\";\r\n    size?: \"sm\" | \"md\" | \"lg\";\r\n  }\r\n>(\r\n  (\r\n    {\r\n      className,\r\n      href,\r\n      disabled = false,\r\n      variant = \"neutral\",\r\n      size = \"sm\",\r\n      children,\r\n      ...props\r\n    },\r\n    ref,\r\n  ) => {\r\n    const Comp: any = href && !disabled ? \"a\" : \"span\";\r\n    const itemClasses = breadcrumbStyles({ variant, size });\r\n\r\n    return (\r\n      <Comp\r\n        ref={ref}\r\n        href={href}\r\n        className={cn(\r\n          `flex items-center gap-2 ${\r\n            href && !disabled\r\n              ? \"transition-colors hover:text-foreground\"\r\n              : \"font-normal text-foreground\"\r\n          } ${disabled ? \"pointer-events-none text-disabled-fg\" : \"\"}`,\r\n          itemClasses,\r\n          className,\r\n        )}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </Comp>\r\n    );\r\n  },\r\n);\r\nBreadcrumbLink.displayName = \"BreadcrumbLink\";\r\n\r\nconst Breadcrumb = React.forwardRef<HTMLLIElement, BreadcrumbProps>(\r\n  (\r\n    {\r\n      className,\r\n      itemClassName,\r\n      href,\r\n      isLast,\r\n      separatorIcon,\r\n      orientation = \"horizontal\",\r\n      disabled = false,\r\n      variant = \"neutral\",\r\n      size = \"sm\",\r\n      ...props\r\n    },\r\n    ref,\r\n  ) => {\r\n    const itemClasses = breadcrumbStyles({\r\n      variant: isLast ? \"active\" : variant,\r\n      size,\r\n    });\r\n\r\n    const Comp: any = href && !disabled ? \"a\" : \"span\";\r\n\r\n    return (\r\n      <li\r\n        ref={ref}\r\n        className={cn(\r\n          `flex items-center ${\r\n            orientation === \"vertical\" ? \"flex-col\" : \"flex-row\"\r\n          } ${disabled ? \"opacity-50 cursor-not-allowed\" : \"\"}`,\r\n          className,\r\n        )}\r\n      >\r\n        <Comp\r\n          href={href}\r\n          {...props}\r\n          className={cn(\r\n            `flex items-center gap-2 ${\r\n              href && !disabled\r\n                ? \"transition-colors hover:text-foreground\"\r\n                : \"font-normal text-foreground\"\r\n            } ${disabled ? \"pointer-events-none text-disabled-fg\" : \"\"}`,\r\n            itemClasses,\r\n            itemClassName,\r\n          )}\r\n        >\r\n          {props.children}\r\n        </Comp>\r\n        {!isLast && separatorIcon && (\r\n          <div\r\n            className={cn(\r\n              `flex items-center ${\r\n                orientation === \"vertical\"\r\n                  ? \"mt-2 flex justify-center w-full\"\r\n                  : \"ml-2\"\r\n              }`,\r\n              itemClasses,\r\n            )}\r\n          >\r\n            {separatorIcon}\r\n          </div>\r\n        )}\r\n      </li>\r\n    );\r\n  },\r\n);\r\nBreadcrumb.displayName = \"Breadcrumb\";\r\n\r\nexport { Breadcrumbs, Breadcrumb, BreadcrumbItem, BreadcrumbLink };\r\n",
      "type": "registry:ui",
      "target": "components/ui/breadcrumb.tsx"
    }
  ]
}