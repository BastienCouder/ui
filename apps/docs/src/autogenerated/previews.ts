
// This file is autogenerated by scripts/build-preview-imports.ts
// Do not edit this file directly.
import React from "react";

export const previews = {
  "demos/components/core/angular/button/default": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/button/default")),
    code: [{"title":"default.ts","code":"import { Component } from \"@angular/core\";\r\nimport { HlmButtonModule } from \"@/lib/components/core/default/angular/button/hlm-button.module\";\r\n\r\n@Component({\r\n  selector: \"button-preview\",\r\n  standalone: true,\r\n  imports: [HlmButtonModule],\r\n  template: `<Button hlmBtn>Button</Button>`,\r\n})\r\nexport class ButtonPreviewComponent {}\r\n"}]
  },
  "demos/components/core/react/button/default": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/button/default")),
    code: [{"title":"default.tsx","code":"import { Button } from \"@/lib/components/core/default/react/buttons/button\";\r\n\r\nexport default function Demo() {\r\n  return <Button>Button</Button>;\r\n}\r\n"}]
  },
  "demos/components/core/react/button/variants": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/button/variants")),
    code: [{"title":"variants.tsx","code":"import { Button } from \"@/lib/components/core/default/react/buttons/button\";\r\n\r\nconst variants = [\r\n  \"default\",\r\n  \"primary\",\r\n  \"secondary\",\r\n  \"outline\",\r\n  \"quiet\",\r\n  \"success\",\r\n  \"warning\",\r\n  \"danger\",\r\n] as const;\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"grid grid-cols-4 gap-2\">\r\n      {variants.map((variant) => (\r\n        <Button key={variant} variant={variant}>\r\n          {variant}\r\n        </Button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/components/core/react/button/sizes": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/button/sizes")),
    code: [{"title":"sizes.tsx","code":"import { Button } from \"@/lib/components/core/default/react/buttons/button\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex w-full items-center justify-center gap-4\">\r\n      <Button size=\"sm\">Button</Button>\r\n      <Button size=\"md\">Button</Button>\r\n      <Button size=\"lg\">Button</Button>\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/components/core/react/button/shapes": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/button/shapes")),
    code: [{"title":"shapes.tsx","code":"import { Button } from \"@/lib/components/core/default/react/buttons/button\";\r\nimport { UploadIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex items-center justify-center gap-4\">\r\n      <Button size=\"sm\" shape=\"square\" aria-label=\"upload\">\r\n        <UploadIcon />\r\n      </Button>\r\n      <Button size=\"md\" shape=\"square\" aria-label=\"upload\">\r\n        <UploadIcon />\r\n      </Button>\r\n      <Button size=\"lg\" shape=\"square\" aria-label=\"upload\">\r\n        <UploadIcon />\r\n      </Button>\r\n      <Button size=\"sm\" shape=\"circle\" aria-label=\"upload\">\r\n        <UploadIcon />\r\n      </Button>\r\n      <Button size=\"md\" shape=\"circle\" aria-label=\"upload\">\r\n        <UploadIcon />\r\n      </Button>\r\n      <Button size=\"lg\" shape=\"circle\" aria-label=\"upload\">\r\n        <UploadIcon />\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/components/core/react/button/prefix-and-suffix": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/button/prefix-and-suffix")),
    code: [{"title":"prefix-and-suffix.tsx","code":"import { Button } from \"@/lib/components/core/default/react/buttons/button\";\r\nimport { UploadIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex items-center gap-2\">\r\n      <Button prefix={<UploadIcon />}>Upload</Button>\r\n      <Button suffix={<UploadIcon />}>Upload</Button>\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/components/core/react/button/loading": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/button/loading")),
    code: [{"title":"loading.tsx","code":"import { Button } from \"@/lib/components/core/default/react/buttons/button\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex w-full items-center justify-center gap-2\">\r\n      <Button size=\"sm\" isLoading>\r\n        Button\r\n      </Button>\r\n      <Button size=\"md\" isLoading>\r\n        Button\r\n      </Button>\r\n      <Button size=\"lg\" isLoading>\r\n        Button\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/components/core/react/button/disabled": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/button/disabled")),
    code: [{"title":"disabled.tsx","code":"import { Button } from \"@/lib/components/core/default/react/buttons/button\";\r\n\r\nexport default function Demo() {\r\n  return <Button isDisabled>Button</Button>;\r\n}\r\n"}]
  },
  "demos/components/core/react/button/link-button": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/button/link-button")),
    code: [{"title":"link-button.tsx","code":"import { Button } from \"@/lib/components/core/default/react/buttons/button\";\r\nimport { LogInIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Button href=\"/login\" prefix={<LogInIcon />} target=\"_blank\">\r\n      Login\r\n    </Button>\r\n  );\r\n}\r\n"}]
  },
  "demos/components/core/react/data-display/avatar/default": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/data-display/avatar/default")),
    code: [{"title":"default.tsx","code":"import { Avatar } from \"@/lib/components/core/default/react/data-display/avatar\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Avatar\r\n      className=\"bg-white/70\"\r\n      src=\"/images/profile-default.png\"\r\n      alt=\"@bastiencouder\"\r\n      fallback=\"B\"\r\n    />\r\n  );\r\n}\r\n"}]
  },
  "demos/components/core/react/data-display/avatar/shape": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/data-display/avatar/shape")),
    code: [{"title":"shape.tsx","code":"import { Avatar } from \"@/lib/components/core/default/react/data-display/avatar\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"space-x-4\">\r\n      <Avatar\r\n        className=\"bg-white/70\"\r\n        src=\"/images/profile-default.png\"\r\n        alt=\"@bastiencouder\"\r\n        fallback=\"B\"\r\n        shape=\"square\"\r\n      />\r\n      <Avatar\r\n        className=\"bg-white/70\"\r\n        src=\"/images/profile-default.png\"\r\n        alt=\"@bastiencouder\"\r\n        fallback=\"B\"\r\n        shape=\"circle\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/components/core/react/data-display/avatar/sizes": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/data-display/avatar/sizes")),
    code: [{"title":"sizes.tsx","code":"import { Avatar } from \"@/lib/components/core/default/react/data-display/avatar\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"space-x-4\">\r\n      {([\"sm\", \"md\", \"lg\"] as const).map((size) => (\r\n        <Avatar\r\n          key={size}\r\n          size={size}\r\n          src=\"/images/profile-default.png\"\r\n          alt=\"@bastiencouder\"\r\n          fallback=\"B\"\r\n          className=\"bg-white/70\"\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/components/core/react/data-display/avatar/composition": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/data-display/avatar/composition")),
    code: [{"title":"composition.tsx","code":"import React from \"react\";\r\nimport { UserIcon } from \"@/lib/icons\";\r\nimport {\r\n  AvatarFallback,\r\n  AvatarImage,\r\n  AvatarPlaceholder,\r\n  AvatarRoot,\r\n} from \"@/lib/components/core/default/react/data-display/avatar\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <AvatarRoot className=\"bg-white/70\">\r\n      <AvatarImage src=\"/images/profile-default.png\" alt=\"@bastiencouder\" />\r\n      <AvatarFallback>B</AvatarFallback>\r\n      <AvatarPlaceholder>\r\n        <UserIcon className=\"size-5\" />\r\n      </AvatarPlaceholder>\r\n    </AvatarRoot>\r\n  );\r\n}\r\n"}]
  },
  "demos/components/core/react/data-display/badge/default": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/data-display/badge/default")),
    code: [{"title":"default.tsx","code":"import { Badge } from \"@/lib/components/core/default/react/data-display/badge\";\r\n\r\nexport default function Demo() {\r\n  return <Badge>Badge</Badge>;\r\n}\r\n"}]
  },
  "demos/components/core/react/data-display/badge/variants": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/data-display/badge/variants")),
    code: [{"title":"variants.tsx","code":"import { Badge } from \"@/lib/components/core/default/react/data-display/badge\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex flex-col items-start gap-2\">\r\n      <Flex>\r\n        <Badge variant=\"neutral\">Neutral</Badge>\r\n        <Badge variant=\"outline\">Outline</Badge>\r\n        <Badge variant=\"primary\">Primary</Badge>\r\n      </Flex>\r\n      <Flex>\r\n        <Badge variant=\"success\">Success</Badge>\r\n        <Badge variant=\"danger\">Danger</Badge>\r\n        <Badge variant=\"warning\">Warning</Badge>\r\n        <Badge variant=\"accent\">Accent</Badge>\r\n      </Flex>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Flex = (props: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div {...props} className=\"flex items-center gap-2\" />\r\n);\r\n"}]
  },
  "demos/components/core/react/data-display/badge/sizes": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/data-display/badge/sizes")),
    code: [{"title":"sizes.tsx","code":"import { Badge } from \"@/lib/components/core/default/react/data-display/badge\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex items-center gap-2\">\r\n      <Badge variant=\"primary\" size=\"sm\">\r\n        Small\r\n      </Badge>\r\n      <Badge variant=\"primary\" size=\"md\">\r\n        Medium\r\n      </Badge>\r\n      <Badge variant=\"primary\" size=\"lg\">\r\n        Large\r\n      </Badge>\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/components/core/react/data-display/badge/icon": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/data-display/badge/icon")),
    code: [{"title":"icon.tsx","code":"import { Badge } from \"@/lib/components/core/default/react/data-display/badge\";\r\nimport { ShieldIcon } from \"@/lib/icons\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex items-center gap-2\">\r\n      <Badge icon={<ShieldIcon />} size=\"sm\">\r\n        Badge\r\n      </Badge>\r\n      <Badge icon={<ShieldIcon />} size=\"md\">\r\n        Badge\r\n      </Badge>\r\n      <Badge icon={<ShieldIcon />} size=\"lg\">\r\n        Badge\r\n      </Badge>\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/components/core/react/data-display/card/default": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/data-display/card/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\r\n\r\nimport { Button } from \"@/lib/components/core/default/react/buttons/button\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardFooter,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/lib/components/core/default/react/data-display/card\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { BellRing, Check } from \"lucide-react\";\r\nimport { Switch } from \"react-aria-components\";\r\n\r\nconst notifications = [\r\n  {\r\n    title: \"Your call has been confirmed.\",\r\n    description: \"1 hour ago\",\r\n  },\r\n  {\r\n    title: \"You have a new message!\",\r\n    description: \"1 hour ago\",\r\n  },\r\n  {\r\n    title: \"Your subscription is expiring soon!\",\r\n    description: \"2 hours ago\",\r\n  },\r\n];\r\n\r\ntype CardProps = React.ComponentProps<typeof Card>;\r\n\r\nexport default function CardDemo({ className, ...props }: CardProps) {\r\n  return (\r\n    <Card className={cn(\"w-[380px]\", className)} {...props}>\r\n      <CardHeader>\r\n        <CardTitle>Notifications</CardTitle>\r\n        <CardDescription>You have 3 unread messages.</CardDescription>\r\n      </CardHeader>\r\n      <CardContent className=\"grid gap-4\">\r\n        <div className=\" flex items-center space-x-4 rounded-md border p-4\">\r\n          <BellRing />\r\n          <div className=\"flex-1 space-y-1\">\r\n            <p className=\"text-sm font-medium leading-none\">\r\n              Push Notifications\r\n            </p>\r\n            <p className=\"text-muted-foreground text-sm\">\r\n              Send notifications to device.\r\n            </p>\r\n          </div>\r\n          <Switch />\r\n        </div>\r\n        <div>\r\n          {notifications.map((notification, index) => (\r\n            <div\r\n              key={index}\r\n              className=\"mb-4 grid grid-cols-[25px_1fr] items-start pb-4 last:mb-0 last:pb-0\"\r\n            >\r\n              <span className=\"flex size-2 translate-y-1 rounded-full bg-sky-500\" />\r\n              <div className=\"space-y-1\">\r\n                <p className=\"text-sm font-medium leading-none\">\r\n                  {notification.title}\r\n                </p>\r\n                <p className=\"text-muted-foreground text-sm\">\r\n                  {notification.description}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </CardContent>\r\n      <CardFooter>\r\n        <Button className=\"w-full\">\r\n          <Check className=\"mr-2 size-4\" /> Mark all as read\r\n        </Button>\r\n      </CardFooter>\r\n    </Card>\r\n  );\r\n}\r\n"}]
  },
  "demos/components/core/react/data-display/card/variants": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/data-display/card/variants")),
    code: [{"title":"variants.tsx","code":"import {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/lib/components/core/default/react/data-display/card\";\r\n\r\nconst variants = [\r\n  \"default\",\r\n  \"outline\",\r\n  \"success\",\r\n  \"warning\",\r\n  \"danger\",\r\n] as const;\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"grid grid-cols-2 gap-2\">\r\n      {variants.map((variant) => (\r\n        <Card key={variant} variant={variant}>\r\n          <CardHeader>\r\n            <CardTitle>{variant}</CardTitle>\r\n          </CardHeader>\r\n        </Card>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/components/core/react/data-display/card/sizes": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/data-display/card/sizes")),
    code: [{"title":"sizes.tsx","code":"import {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/lib/components/core/default/react/data-display/card\";\r\n\r\nconst sizes = [\"sm\", \"md\", \"lg\"] as const;\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"grid grid-cols-2 gap-2\">\r\n      {sizes.map((size) => (\r\n        <Card key={size} size={size}>\r\n          <CardHeader>\r\n            <CardTitle>{size}</CardTitle>\r\n          </CardHeader>\r\n        </Card>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/components/core/react/data-display/card/sections": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/data-display/card/sections")),
    code: [{"title":"sections.tsx","code":"import {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/lib/components/core/default/react/data-display/card\";\r\n\r\nconst sizes = [\"sm\", \"md\", \"lg\"] as const;\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"grid grid-cols-2 gap-2\">\r\n      {sizes.map((size) => (\r\n        <Card key={size} size={size}>\r\n          <CardHeader>\r\n            <CardTitle>{size}</CardTitle>\r\n          </CardHeader>\r\n        </Card>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/components/core/react/data-display/divider/default": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/data-display/divider/default")),
    code: [{"title":"default.tsx","code":"import { Button } from \"@/lib/components/core/default/react/buttons/button\";\r\nimport { Divider } from \"@/lib/components/core/default/react/data-display/divider\";\r\n\r\nexport default function DemoDivider() {\r\n  return (\r\n    <div className=\"w-full mx-4\">\r\n      <Divider className=\"gap-4\">\r\n        <Button>Default</Button>\r\n      </Divider>\r\n    </div>\r\n  );\r\n}"}]
  },
  "demos/components/core/react/data-display/divider/orientation": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/data-display/divider/orientation")),
    code: [{"title":"orientation.tsx","code":"import { Divider } from \"@/lib/components/core/default/react/data-display/divider\";\r\n\r\nexport default function DemoDivider() {\r\n  return (\r\n    <div className=\"w-full mx-4\">\r\n      <Divider orientation=\"vertical\" className=\"gap-4 min-h-[200px]\">\r\n        Vertical\r\n      </Divider>\r\n      <Divider orientation=\"horizontal\" className=\"gap-4\">\r\n        Horizontal\r\n      </Divider>\r\n    </div>\r\n  );\r\n}"}]
  },
  "demos/components/core/react/data-display/divider/position": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/data-display/divider/position")),
    code: [{"title":"position.tsx","code":"import { Divider } from \"@/lib/components/core/default/react/data-display/divider\";\r\n\r\nexport default function DemoDivider() {\r\n  return (\r\n    <div className=\"w-full mx-4\">\r\n      <Divider className=\"gap-4\">Gap 4</Divider>\r\n      <Divider position=\"after\">After</Divider>\r\n      <Divider position=\"before\">Before</Divider>\r\n    </div>\r\n  );\r\n}"}]
  },
  "demos/components/core/react/data-display/separator/card": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/data-display/separator/card")),
    code: [{"title":"card.tsx","code":"import { Separator } from \"@/lib/components/core/default/react/data-display/separator\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"space-y-2 rounded-md border p-4\">\r\n      <div>\r\n        <h3 className=\"font-bold\">UI</h3>\r\n        <p className=\"text-sm text-muted-fg\">\r\n          Tools for building high-quality, accessible UI.\r\n        </p>\r\n      </div>\r\n      <Separator className=\"my-4\" />\r\n      <div className=\"flex h-5 items-center space-x-4 text-sm\">\r\n        <div>Docs</div>\r\n        <Separator orientation=\"vertical\" />\r\n        <div>Components</div>\r\n        <Separator orientation=\"vertical\" />\r\n        <div>Hooks</div>\r\n        <Separator orientation=\"vertical\" />\r\n        <div>Themes</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/components/core/react/data-display/separator/orientation": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/data-display/separator/orientation")),
    code: [{"title":"orientation.tsx","code":"import { Separator } from \"@/lib/components/core/default/react/data-display/separator\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex items-center gap-10\">\r\n      <div className=\"flex h-5 items-center gap-2 text-sm\">\r\n        <div>Components</div>\r\n        <Separator orientation=\"vertical\" />\r\n        <div>Hooks</div>\r\n      </div>\r\n      <div className=\"flex flex-col items-center gap-2 text-sm\">\r\n        <div>Components</div>\r\n        <Separator orientation=\"horizontal\" />\r\n        <div>Hooks</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/components/core/react/data-display/table/default": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/data-display/table/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\r\n\r\nimport { Table, TableBody, TableHeader ,TableCaption, TableCell, TableFooter, TableHead, TableRow } from \"@/lib/components/core/default/react/data-display/table\"\r\n\r\nconst invoices = [\r\n  {\r\n    invoice: \"INV001\",\r\n    paymentStatus: \"Paid\",\r\n    totalAmount: \"$250.00\",\r\n    paymentMethod: \"Credit Card\",\r\n  },\r\n  {\r\n    invoice: \"INV002\",\r\n    paymentStatus: \"Pending\",\r\n    totalAmount: \"$150.00\",\r\n    paymentMethod: \"PayPal\",\r\n  },\r\n  {\r\n    invoice: \"INV003\",\r\n    paymentStatus: \"Unpaid\",\r\n    totalAmount: \"$350.00\",\r\n    paymentMethod: \"Bank Transfer\",\r\n  },\r\n  {\r\n    invoice: \"INV004\",\r\n    paymentStatus: \"Paid\",\r\n    totalAmount: \"$450.00\",\r\n    paymentMethod: \"Credit Card\",\r\n  },\r\n  {\r\n    invoice: \"INV005\",\r\n    paymentStatus: \"Paid\",\r\n    totalAmount: \"$550.00\",\r\n    paymentMethod: \"PayPal\",\r\n  },\r\n  {\r\n    invoice: \"INV006\",\r\n    paymentStatus: \"Pending\",\r\n    totalAmount: \"$200.00\",\r\n    paymentMethod: \"Bank Transfer\",\r\n  },\r\n  {\r\n    invoice: \"INV007\",\r\n    paymentStatus: \"Unpaid\",\r\n    totalAmount: \"$300.00\",\r\n    paymentMethod: \"Credit Card\",\r\n  },\r\n]\r\n\r\nexport default function TableDemo() {\r\n  return (\r\n    <Table>\r\n      <TableCaption>A list of your recent invoices.</TableCaption>\r\n      <TableHeader>\r\n        <TableRow>\r\n          <TableHead className=\"w-[100px]\">Invoice</TableHead>\r\n          <TableHead>Status</TableHead>\r\n          <TableHead>Method</TableHead>\r\n          <TableHead className=\"text-right\">Amount</TableHead>\r\n        </TableRow>\r\n      </TableHeader>\r\n      <TableBody>\r\n        {invoices.map((invoice) => (\r\n          <TableRow key={invoice.invoice}>\r\n            <TableCell className=\"font-medium\">{invoice.invoice}</TableCell>\r\n            <TableCell>{invoice.paymentStatus}</TableCell>\r\n            <TableCell>{invoice.paymentMethod}</TableCell>\r\n            <TableCell className=\"text-right\">{invoice.totalAmount}</TableCell>\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n      <TableFooter>\r\n        <TableRow>\r\n          <TableCell colSpan={3}>Total</TableCell>\r\n          <TableCell className=\"text-right\">$2,500.00</TableCell>\r\n        </TableRow>\r\n      </TableFooter>\r\n    </Table>\r\n  )\r\n}\r\n"}]
  },
  "demos/components/core/react/data-display/table/data-table": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/data-display/table/data-table")),
    code: [{"title":"data-table.tsx","code":"\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport {\r\n  ColumnDef,\r\n  ColumnFiltersState,\r\n  SortingState,\r\n  VisibilityState,\r\n  flexRender,\r\n  getCoreRowModel,\r\n  getFilteredRowModel,\r\n  getPaginationRowModel,\r\n  getSortedRowModel,\r\n  useReactTable,\r\n} from \"@tanstack/react-table\"\r\nimport { ArrowUpDown, ChevronDown, MoreHorizontal } from \"lucide-react\"\r\nimport { Checkbox } from \"@/lib/components/core/default/react/input/checkbox\"\r\nimport { Button } from \"@/lib/components/core/default/react/buttons/button\"\r\nimport { DropdownMenu, DropdownMenuCheckboxItem, DropdownMenuContent, DropdownMenuItem, DropdownMenuLabel, DropdownMenuSeparator, DropdownMenuTrigger } from \"@/lib/components/core/default/react/navigation/dropdown-menu\"\r\nimport { TextField } from \"@/lib/components/core/default/react/input/text-field\"\r\nimport { Table, TableCell, TableHead, TableRow } from \"@/lib/components/core/default/react/data-display/table\"\r\nimport { TableBody, TableHeader } from \"@/lib/components/core/default/table\"\r\n\r\nconst data: Payment[] = [\r\n  {\r\n    id: \"m5gr84i9\",\r\n    amount: 316,\r\n    status: \"success\",\r\n    email: \"ken99@yahoo.com\",\r\n  },\r\n  {\r\n    id: \"3u1reuv4\",\r\n    amount: 242,\r\n    status: \"success\",\r\n    email: \"Abe45@gmail.com\",\r\n  },\r\n  {\r\n    id: \"derv1ws0\",\r\n    amount: 837,\r\n    status: \"processing\",\r\n    email: \"Monserrat44@gmail.com\",\r\n  },\r\n  {\r\n    id: \"5kma53ae\",\r\n    amount: 874,\r\n    status: \"success\",\r\n    email: \"Silas22@gmail.com\",\r\n  },\r\n  {\r\n    id: \"bhqecj4p\",\r\n    amount: 721,\r\n    status: \"failed\",\r\n    email: \"carmella@hotmail.com\",\r\n  },\r\n]\r\n\r\nexport type Payment = {\r\n  id: string\r\n  amount: number\r\n  status: \"pending\" | \"processing\" | \"success\" | \"failed\"\r\n  email: string\r\n}\r\n\r\nexport const columns: ColumnDef<Payment>[] = [\r\n  {\r\n    id: \"select\",\r\n    header: ({ table }) => (\r\n      <Checkbox\r\n        checked={\r\n          table.getIsAllPageRowsSelected() ||\r\n          (table.getIsSomePageRowsSelected() && \"indeterminate\")\r\n        }\r\n        onCheckedChange={(value) => table.toggleAllPageRowsSelected(!!value)}\r\n        aria-label=\"Select all\"\r\n      />\r\n    ),\r\n    cell: ({ row }) => (\r\n      <Checkbox\r\n        checked={row.getIsSelected()}\r\n        onCheckedChange={(value) => row.toggleSelected(!!value)}\r\n        aria-label=\"Select row\"\r\n      />\r\n    ),\r\n    enableSorting: false,\r\n    enableHiding: false,\r\n  },\r\n  {\r\n    accessorKey: \"status\",\r\n    header: \"Status\",\r\n    cell: ({ row }) => (\r\n      <div className=\"capitalize\">{row.getValue(\"status\")}</div>\r\n    ),\r\n  },\r\n  {\r\n    accessorKey: \"email\",\r\n    header: ({ column }) => {\r\n      return (\r\n        <Button\r\n          variant=\"quiet\"\r\n          onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\r\n        >\r\n          Email\r\n          <ArrowUpDown className=\"ml-2 h-4 w-4\" />\r\n        </Button>\r\n      )\r\n    },\r\n    cell: ({ row }) => <div className=\"lowercase\">{row.getValue(\"email\")}</div>,\r\n  },\r\n  {\r\n    accessorKey: \"amount\",\r\n    header: () => <div className=\"text-right\">Amount</div>,\r\n    cell: ({ row }) => {\r\n      const amount = parseFloat(row.getValue(\"amount\"))\r\n\r\n      // Format the amount as a dollar amount\r\n      const formatted = new Intl.NumberFormat(\"en-US\", {\r\n        style: \"currency\",\r\n        currency: \"USD\",\r\n      }).format(amount)\r\n\r\n      return <div className=\"text-right font-medium\">{formatted}</div>\r\n    },\r\n  },\r\n  {\r\n    id: \"actions\",\r\n    enableHiding: false,\r\n    cell: ({ row }) => {\r\n      const payment = row.original\r\n\r\n      return (\r\n        <DropdownMenu>\r\n          <DropdownMenuTrigger asChild>\r\n            <Button variant=\"quiet\" className=\"h-8 w-8 p-0\">\r\n              <span className=\"sr-only\">Open menu</span>\r\n              <MoreHorizontal className=\"h-4 w-4\" />\r\n            </Button>\r\n          </DropdownMenuTrigger>\r\n          <DropdownMenuContent align=\"end\">\r\n            <DropdownMenuLabel>Actions</DropdownMenuLabel>\r\n            <DropdownMenuItem\r\n              onClick={() => navigator.clipboard.writeText(payment.id)}\r\n            >\r\n              Copy payment ID\r\n            </DropdownMenuItem>\r\n            <DropdownMenuSeparator />\r\n            <DropdownMenuItem>View customer</DropdownMenuItem>\r\n            <DropdownMenuItem>View payment details</DropdownMenuItem>\r\n          </DropdownMenuContent>\r\n        </DropdownMenu>\r\n      )\r\n    },\r\n  },\r\n]\r\n\r\nexport default function DataTableDemo() {\r\n  const [sorting, setSorting] = React.useState<SortingState>([])\r\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>(\r\n    []\r\n  )\r\n  const [columnVisibility, setColumnVisibility] =\r\n    React.useState<VisibilityState>({})\r\n  const [rowSelection, setRowSelection] = React.useState({})\r\n\r\n  const table = useReactTable({\r\n    data,\r\n    columns,\r\n    onSortingChange: setSorting,\r\n    onColumnFiltersChange: setColumnFilters,\r\n    getCoreRowModel: getCoreRowModel(),\r\n    getPaginationRowModel: getPaginationRowModel(),\r\n    getSortedRowModel: getSortedRowModel(),\r\n    getFilteredRowModel: getFilteredRowModel(),\r\n    onColumnVisibilityChange: setColumnVisibility,\r\n    onRowSelectionChange: setRowSelection,\r\n    state: {\r\n      sorting,\r\n      columnFilters,\r\n      columnVisibility,\r\n      rowSelection,\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className=\"w-full\">\r\n      <div className=\"flex items-center py-4\">\r\n        <TextField\r\n          placeholder=\"Filter emails...\"\r\n          value={(table.getColumn(\"email\")?.getFilterValue() as string) ?? \"\"}\r\n          onChange={(event) =>\r\n            table.getColumn(\"email\")?.setFilterValue(event.target.value)\r\n          }\r\n          className=\"max-w-sm\"\r\n        />\r\n        <DropdownMenu>\r\n          <DropdownMenuTrigger asChild>\r\n            <Button variant=\"outline\" className=\"ml-auto\">\r\n              Columns <ChevronDown className=\"ml-2 h-4 w-4\" />\r\n            </Button>\r\n          </DropdownMenuTrigger>\r\n          <DropdownMenuContent align=\"end\">\r\n            {table\r\n              .getAllColumns()\r\n              .filter((column) => column.getCanHide())\r\n              .map((column) => {\r\n                return (\r\n                  <DropdownMenuCheckboxItem\r\n                    key={column.id}\r\n                    className=\"capitalize\"\r\n                    checked={column.getIsVisible()}\r\n                    onCheckedChange={(value) =>\r\n                      column.toggleVisibility(!!value)\r\n                    }\r\n                  >\r\n                    {column.id}\r\n                  </DropdownMenuCheckboxItem>\r\n                )\r\n              })}\r\n          </DropdownMenuContent>\r\n        </DropdownMenu>\r\n      </div>\r\n      <div className=\"rounded-md border\">\r\n        <Table>\r\n          <TableHeader>\r\n            {table.getHeaderGroups().map((headerGroup) => (\r\n              <TableRow key={headerGroup.id}>\r\n                {headerGroup.headers.map((header) => {\r\n                  return (\r\n                    <TableHead key={header.id}>\r\n                      {header.isPlaceholder\r\n                        ? null\r\n                        : flexRender(\r\n                            header.column.columnDef.header,\r\n                            header.getContext()\r\n                          )}\r\n                    </TableHead>\r\n                  )\r\n                })}\r\n              </TableRow>\r\n            ))}\r\n          </TableHeader>\r\n          <TableBody>\r\n            {table.getRowModel().rows?.length ? (\r\n              table.getRowModel().rows.map((row) => (\r\n                <TableRow\r\n                  key={row.id}\r\n                  data-state={row.getIsSelected() && \"selected\"}\r\n                >\r\n                  {row.getVisibleCells().map((cell) => (\r\n                    <TableCell key={cell.id}>\r\n                      {flexRender(\r\n                        cell.column.columnDef.cell,\r\n                        cell.getContext()\r\n                      )}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              ))\r\n            ) : (\r\n              <TableRow>\r\n                <TableCell\r\n                  colSpan={columns.length}\r\n                  className=\"h-24 text-center\"\r\n                >\r\n                  No results.\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n      <div className=\"flex items-center justify-end space-x-2 py-4\">\r\n        <div className=\"flex-1 text-sm text-muted-foreground\">\r\n          {table.getFilteredSelectedRowModel().rows.length} of{\" \"}\r\n          {table.getFilteredRowModel().rows.length} row(s) selected.\r\n        </div>\r\n        <div className=\"space-x-2\">\r\n          <Button\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            onClick={() => table.previousPage()}\r\n            disabled={!table.getCanPreviousPage()}\r\n          >\r\n            Previous\r\n          </Button>\r\n          <Button\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            onClick={() => table.nextPage()}\r\n            disabled={!table.getCanNextPage()}\r\n          >\r\n            Next\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"}]
  },
  "demos/components/core/react/draggable/resizable/default": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/draggable/resizable/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\r\n\r\nimport { ResizableHandle, ResizablePanel, ResizablePanelGroup } from \"@/lib/components/core/default/react/draggable/resizable\";\r\n\r\n  export default function ResizableDemo() {\r\n    return (\r\n      <ResizablePanelGroup\r\n        direction=\"horizontal\"\r\n        className=\"max-w-md rounded-lg border\"\r\n      >\r\n        <ResizablePanel defaultSize={50}>\r\n          <div className=\"flex h-[200px] items-center justify-center p-6\">\r\n            <span className=\"font-semibold\">One</span>\r\n          </div>\r\n        </ResizablePanel>\r\n        <ResizableHandle />\r\n        <ResizablePanel defaultSize={50}>\r\n          <ResizablePanelGroup direction=\"vertical\">\r\n            <ResizablePanel defaultSize={25}>\r\n              <div className=\"flex h-full items-center justify-center p-6\">\r\n                <span className=\"font-semibold\">Two</span>\r\n              </div>\r\n            </ResizablePanel>\r\n            <ResizableHandle />\r\n            <ResizablePanel defaultSize={75}>\r\n              <div className=\"flex h-full items-center justify-center p-6\">\r\n                <span className=\"font-semibold\">Three</span>\r\n              </div>\r\n            </ResizablePanel>\r\n          </ResizablePanelGroup>\r\n        </ResizablePanel>\r\n      </ResizablePanelGroup>\r\n    )\r\n  }\r\n  "}]
  },
  "demos/components/core/react/draggable/resizable/direction": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/draggable/resizable/direction")),
    code: [{"title":"direction.tsx","code":"import { ResizableHandle, ResizablePanel, ResizablePanelGroup } from \"@/lib/components/core/default/react/draggable/resizable\";\r\n\r\n  export default function ResizableDemo() {\r\n    return (\r\n      <ResizablePanelGroup\r\n        direction=\"vertical\"\r\n        className=\"min-h-[200px] max-w-md rounded-lg border\"\r\n      >\r\n        <ResizablePanel defaultSize={25}>\r\n          <div className=\"flex h-full items-center justify-center p-6\">\r\n            <span className=\"font-semibold\">Header</span>\r\n          </div>\r\n        </ResizablePanel>\r\n        <ResizableHandle />\r\n        <ResizablePanel defaultSize={75}>\r\n          <div className=\"flex h-full items-center justify-center p-6\">\r\n            <span className=\"font-semibold\">Content</span>\r\n          </div>\r\n        </ResizablePanel>\r\n      </ResizablePanelGroup>\r\n    )\r\n  }\r\n  "}]
  },
  "demos/components/core/react/draggable/resizable/handle": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/draggable/resizable/handle")),
    code: [{"title":"handle.tsx","code":"import { ResizableHandle, ResizablePanel, ResizablePanelGroup } from \"@/lib/components/core/default/react/draggable/resizable\";\r\n\r\n  export default function ResizableDemo() {\r\n    return (\r\n      <ResizablePanelGroup\r\n        direction=\"horizontal\"\r\n        className=\"min-h-[200px] max-w-md rounded-lg border\"\r\n      >\r\n        <ResizablePanel defaultSize={25}>\r\n          <div className=\"flex h-full items-center justify-center p-6\">\r\n            <span className=\"font-semibold\">Sidebar</span>\r\n          </div>\r\n        </ResizablePanel>\r\n        <ResizableHandle withHandle />\r\n        <ResizablePanel defaultSize={75}>\r\n          <div className=\"flex h-full items-center justify-center p-6\">\r\n            <span className=\"font-semibold\">Content</span>\r\n          </div>\r\n        </ResizablePanel>\r\n      </ResizablePanelGroup>\r\n    )\r\n  }\r\n  "}]
  },
  "demos/components/core/react/feedback/skeleton/card": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/feedback/skeleton/card")),
    code: [{"title":"card.tsx","code":"import { Skeleton } from \"@/lib/components/core/default/react/feedback/skeleton\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <Skeleton className=\"h-44 w-64\" />\r\n      <div className=\"flex items-center space-x-4\">\r\n        <Skeleton className=\"size-10 rounded-full\" />\r\n        <div className=\"space-y-2\">\r\n          <Skeleton className=\"h-4 w-44\" />\r\n          <Skeleton className=\"h-4 w-36\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/components/core/react/feedback/skeleton/children": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/feedback/skeleton/children")),
    code: [{"title":"children.tsx","code":"import { Button } from \"@/lib/components/core/default/react/buttons/button\";\r\nimport { Skeleton } from \"@/lib/components/core/default/react/feedback/skeleton\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Skeleton>\r\n      <Button>Button</Button>\r\n    </Skeleton>\r\n  );\r\n}\r\n"}]
  },
  "demos/components/core/react/feedback/skeleton/show": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/feedback/skeleton/show")),
    code: [{"title":"show.tsx","code":"import { Button } from \"@/lib/components/core/default/react/buttons/button\";\r\nimport { Skeleton } from \"@/lib/components/core/default/react/feedback/skeleton\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <Skeleton>\r\n        <Button>Button</Button>\r\n      </Skeleton>\r\n      <Skeleton show={false}>\r\n        <Button>Button</Button>\r\n      </Skeleton>\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/components/core/react/feedback/skeleton/api-simulation": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/feedback/skeleton/api-simulation")),
    code: [{"title":"api-simulation.tsx","code":"\"use client\";\r\n\r\nimport { Button } from \"@/lib/components/core/default/react/buttons/button\";\r\nimport { Skeleton } from \"@/lib/components/core/default/react/feedback/skeleton\";\r\nimport React from \"react\";\r\n\r\nexport default function Demo() {\r\n  const [status, setStatus] = React.useState<\r\n    \"idle\" | \"loading\" | \"error\" | \"success\"\r\n  >(\"idle\");\r\n  const apiCall = () => {\r\n    setStatus(\"loading\");\r\n    setTimeout(() => {\r\n      setStatus(\"success\");\r\n    }, 4000);\r\n  };\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <Button isLoading={status === \"loading\"} onClick={apiCall}>\r\n        Simulate API Call\r\n      </Button>\r\n      <Skeleton show={status === \"loading\"}>\r\n        <p>Some text loaded from API.</p>\r\n      </Skeleton>\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/components/core/react/feedback/skeleton/fixed-size-children": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/feedback/skeleton/fixed-size-children")),
    code: [{"title":"fixed-size-children.tsx","code":"import { Button } from \"@/lib/components/core/default/react/buttons/button\";\r\nimport { Skeleton } from \"@/lib/components/core/default/react/feedback/skeleton\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Skeleton className=\"size-20\">\r\n      <Button>Button</Button>\r\n    </Skeleton>\r\n  );\r\n}\r\n"}]
  },
  "demos/components/core/react/feedback/slider/default": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/feedback/slider/default")),
    code: [{"title":"default.tsx","code":"import { Slider } from \"@/lib/components/core/default/react/feedback/slider\";\r\n\r\nexport default function SliderDemo() {\r\n   return (\r\n      <Slider\r\n         defaultValue={[50]}\r\n         max={100}\r\n         step={1}\r\n         className='w-3/5'\r\n      />\r\n   )\r\n}\r\n"}]
  },
  "demos/components/core/react/feedback/slider/disabled": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/feedback/slider/disabled")),
    code: [{"title":"disabled.tsx","code":"import { Slider } from \"@/lib/components/core/default/react/feedback/slider\";\r\n\r\nexport default function SliderDemo() {\r\n   return (\r\n      <Slider\r\n         defaultValue={[50]}\r\n         max={100}\r\n         step={1}\r\n         className='w-3/5'\r\n         disabled\r\n      />\r\n   )\r\n}\r\n"}]
  },
  "demos/components/core/react/feedback/slider/inverted": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/feedback/slider/inverted")),
    code: [{"title":"inverted.tsx","code":"import { Slider } from \"@/lib/components/core/default/react/feedback/slider\";\r\n\r\nexport default function SliderDemo() {\r\n   return (\r\n      <Slider\r\n         defaultValue={[50]}\r\n         max={100}\r\n         step={1}\r\n         className='w-3/5'\r\n         inverted\r\n      />\r\n   )\r\n}\r\n"}]
  },
  "demos/components/core/react/feedback/slider/orientation": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/feedback/slider/orientation")),
    code: [{"title":"orientation.tsx","code":"import { Slider } from \"@/lib/components/core/default/react/feedback/slider\";\r\n\r\nexport default function SliderDemo() {\r\n   return (\r\n      <div className=\"h-64\">\r\n         <Slider\r\n            defaultValue={[50]}\r\n            max={100}\r\n            step={1}\r\n            className='w-3/5'\r\n            orientation=\"vertical\"\r\n         />\r\n      </div>\r\n   )\r\n}\r\n"}]
  },
  "demos/components/core/react/feedback/slider/range": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/feedback/slider/range")),
    code: [{"title":"range.tsx","code":"import { Slider } from \"@/lib/components/core/default/react/feedback/slider\";\r\n\r\nexport default function SliderDemo() {\r\n   return (\r\n      <Slider\r\n         defaultValue={[25, 75]}\r\n         max={100}\r\n         step={1}\r\n         className='w-3/5'\r\n      />\r\n   )\r\n}\r\n"}]
  },
  "demos/components/core/react/feedback/slider/half-tick-marks": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/feedback/slider/half-tick-marks")),
    code: [{"title":"half-tick-marks.tsx","code":"import { Slider } from \"@/lib/components/core/default/react/feedback/slider\";\r\n\r\nexport default function SliderDemo() {\r\n   return (\r\n      <Slider\r\n         defaultValue={[2]}\r\n         max={100}\r\n         step={1}\r\n         className='w-3/5'\r\n         showSteps=\"half\"\r\n      />\r\n   )\r\n}\r\n"}]
  },
  "demos/components/core/react/feedback/slider/full-tick-marks": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/feedback/slider/full-tick-marks")),
    code: [{"title":"full-tick-marks.tsx","code":"import { Slider } from \"@/lib/components/core/default/react/feedback/slider\";\r\n\r\nexport default function SliderDemo() {\r\n   return (\r\n      <Slider\r\n         defaultValue={[2]}\r\n         max={100}\r\n         step={1}\r\n         className='w-3/5'\r\n         showSteps=\"full\"\r\n      />\r\n   )\r\n}\r\n"}]
  },
  "demos/components/core/react/feedback/slider/format-label": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/feedback/slider/format-label")),
    code: [{"title":"format-label.tsx","code":"import { Slider } from \"@/lib/components/core/default/react/feedback/slider\";\r\n\r\nexport default function SliderDemo() {\r\n   return (\r\n      <Slider\r\n         defaultValue={[2]}\r\n         max={100}\r\n         step={1}\r\n         className='w-3/5'\r\n         formatLabel={value => `${value} points`}\r\n      />\r\n   )\r\n}\r\n"}]
  },
  "demos/components/core/react/feedback/slider/format-label-side": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/feedback/slider/format-label-side")),
    code: [{"title":"format-label-side.tsx","code":"import { Slider } from \"@/lib/components/core/default/react/feedback/slider\";\r\n\r\nexport default function SliderDemo() {\r\n   return (\r\n      <Slider\r\n         defaultValue={[2]}\r\n         max={100}\r\n         step={1}\r\n         className='w-3/5'\r\n         formatLabel={value => `${value} points`}\r\n         formatLabelSide=\"left\"\r\n      />\r\n   )\r\n}\r\n"}]
  },
  "demos/components/core/react/layout/aspect-ratio/default": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/layout/aspect-ratio/default")),
    code: [{"title":"default.tsx","code":"import { AspectRatio } from \"@/lib/components/core/default/react/layout/aspect-ratio\";\r\nimport Image from \"next/image\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <AspectRatio ratio={16 / 9}>\r\n      <Image\r\n        src=\"https://images.unsplash.com/photo-1588345921523-c2dcdb7f1dcd?w=800&dpr=2&q=80\"\r\n        alt=\"Photo by Drew Beamer\"\r\n        fill\r\n        className=\"rounded-md object-cover\"\r\n      />\r\n    </AspectRatio>\r\n  );\r\n}\r\n"}]
  },
  "demos/components/core/react/layout/aspect-ratio/as-child": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/layout/aspect-ratio/as-child")),
    code: [{"title":"as-child.tsx","code":"import { AspectRatio } from \"@/lib/components/core/default/react/layout/aspect-ratio\";\r\nimport Image from \"next/image\";\r\n\r\nexport default function AspectRatioDemo() {\r\n  return (\r\n    <AspectRatio ratio={16 / 9} asChild>\r\n      <Image\r\n        src=\"https://images.unsplash.com/photo-1588345921523-c2dcdb7f1dcd?w=800&dpr=2&q=80\"\r\n        alt=\"Photo by Drew Beamer\"\r\n        fill\r\n        className=\"rounded-md object-cover\"\r\n      />\r\n    </AspectRatio>\r\n  );\r\n}\r\n"}]
  },
  "demos/components/core/react/layout/scroll-area/default": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/layout/scroll-area/default")),
    code: [{"title":"default.tsx","code":"import { ScrollArea } from \"@/lib/components/core/default/react/layout/scroll-area\";\r\nimport * as React from \"react\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"rounded-md border p-6\">\r\n      <ScrollArea className=\"h-72 w-full max-w-sm\" type=\"always\">\r\n        <div className=\"space-y-4 p-4 pr-8\">\r\n          <h4 className=\"text-md font-bold\">\r\n            Principles of the typographic craft\r\n          </h4>\r\n          <p>\r\n            Three fundamental aspects of typography are legibility, readability,\r\n            and aesthetics. Although in a non-technical sense “legible” and\r\n            “readable” are often used synonymously, typographically they are\r\n            separate but related concepts.\r\n          </p>\r\n          <p>\r\n            Legibility describes how easily individual characters can be\r\n            distinguished from one another. It is described by Walter Tracy as\r\n            “the quality of being decipherable and recognisable”. For instance,\r\n            if a “b” and an “h”, or a “3” and an “8”, are difficult to\r\n            distinguish at small sizes, this is a problem of legibility.\r\n          </p>\r\n          <p>\r\n            Typographers are concerned with legibility insofar as it is their\r\n            job to select the correct font to use. Brush Script is an example of\r\n            a font containing many characters that might be difficult to\r\n            distinguish. The selection of cases influences the legibility of\r\n            typography because using only uppercase letters (all-caps) reduces\r\n            legibility.\r\n          </p>\r\n        </div>\r\n      </ScrollArea>\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/components/core/react/layout/scroll-area/sizes": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/layout/scroll-area/sizes")),
    code: [{"title":"sizes.tsx","code":"import { ScrollArea } from \"@/lib/components/core/default/react/layout/scroll-area\";\r\nimport * as React from \"react\";\r\n\r\nconst sizes = [\"sm\", \"md\", \"lg\"] as const;\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"grid grid-cols-3 gap-10\">\r\n      {sizes.map((size) => (\r\n        <div key={size} className=\"rounded-md border p-3\">\r\n          <ScrollArea size={size} className=\"h-72\" type=\"always\">\r\n            <div className=\"space-y-4 p-4 pr-8\">\r\n              <h4 className=\"text-md font-bold\">\r\n                Principles of the typographic craft\r\n              </h4>\r\n              <p>\r\n                Three fundamental aspects of typography are legibility,\r\n                readability, and aesthetics. Although in a non-technical sense\r\n                “legible” and “readable” are often used synonymously,\r\n                typographically they are separate but related concepts.\r\n              </p>\r\n              <p>\r\n                Legibility describes how easily individual characters can be\r\n                distinguished from one another. It is described by Walter Tracy\r\n                as “the quality of being decipherable and recognisable”. For\r\n                instance, if a “b” and an “h”, or a “3” and an “8”, are\r\n                difficult to distinguish at small sizes, this is a problem of\r\n                legibility.\r\n              </p>\r\n              <p>\r\n                Typographers are concerned with legibility insofar as it is\r\n                their job to select the correct font to use. Brush Script is an\r\n                example of a font containing many characters that might be\r\n                difficult to distinguish. The selection of cases influences the\r\n                legibility of typography because using only uppercase letters\r\n                (all-caps) reduces legibility.\r\n              </p>\r\n            </div>\r\n          </ScrollArea>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/components/core/react/layout/scroll-area/variants": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/layout/scroll-area/variants")),
    code: [{"title":"variants.tsx","code":"import { ScrollArea } from \"@/lib/components/core/default/react/layout/scroll-area\";\r\nimport * as React from \"react\";\r\n\r\nconst variants = [\"default\", \"primary\", \"secondary\"] as const;\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"grid grid-cols-3 gap-10\">\r\n      {variants.map((variant) => (\r\n        <div key={variant} className=\"rounded-md border p-3\">\r\n          <ScrollArea variant={variant} className=\"h-72\" type=\"always\">\r\n            <div className=\"space-y-4 p-4 pr-8\">\r\n              <h4 className=\"text-md font-bold\">\r\n                Principles of the typographic craft\r\n              </h4>\r\n              <p>\r\n                Three fundamental aspects of typography are legibility,\r\n                readability, and aesthetics. Although in a non-technical sense\r\n                “legible” and “readable” are often used synonymously,\r\n                typographically they are separate but related concepts.\r\n              </p>\r\n              <p>\r\n                Legibility describes how easily individual characters can be\r\n                distinguished from one another. It is described by Walter Tracy\r\n                as “the quality of being decipherable and recognisable”. For\r\n                instance, if a “b” and an “h”, or a “3” and an “8”, are\r\n                difficult to distinguish at small sizes, this is a problem of\r\n                legibility.\r\n              </p>\r\n              <p>\r\n                Typographers are concerned with legibility insofar as it is\r\n                their job to select the correct font to use. Brush Script is an\r\n                example of a font containing many characters that might be\r\n                difficult to distinguish. The selection of cases influences the\r\n                legibility of typography because using only uppercase letters\r\n                (all-caps) reduces legibility.\r\n              </p>\r\n            </div>\r\n          </ScrollArea>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/components/core/react/layout/scroll-area/scrollbars": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/layout/scroll-area/scrollbars")),
    code: [{"title":"scrollbars.tsx","code":"\"use client\";\r\n\r\nimport {\r\n  ScrollArea,\r\n  ScrollAreaProps,\r\n} from \"@/lib/components/core/default/react/layout/scroll-area\";\r\nimport * as React from \"react\";\r\n// import { Radio, RadioGroup } from \"@/lib/components/core/default/radio-group\";\r\n\r\nexport default function Demo() {\r\n  const [scrollbars, setScrollbars] = React.useState(\"vertical\");\r\n  return (\r\n    <div className=\"flex items-center gap-10\">\r\n      <div className=\"rounded-md border p-6\">\r\n        <ScrollArea\r\n          scrollbars={scrollbars as ScrollAreaProps[\"scrollbars\"]}\r\n          className=\"h-44 w-full max-w-sm\"\r\n          type=\"always\"\r\n        >\r\n          <div className=\"flex w-[500px] items-start gap-4\">\r\n            <div className=\"space-y-4 p-4 pr-8\">\r\n              <h4 className=\"text-md font-bold\">\r\n                Principles of the typographic craft\r\n              </h4>\r\n              <p>\r\n                Three fundamental aspects of typography are legibility,\r\n                readability, and aesthetics. Although in a non-technical sense\r\n                “legible” and “readable” are often used synonymously,\r\n                typographically they are separate but related concepts.\r\n              </p>\r\n              <p>\r\n                Legibility describes how easily individual characters can be\r\n                distinguished from one another. It is described by Walter Tracy\r\n                as “the quality of being decipherable and recognisable”. For\r\n                instance, if a “b” and an “h”, or a “3” and an “8”, are\r\n                difficult to distinguish at small sizes, this is a problem of\r\n                legibility.\r\n              </p>\r\n              <p>\r\n                Typographers are concerned with legibility insofar as it is\r\n                their job to select the correct font to use. Brush Script is an\r\n                example of a font containing many characters that might be\r\n                difficult to distinguish. The selection of cases influences the\r\n                legibility of typography because using only uppercase letters\r\n                (all-caps) reduces legibility.\r\n              </p>\r\n            </div>\r\n            <div className=\"space-y-4 p-4 pr-8\">\r\n              <h4 className=\"text-md font-bold\">\r\n                Principles of the typographic craft\r\n              </h4>\r\n              <p>\r\n                Three fundamental aspects of typography are legibility,\r\n                readability, and aesthetics. Although in a non-technical sense\r\n                “legible” and “readable” are often used synonymously,\r\n                typographically they are separate but related concepts.\r\n              </p>\r\n              <p>\r\n                Legibility describes how easily individual characters can be\r\n                distinguished from one another. It is described by Walter Tracy\r\n                as “the quality of being decipherable and recognisable”. For\r\n                instance, if a “b” and an “h”, or a “3” and an “8”, are\r\n                difficult to distinguish at small sizes, this is a problem of\r\n                legibility.\r\n              </p>\r\n              <p>\r\n                Typographers are concerned with legibility insofar as it is\r\n                their job to select the correct font to use. Brush Script is an\r\n                example of a font containing many characters that might be\r\n                difficult to distinguish. The selection of cases influences the\r\n                legibility of typography because using only uppercase letters\r\n                (all-caps) reduces legibility.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </ScrollArea>\r\n      </div>\r\n      {/* <RadioGroup label=\"Scrollbars\" value={scrollbars} onChange={setScrollbars}>\r\n        <Radio value=\"vertical\">Vertical</Radio>\r\n        <Radio value=\"horizontal\">Horizontal</Radio>\r\n        <Radio value=\"both\">Both</Radio>\r\n      </RadioGroup> */}\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/components/core/vue/button/default": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/button/default")),
    code: [{"title":"default.vue","code":"<script setup lang=\"ts\">\r\nimport Button from '@/lib/components/core/default/vue/button.vue';\r\n</script>\r\n\r\n<template>\r\n  <Button>Button</Button>\r\n</template>"}]
  },
  "demos/components/core/vue/button/variants": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/button/variants")),
    code: [{"title":"variants.vue","code":"<script setup lang=\"ts\">\r\nimport Button from '@/lib/components/core/default/vue/button.vue';\r\n\r\nconst variants = [\r\n  \"default\",\r\n  \"primary\",\r\n  \"secondary\",\r\n  \"outline\",\r\n  \"quiet\",\r\n  \"success\",\r\n  \"warning\",\r\n  \"danger\",\r\n] as const;\r\n</script>\r\n\r\n\r\n<template>\r\n  <div class=\"grid grid-cols-4 gap-2\">\r\n    <Button v-for=\"variant in variants\" :key=\"variant\" :variant=\"variant\">\r\n      {{ variant }}\r\n    </Button>\r\n  </div>\r\n</template>\r\n"}]
  },
  "demos/components/core/vue/button/sizes": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/button/sizes")),
    code: [{"title":"sizes.vue","code":"<script setup lang=\"ts\">\r\nimport Button from '@/lib/components/core/default/vue/button.vue';\r\n</script>\r\n\r\n<template>\r\n    <div className=\"flex w-full items-center justify-center gap-4\">\r\n      <Button size=\"sm\">Button</Button>\r\n      <Button size=\"md\">Button</Button>\r\n      <Button size=\"lg\">Button</Button>\r\n    </div>\r\n</template>"}]
  },
  "demos/components/core/vue/button/shapes": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/button/shapes")),
    code: [{"title":"shapes.vue","code":"<script setup lang=\"ts\">\r\nimport Button from '@/lib/components/core/default/vue/button.vue';\r\nimport { UploadIcon } from \"@/lib/icons\";\r\n</script>\r\n\r\n<template>\r\n  <div className=\"flex items-center justify-center gap-4\">\r\n    <Button size=\"sm\" shape=\"square\" aria-label=\"upload\">\r\n      <UploadIcon />\r\n    </Button>\r\n    <Button size=\"md\" shape=\"square\" aria-label=\"upload\">\r\n      <UploadIcon />\r\n    </Button>\r\n    <Button size=\"lg\" shape=\"square\" aria-label=\"upload\">\r\n      <UploadIcon />\r\n    </Button>\r\n    <Button size=\"sm\" shape=\"circle\" aria-label=\"upload\">\r\n      <UploadIcon />\r\n    </Button>\r\n    <Button size=\"md\" shape=\"circle\" aria-label=\"upload\">\r\n      <UploadIcon />\r\n    </Button>\r\n    <Button size=\"lg\" shape=\"circle\" aria-label=\"upload\">\r\n      <UploadIcon />\r\n    </Button>\r\n  </div>\r\n</template>"}]
  },
  "demos/components/core/vue/button/prefix-and-suffix": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/button/prefix-and-suffix")),
    code: [{"title":"prefix-and-suffix.vue","code":"<script setup lang=\"ts\">\r\nimport Button from '@/lib/components/core/default/vue/button.vue';\r\nimport { UploadIcon } from \"@/lib/icons\";\r\n</script>\r\n\r\n<template>\r\n  <div className=\"flex items-center gap-2\">\r\n    <Button :prefix=\"UploadIcon\">\r\n      Button\r\n    </Button>\r\n    <Button :suffix=\"UploadIcon\">\r\n      Button\r\n    </Button>\r\n  </div>\r\n</template>\r\n"}]
  },
  "demos/components/core/vue/button/loading": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/button/loading")),
    code: [{"title":"loading.vue","code":"<script setup lang=\"ts\">\r\nimport Button from '@/lib/components/core/default/vue/button.vue';\r\nimport { ref } from 'vue';\r\nconst someVariable = ref(5);\r\n</script>\r\n\r\n<template>\r\n  <div className=\"flex w-full items-center justify-center gap-2\">\r\n    <Button size=\"sm\" :isLoading=\"someVariable === 5\">\r\n      Button\r\n    </Button>\r\n    <Button size=\"md\" isLoading>\r\n      Button\r\n    </Button>\r\n    <Button size=\"lg\" isLoading>\r\n      Button\r\n    </Button>\r\n  </div>\r\n</template>\r\n"}]
  },
  "demos/components/core/vue/button/disabled": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/button/disabled")),
    code: [{"title":"disabled.vue","code":"<script setup lang=\"ts\">\r\nimport Button from '@/lib/components/core/default/vue/button.vue';\r\nimport { ref } from 'vue';\r\nconst someVariable = ref(5);\r\n</script>\r\n\r\n<template>\r\n  <Button :isDisabled=\"someVariable === 5\">Button</Button>\r\n</template>\r\n"}]
  },
  "demos/components/core/vue/button/link-button": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/button/link-button")),
    code: [{"title":"link-button.vue","code":"<script setup lang=\"ts\">\r\nimport Button from '@/lib/components/core/default/vue/button.vue';\r\nimport { LinkIcon } from '@/lib/icons';\r\n</script>\r\n\r\n<template>\r\n  <Button href=\"/login\" target=\"_blank\" :prefix=\"LinkIcon\">\r\n    Login\r\n  </Button>\r\n</template>"}]
  },
};
