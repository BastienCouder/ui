{
  "name": "toggle",
  "type": "registry:ui",
  "files": [
    {
      "path": "ui/react/toggle.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\";\nimport { tv, type VariantProps } from \"tailwind-variants\";\nimport { cn } from \"@/lib/utils\";\n\nconst toggleStyles = tv({\n  base: \"inline-flex items-center justify-center gap-2 rounded-md leading-normal text-sm font-medium ring-offset-background transition-colors disabled:cursor-default disabled:opacity-50 disabled:bg-background\",\n  variants: {\n    variant: {\n      quiet:\n        \"bg-transparent hover:bg-neutral/40 active:bg-neutral/20 text-foreground data-[state=on]:bg-primary data-[state=on]:text-primary-foreground data-[state=on]:hover:bg-primary data-[state=on]:active:bg-primary\",\n      outline:\n        \"border border-border-field bg-transparent hover:bg-neutral/40 active:bg-neutral/20 active:border-transparent text-foreground data-[state=on]:bg-primary data-[state=on]:border-transparent data-[state=on]:text-primary-foreground data-[state=on]:hover:bg-primary data-[state=on]:active:bg-primary\",\n      accent:\n        \"border border-border-field bg-transparent hover:bg-neutral/40 active:bg-neutral/20 active:border-transparent text-foreground data-[state=on]:bg-accent data-[state=on]:border-transparent data-[state=on]:hover:bg-accent data-[state=on]:active:bg-accent data-[state=on]:text-accent-foreground\",\n    },\n    size: {\n      sm: \"p-1.5 w-8 h-8 [&_svg]:w-4 [&_svg]:h-4\",\n      md: \"p-2 w-9 h-9 [&_svg]:w-4 [&_svg]:h-4\",\n      lg: \"p-2 w-10 h-10 [&_svg]:w-5 [&_svg]:h-5\",\n    },\n    shape: {\n      rectangle: \"\",\n      square: \"\",\n      circle: \"rounded-full\",\n    },\n  },\n  compoundVariants: [\n    {\n      size: \"sm\",\n      shape: \"rectangle\",\n      className: \"px-3 w-auto\",\n    },\n    {\n      size: \"md\",\n      shape: \"rectangle\",\n      className: \"px-4 w-auto\",\n    },\n    {\n      size: \"lg\",\n      shape: \"rectangle\",\n      className: \"px-5 w-auto\",\n    },\n  ],\n  defaultVariants: {\n    variant: \"quiet\",\n    size: \"md\",\n    shape: \"square\",\n  },\n});\n\ninterface ToggleProps\n  extends Omit<\n      React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root>,\n      \"prefix\" | \"onChange\"\n    >,\n    VariantProps<typeof toggleStyles> {\n  children: React.ReactNode;\n  className?: string;\n  prefix?: React.ReactNode;\n  suffix?: React.ReactNode;\n  isDisabled?: boolean;\n  defaultSelected?: boolean;\n  isSelected?: boolean;\n  onPressedChange?: (isSelected: boolean) => void;\n}\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  ToggleProps\n>((props: ToggleProps, ref: React.ForwardedRef<HTMLButtonElement>) => {\n  const {\n    className,\n    variant,\n    size,\n    shape,\n    prefix,\n    isDisabled,\n    suffix,\n    defaultSelected,\n    isSelected,\n    onPressedChange,\n    ...restProps\n  } = props;\n\n  return (\n    <TogglePrimitive.Root\n      ref={ref}\n      disabled={isDisabled}\n      className={cn(toggleStyles({ variant, size, shape, className }))}\n      defaultPressed={defaultSelected}\n      pressed={isSelected}\n      onPressedChange={onPressedChange}\n      {...restProps}\n    >\n      {prefix && <span className=\"mr-2\">{prefix}</span>}\n      {props.children}\n      {suffix && <span className=\"ml-2\">{suffix}</span>}\n    </TogglePrimitive.Root>\n  );\n});\n\nToggle.displayName = \"Toggle\";\n\ntype ToggleContextValue = VariantProps<typeof toggleStyles>;\nconst ToggleContext = React.createContext<ToggleContextValue>({});\nconst useToggleContext = (): ToggleContextValue => {\n  return React.useContext(ToggleContext);\n};\n\nexport type { ToggleProps };\nexport { Toggle, toggleStyles, ToggleContext, useToggleContext };\n",
      "type": "registry:ui",
      "target": "components/ui/toggle.tsx"
    }
  ]
}