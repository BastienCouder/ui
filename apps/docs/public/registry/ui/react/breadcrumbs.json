{
  "name": "breadcrumbs",
  "type": "registry:ui",
  "files": [
    {
      "path": "ui/react/breadcrumb.tsx",
      "content": "\"use client\";\n\nimport React from \"react\";\nimport { ChevronRight, ChevronDown } from \"lucide-react\";\nimport { tv } from \"tailwind-variants\";\nimport { cn } from \"@/lib/utils\";\n\nconst breadcrumbStyles = tv({\n  variants: {\n    variant: {\n      neutral: \"text-foreground hover:text-primary\",\n      active: \"text-primary font-bold\",\n    },\n    size: {\n      sm: \"text-sm [&_svg]:w-4 [&_svg]:h-4\",\n      md: \"text-base [&_svg]:w-4.5 [&_svg]:h-4.5\",\n      lg: \"text-lg [&_svg]:w-5 [&_svg]:h-5\",\n    },\n  },\n  defaultVariants: {\n    variant: \"neutral\",\n    size: \"sm\",\n  },\n});\n\ninterface BreadcrumbProps extends React.ComponentPropsWithoutRef<\"li\"> {\n  href?: string;\n  isLast?: boolean;\n  separatorIcon?: React.ReactNode;\n  orientation?: \"horizontal\" | \"vertical\";\n  disabled?: boolean;\n  className?: string;\n  itemClassName?: string;\n  variant?: \"neutral\";\n  size?: \"sm\" | \"md\" | \"lg\";\n}\n\ninterface BreadcrumbsProps extends React.ComponentPropsWithoutRef<\"nav\"> {\n  orientation?: \"horizontal\" | \"vertical\";\n  separatorIcon?: React.ReactNode;\n  className?: string;\n  listClassName?: string;\n  size?: \"sm\" | \"md\" | \"lg\";\n  variant?: \"neutral\";\n}\n\nconst Breadcrumbs = React.forwardRef<HTMLElement, BreadcrumbsProps>(\n  (\n    {\n      orientation = \"horizontal\",\n      separatorIcon,\n      children,\n      className,\n      listClassName,\n      size = \"sm\",\n      variant = \"neutral\",\n      ...props\n    },\n    ref,\n  ) => {\n    const defaultSeparatorIcon =\n      orientation === \"vertical\" ? (\n        <ChevronDown size={18} />\n      ) : (\n        <ChevronRight size={18} />\n      );\n    const effectiveSeparatorIcon = separatorIcon || defaultSeparatorIcon;\n\n    return (\n      <nav ref={ref} aria-label=\"breadcrumb\" className={className} {...props}>\n        <ol\n          className={cn(\n            \"flex\",\n            orientation === \"horizontal\"\n              ? \"flex-row items-center gap-2\"\n              : \"flex-col gap-2\",\n            listClassName,\n          )}\n        >\n          {React.Children.map(children, (child, index) => {\n            if (React.isValidElement<BreadcrumbProps>(child)) {\n              return React.cloneElement(child, {\n                isLast: index === React.Children.count(children) - 1,\n                separatorIcon: effectiveSeparatorIcon,\n                orientation,\n                size,\n                variant,\n              });\n            }\n            return child;\n          })}\n        </ol>\n      </nav>\n    );\n  },\n);\nBreadcrumbs.displayName = \"Breadcrumbs\";\n\nconst BreadcrumbItem = React.forwardRef<HTMLLIElement, BreadcrumbProps>(\n  (\n    {\n      className,\n      isLast,\n      separatorIcon,\n      orientation = \"horizontal\",\n      children,\n      ...props\n    },\n    ref,\n  ) => {\n    return (\n      <li\n        ref={ref}\n        className={cn(\n          `flex items-center ${orientation === \"vertical\" ? \"flex-col\" : \"flex-row\"} ${className}`,\n        )}\n        {...props}\n      >\n        {children}\n        {!isLast && separatorIcon && (\n          <div\n            className={cn(\n              `flex items-center ${orientation === \"vertical\"\n                ? \"mt-2 flex justify-center w-full\"\n                : \"ml-2\"\n              }`,\n            )}\n          >\n            {separatorIcon}\n          </div>\n        )}\n      </li>\n    );\n  },\n);\nBreadcrumbItem.displayName = \"BreadcrumbItem\";\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement | HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    href?: string;\n    disabled?: boolean;\n    className?: string;\n    variant?: \"neutral\";\n    size?: \"sm\" | \"md\" | \"lg\";\n  }\n>(\n  (\n    {\n      className,\n      href,\n      disabled = false,\n      variant = \"neutral\",\n      size = \"sm\",\n      children,\n      ...props\n    },\n    ref,\n  ) => {\n    const Comp: any = href && !disabled ? \"a\" : \"span\";\n    const itemClasses = breadcrumbStyles({ variant, size });\n\n    return (\n      <Comp\n        ref={ref}\n        href={href}\n        className={cn(\n          `flex items-center gap-2 ${href && !disabled\n            ? \"transition-colors hover:text-foreground\"\n            : \"font-normal text-foreground\"\n          } ${disabled ? \"pointer-events-none text-disabled-foreground\" : \"\"}`,\n          itemClasses,\n          className,\n        )}\n        {...props}\n      >\n        {children}\n      </Comp>\n    );\n  },\n);\nBreadcrumbLink.displayName = \"BreadcrumbLink\";\n\nconst Breadcrumb = React.forwardRef<HTMLLIElement, BreadcrumbProps>(\n  (\n    {\n      className,\n      itemClassName,\n      href,\n      isLast,\n      separatorIcon,\n      orientation = \"horizontal\",\n      disabled = false,\n      variant = \"neutral\",\n      size = \"sm\",\n      ...props\n    },\n    ref,\n  ) => {\n    const itemClasses = breadcrumbStyles({\n      variant: isLast ? \"active\" : variant,\n      size,\n    });\n\n    const Comp: any = href && !disabled ? \"a\" : \"span\";\n\n    return (\n      <li\n        ref={ref}\n        className={cn(\n          `flex items-center ${orientation === \"vertical\" ? \"flex-col\" : \"flex-row\"\n          } ${disabled ? \"opacity-50 cursor-not-allowed\" : \"\"}`,\n          className,\n        )}\n      >\n        <Comp\n          href={href}\n          {...props}\n          className={cn(\n            `flex items-center gap-2 ${href && !disabled\n              ? \"transition-colors hover:text-foreground\"\n              : \"font-normal text-foreground\"\n            } ${disabled ? \"pointer-events-none text-disabled-foreground\" : \"\"}`,\n            itemClasses,\n            itemClassName,\n          )}\n        >\n          {props.children}\n        </Comp>\n        {!isLast && separatorIcon && (\n          <div\n            className={cn(\n              `flex items-center ${orientation === \"vertical\"\n                ? \"mt-2 flex justify-center w-full\"\n                : \"ml-2\"\n              }`,\n              itemClasses,\n            )}\n          >\n            {separatorIcon}\n          </div>\n        )}\n      </li>\n    );\n  },\n);\nBreadcrumb.displayName = \"Breadcrumb\";\n\nexport { Breadcrumbs, Breadcrumb, BreadcrumbItem, BreadcrumbLink };\n",
      "type": "registry:ui",
      "target": "components/ui/breadcrumb.tsx"
    }
  ]
}