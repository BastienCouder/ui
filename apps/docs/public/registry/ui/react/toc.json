{
  "name": "toc",
  "files": [
    {
      "name": "toc.tsx",
      "content": "\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { tv } from \"tailwind-variants\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst tocStyles = tv({\r\n  variants: {\r\n    variant: {\r\n      neutral: \"text-fg hover:text-primary-hover\",\r\n      active: \"text-primary-active font-bold\",\r\n    },\r\n    indent: {\r\n      true: \"pl-4\",\r\n      false: \"\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    variant: \"neutral\",\r\n  },\r\n});\r\n\r\ninterface TableOfContentsProps extends React.ComponentPropsWithoutRef<\"nav\"> {\r\n  className?: string;\r\n}\r\n\r\nconst TableOfContents = React.forwardRef<HTMLElement, TableOfContentsProps>(\r\n  ({ className, children, ...props }, ref) => {\r\n    return (\r\n      <nav\r\n        ref={ref}\r\n        aria-label=\"table of contents\"\r\n        className={className}\r\n        {...props}\r\n      >\r\n        <ul className={cn(\"m-0 list-none\", \"pl-4\", className)}>{children}</ul>\r\n      </nav>\r\n    );\r\n  },\r\n);\r\nTableOfContents.displayName = \" TableOfContents\";\r\n\r\ninterface TableOfContentProps extends React.ComponentPropsWithoutRef<\"li\"> {\r\n  isActive?: boolean;\r\n  href?: string;\r\n  indent?: boolean;\r\n}\r\n\r\nconst TableOfContent = React.forwardRef<HTMLLIElement, TableOfContentProps>(\r\n  ({ className, isActive, indent = false, children, href, ...props }, ref) => {\r\n    const itemClasses = tocStyles({\r\n      variant: isActive ? \"active\" : \"neutral\",\r\n      indent,\r\n    });\r\n\r\n    return (\r\n      <li\r\n        ref={ref}\r\n        className={cn(\"mt-0 pt-2\", indent && \"ml-4\", itemClasses, className)}\r\n        {...props}\r\n      >\r\n        <a\r\n          href={href}\r\n          className={cn(\r\n            \"text-fg hover:text-primary text-sm font-medium transition-colors\",\r\n            isActive ? \"text-fg font-medium\" : \"text-muted-fg\",\r\n            className,\r\n          )}\r\n        >\r\n          {children}\r\n        </a>\r\n      </li>\r\n    );\r\n  },\r\n);\r\nTableOfContent.displayName = \" TableOfContent\";\r\n\r\ninterface TableOfContentsListProps\r\n  extends React.ComponentPropsWithoutRef<\"ul\"> {\r\n  indent?: boolean;\r\n}\r\n\r\nconst TableOfContentsList = React.forwardRef<\r\n  React.ElementRef<\"ul\">,\r\n  TableOfContentsListProps\r\n>(({ className, indent, ...props }, ref) => (\r\n  <ul\r\n    ref={ref}\r\n    className={cn(\"m-0 list-none\", indent && \"pl-4\", className)}\r\n    {...props}\r\n  />\r\n));\r\nTableOfContentsList.displayName = \"TableOfContentsList\";\r\n\r\ninterface TableOfContentsTitleProps\r\n  extends React.ComponentPropsWithoutRef<\"li\"> {}\r\n\r\nconst TableOfContentsTitle = React.forwardRef<\r\n  React.ElementRef<\"li\">,\r\n  TableOfContentsTitleProps\r\n>(({ className, ...props }, ref) => (\r\n  <li\r\n    ref={ref}\r\n    className={cn(\"mb-2 text-sm font-medium\", className)}\r\n    {...props}\r\n  />\r\n));\r\nTableOfContentsTitle.displayName = \"TableOfContentsTitle\";\r\n\r\ninterface TableOfContentsItemProps\r\n  extends React.ComponentPropsWithoutRef<\"li\"> {\r\n  indent?: boolean;\r\n}\r\n\r\nconst TableOfContentsItem = React.forwardRef<\r\n  React.ElementRef<\"li\">,\r\n  TableOfContentsItemProps\r\n>(({ className, indent, ...props }, ref) => (\r\n  <li\r\n    ref={ref}\r\n    className={cn(\"mt-0 pt-2\", indent && \"ml-4\", className)}\r\n    {...props}\r\n  />\r\n));\r\nTableOfContentsItem.displayName = \"TableOfContentsItem\";\r\n\r\ninterface TableOfContentsLinkProps extends React.ComponentPropsWithoutRef<\"a\"> {\r\n  isActive?: boolean;\r\n}\r\n\r\nconst TableOfContentsLink = React.forwardRef<\r\n  React.ElementRef<\"a\">,\r\n  TableOfContentsLinkProps\r\n>(({ className, isActive, ...props }, ref) => (\r\n  <a\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-foreground hover:text-primary text-sm font-medium transition-colors\",\r\n      isActive ? \"text-foreground font-medium\" : \"text-muted-foreground\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nTableOfContentsLink.displayName = \"TableOfContentsLink\";\r\n\r\nexport {\r\n  TableOfContents,\r\n  TableOfContent,\r\n  TableOfContentsList,\r\n  TableOfContentsTitle,\r\n  TableOfContentsItem,\r\n  TableOfContentsLink,\r\n};\r\n"
    }
  ],
  "type": "components:ui"
}