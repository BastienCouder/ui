{
  "name": "toc",
  "type": "registry:ui",
  "files": [
    {
      "path": "ui/react/toc.tsx",
      "content": "\"use client\";\n\nimport React from \"react\";\nimport { tv } from \"tailwind-variants\";\nimport { cn } from \"@/lib/utils\";\n\nconst tocStyles = tv({\n  variants: {\n    variant: {\n      neutral: \"text-fg hover:text-primary-hover\",\n      active: \"text-primary-active font-bold\",\n    },\n    indent: {\n      true: \"pl-4\",\n      false: \"\",\n    },\n  },\n  defaultVariants: {\n    variant: \"neutral\",\n  },\n});\n\ninterface TableOfContentsProps extends React.ComponentPropsWithoutRef<\"nav\"> {\n  className?: string;\n}\n\nconst TableOfContents = React.forwardRef<HTMLElement, TableOfContentsProps>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <nav\n        ref={ref}\n        aria-label=\"table of contents\"\n        className={className}\n        {...props}\n      >\n        <ul className={cn(\"m-0 list-none\", \"pl-4\", className)}>{children}</ul>\n      </nav>\n    );\n  },\n);\nTableOfContents.displayName = \" TableOfContents\";\n\ninterface TableOfContentProps extends React.ComponentPropsWithoutRef<\"li\"> {\n  isActive?: boolean;\n  href?: string;\n  indent?: boolean;\n}\n\nconst TableOfContent = React.forwardRef<HTMLLIElement, TableOfContentProps>(\n  ({ className, isActive, indent = false, children, href, ...props }, ref) => {\n    const itemClasses = tocStyles({\n      variant: isActive ? \"active\" : \"neutral\",\n      indent,\n    });\n\n    return (\n      <li\n        ref={ref}\n        className={cn(\"mt-0 pt-2\", indent && \"ml-4\", itemClasses, className)}\n        {...props}\n      >\n        <a\n          href={href}\n          className={cn(\n            \"text-fg hover:text-primary text-sm font-medium transition-colors\",\n            isActive ? \"text-fg font-medium\" : \"text-muted-fg\",\n            className,\n          )}\n        >\n          {children}\n        </a>\n      </li>\n    );\n  },\n);\nTableOfContent.displayName = \" TableOfContent\";\n\ninterface TableOfContentsListProps\n  extends React.ComponentPropsWithoutRef<\"ul\"> {\n  indent?: boolean;\n}\n\nconst TableOfContentsList = React.forwardRef<\n  React.ElementRef<\"ul\">,\n  TableOfContentsListProps\n>(({ className, indent, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"m-0 list-none\", indent && \"pl-4\", className)}\n    {...props}\n  />\n));\nTableOfContentsList.displayName = \"TableOfContentsList\";\n\ninterface TableOfContentsTitleProps\n  extends React.ComponentPropsWithoutRef<\"li\"> {}\n\nconst TableOfContentsTitle = React.forwardRef<\n  React.ElementRef<\"li\">,\n  TableOfContentsTitleProps\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"mb-2 text-sm font-medium\", className)}\n    {...props}\n  />\n));\nTableOfContentsTitle.displayName = \"TableOfContentsTitle\";\n\ninterface TableOfContentsItemProps\n  extends React.ComponentPropsWithoutRef<\"li\"> {\n  indent?: boolean;\n}\n\nconst TableOfContentsItem = React.forwardRef<\n  React.ElementRef<\"li\">,\n  TableOfContentsItemProps\n>(({ className, indent, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"mt-0 pt-2\", indent && \"ml-4\", className)}\n    {...props}\n  />\n));\nTableOfContentsItem.displayName = \"TableOfContentsItem\";\n\ninterface TableOfContentsLinkProps extends React.ComponentPropsWithoutRef<\"a\"> {\n  isActive?: boolean;\n}\n\nconst TableOfContentsLink = React.forwardRef<\n  React.ElementRef<\"a\">,\n  TableOfContentsLinkProps\n>(({ className, isActive, ...props }, ref) => (\n  <a\n    ref={ref}\n    className={cn(\n      \"text-foreground hover:text-primary text-sm font-medium transition-colors\",\n      isActive ? \"text-foreground font-medium\" : \"text-muted-foreground\",\n      className,\n    )}\n    {...props}\n  />\n));\nTableOfContentsLink.displayName = \"TableOfContentsLink\";\n\nexport {\n  TableOfContents,\n  TableOfContent,\n  TableOfContentsList,\n  TableOfContentsTitle,\n  TableOfContentsItem,\n  TableOfContentsLink,\n};\n",
      "type": "registry:ui",
      "target": "components/ui/toc.tsx"
    }
  ]
}