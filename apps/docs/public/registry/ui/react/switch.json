{
  "name": "switch",
  "dependencies": [
    "@radix-ui/react-switch"
  ],
  "files": [
    {
      "name": "switch.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { tv } from \"tailwind-variants\";\r\n\r\nconst switchStyles = tv({\r\n  base: \"focus-visible:ring-ring focus-visible:ring-offset-background peer inline-flex items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\r\n  variants: {\r\n    variant: {\r\n      neutral: \"data-[state=checked]:bg-fg data-[state=unchecked]:bg-input\",\r\n      primary:\r\n        \"data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\r\n      secondary:\r\n        \"data-[state=checked]:bg-secondary data-[state=unchecked]:bg-input\",\r\n    },\r\n    size: {\r\n      sm: \"h-4 w-8\",\r\n      md: \"h-5 w-10\",\r\n      lg: \"h-6 w-12\",\r\n    },\r\n    shape: {\r\n      rectangle: \"rounded-md\",\r\n      circle: \"rounded-full\",\r\n      square: \"rounded-none\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    variant: \"primary\",\r\n    size: \"md\",\r\n    shape: \"circle\",\r\n  },\r\n});\r\n\r\nconst thumbStyles = tv({\r\n  base: \"bg-bg pointer-events-none block rounded-full shadow-lg ring-0 transition-transform\",\r\n  variants: {\r\n    size: {\r\n      sm: \"h-3 w-3 data-[state=checked]:translate-x-4 data-[state=unchecked]:translate-x-0\",\r\n      md: \"h-4 w-4 data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\",\r\n      lg: \"h-5 w-5 data-[state=checked]:translate-x-6 data-[state=unchecked]:translate-x-0\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    size: \"md\",\r\n  },\r\n});\r\n\r\ntype SwitchProps = React.ComponentPropsWithoutRef<\r\n  typeof SwitchPrimitives.Root\r\n> & {\r\n  variant?: \"neutral\" | \"primary\" | \"secondary\";\r\n  size?: \"sm\" | \"md\" | \"lg\";\r\n  shape?: \"rectangle\" | \"circle\" | \"square\";\r\n};\r\n\r\nconst Switch = React.forwardRef<\r\n  React.ElementRef<typeof SwitchPrimitives.Root>,\r\n  SwitchProps\r\n>(({ className, variant, size, shape, ...props }, ref) => (\r\n  <SwitchPrimitives.Root\r\n    className={cn(switchStyles({ variant, size, shape }), className)}\r\n    {...props}\r\n    ref={ref}\r\n  >\r\n    <SwitchPrimitives.Thumb className={cn(thumbStyles({ size }))} />\r\n  </SwitchPrimitives.Root>\r\n));\r\n\r\nSwitch.displayName = SwitchPrimitives.Root.displayName;\r\n\r\nexport { Switch };\r\n"
    }
  ],
  "type": "components:ui"
}