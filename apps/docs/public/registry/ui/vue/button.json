{
  "name": "button",
  "type": "registry:ui",
  "files": [
    {
      "path": "ui/vue/button.vue",
      "content": "<script setup lang=\"ts\">\nimport { defineProps, withDefaults, computed, type VNode } from 'vue'\nimport type { HTMLAttributes, FunctionalComponent } from 'vue'\nimport { type PrimitiveProps } from 'radix-vue'\nimport { cn } from '@/lib/utils'\nimport { tv, type VariantProps } from 'tailwind-variants'\nimport { LoaderIcon } from \"@/lib/icons\"\n\nconst buttonStyles = tv(\n  {\n    base: \"inline-flex gap-2 cursor-pointer items-center justify-center whitespace-nowrap rounded-md leading-normal text-sm shrink-0 font-medium ring-offset-background transition-colors disabled:cursor-default disabled:bg-bg-disabled disabled:text-fg-disabled\",\n    variants: {\n      variant: {\n        default: \"bg-neutral hover:bg-neutral-hover active:bg-neutral-active text-neutral-fg\",\n        primary: \"bg-primary hover:bg-primary-hover active:bg-primary-active text-primary-fg\",\n        secondary: \"bg-secondary hover:bg-secondary-hover active:bg-secondary-active text-secondary-fg\",\n        quiet: \"bg-transparent hover:bg-neutral/10 active:bg-neutral/20 text-fg\",\n        outline: \"border border-border bg-transparent hover:bg-neutral/10 active:bg-neutral/20 text-fg disabled:border-disabled disabled:bg-transparent\",\n        success: \"bg-success hover:bg-success-hover active:bg-success-active text-success-fg\",\n        warning: \"bg-warning hover:bg-warning-hover active:bg-warning-active text-warning-fg\",\n        danger: \"bg-danger hover:bg-danger-hover active:bg-danger-active text-danger-fg\",\n      },\n      size: {\n        sm: \"h-8 px-3 [&_svg]:w-4 [&_svg]:h-4\",\n        md: \"h-9 px-4 [&_svg]:w-4 [&_svg]:h-4\",\n        lg: \"h-10 px-5 [&_svg]:w-5 [&_svg]:h-5\",\n      },\n      shape: {\n        rectangle: \"\",\n        square: \"\",\n        circle: \"rounded-full\",\n      },\n    },\n    compoundVariants: [\n      {\n        size: \"sm\",\n        shape: [\"square\", \"circle\"],\n        className: \"w-8 px-0\",\n      },\n      {\n        size: \"md\",\n        shape: [\"square\", \"circle\"],\n        className: \"w-9 px-0\",\n      },\n      {\n        size: \"lg\",\n        shape: [\"square\", \"circle\"],\n        className: \"w-10 px-0\",\n      },\n    ],\n  },\n  {\n    responsiveVariants: [\"sm\", \"lg\"],\n  }\n)\n\ntype ButtonStyles = VariantProps<typeof buttonStyles>\n\ninterface Props extends PrimitiveProps {\n  variant?: ButtonStyles['variant']\n  size?: ButtonStyles['size']\n  shape?: ButtonStyles['shape']\n  isLoading?: boolean\n  prefix?: VNode | FunctionalComponent | string\n  suffix?: VNode | FunctionalComponent | string\n  class?: HTMLAttributes['class']\n  isDisabled?: boolean\n  href?: string\n  target?: '_blank' | '_self' | '_parent' | '_top' | string\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  as: 'button',\n  variant: 'default',\n  size: 'md',\n  shape: 'rectangle',\n  isDisabled: false,\n})\n\nconst classes = computed(() => \n  cn(buttonStyles({ variant: props.variant, size: props.size, shape: props.shape }), props.class)\n)\n\nconst showLoader = computed(() => props.isLoading)\n</script>\n\n<template>\n  <component\n    :is=\"props.href ? 'a' : 'button'\"\n    :href=\"props.href || undefined\"\n    :target=\"props.target\"\n    :class=\"classes\"\n    :disabled=\"props.isDisabled\"\n  >\n    <span v-if=\"showLoader\">\n      <LoaderIcon aria-label=\"loading\" class=\"animate-spin\" />\n    </span>\n    <span v-else-if=\"props.prefix\">\n      <component :is=\"typeof props.prefix === 'string' ? 'span' : props.prefix\">\n        {{ typeof props.prefix === 'string' ? props.prefix : '' }}\n      </component>\n    </span>\n    <slot />\n    <span v-if=\"props.suffix\">\n      <component :is=\"typeof props.suffix === 'string' ? 'span' : props.suffix\">\n        {{ typeof props.suffix === 'string' ? props.suffix : '' }}\n      </component>\n    </span>\n  </component>\n</template>\n",
      "type": "registry:ui",
      "target": "components/ui/button.vue"
    }
  ]
}