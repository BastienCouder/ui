
// This file is autogenerated by scripts/build-preview-imports.ts
// Do not edit this file directly.
import React from "react";

export const previews = {
  "demos/ui/angular/button/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/button/default")),
    code: [{"title":"default.ts","code":"import { Component } from \"@angular/core\";\r\nimport { HlmButtonModule } from \"@/lib/components/angular/button/hlm-button.module\";\r\n\r\n@Component({\r\n  selector: \"button-preview\",\r\n  standalone: true,\r\n  imports: [HlmButtonModule],\r\n  template: `<Button hlmBtn>Button</Button>`,\r\n})\r\nexport class ButtonPreviewComponent {}\r\n"}]
  },
  "demos/ui/react/alert-dialog/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/alert-dialog/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\r\n\r\nimport {\r\n  AlertDialog,\r\n  AlertDialogHeader,\r\n  AlertDialogTitle,\r\n  AlertDialogDescription,\r\n  AlertDialogFooter,\r\n  AlertDialogCancel,\r\n  AlertDialogAction,\r\n} from \"@/registry/ui/react/alert-dialog\";\r\nimport { Button } from \"@/registry/ui/react/button\";\r\n\r\nexport default function AlertDialogDemo() {\r\n  const Content = () => (\r\n    <>\r\n      <AlertDialogHeader>\r\n        <AlertDialogTitle>Are you absolutely sure?</AlertDialogTitle>\r\n        <AlertDialogDescription>\r\n          This action cannot be undone. This will permanently delete your\r\n          account and remove your data from our servers.\r\n        </AlertDialogDescription>\r\n      </AlertDialogHeader>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <AlertDialog content={<Content />} cancelText=\"Cancel\" okText=\"Continue\">\r\n      <Button>Show Dialog</Button>\r\n    </AlertDialog>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/alert-dialog/text": {
    component: React.lazy(() => import("@/registry/demos/ui/react/alert-dialog/text")),
    code: [{"title":"text.tsx","code":"\"use client\";\r\n\r\nimport {\r\n  AlertDialog,\r\n  AlertDialogHeader,\r\n  AlertDialogTitle,\r\n  AlertDialogDescription,\r\n  AlertDialogFooter,\r\n  AlertDialogCancel,\r\n  AlertDialogAction,\r\n} from \"@/registry/ui/react/alert-dialog\";\r\nimport { Button } from \"@/registry/ui/react/button\";\r\n\r\nexport default function AlertDialogDemo() {\r\n  const Content = () => (\r\n    <>\r\n      <AlertDialogHeader>\r\n        <AlertDialogTitle>Are you absolutely sure?</AlertDialogTitle>\r\n        <AlertDialogDescription>\r\n          This action cannot be undone. This will permanently delete your\r\n          account and remove your data from our servers.\r\n        </AlertDialogDescription>\r\n      </AlertDialogHeader>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <AlertDialog content={<Content />} cancelText=\"No\" okText=\"Yes\">\r\n      <Button>Show Dialog</Button>\r\n    </AlertDialog>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/alert-dialog/composition": {
    component: React.lazy(() => import("@/registry/demos/ui/react/alert-dialog/composition")),
    code: [{"title":"composition.tsx","code":"\"use client\";\r\n\r\nimport {\r\n  AlertDialog,\r\n  AlertDialogTrigger,\r\n  AlertDialogContent,\r\n  AlertDialogHeader,\r\n  AlertDialogTitle,\r\n  AlertDialogDescription,\r\n  AlertDialogFooter,\r\n  AlertDialogCancel,\r\n  AlertDialogAction,\r\n} from \"@/registry/ui/react/alert-dialog\";\r\nimport { Button } from \"@/registry/ui/react/button\";\r\n\r\nexport default function AlertDialogDemo() {\r\n  return (\r\n    <AlertDialog>\r\n      <AlertDialogTrigger asChild>\r\n        <Button>Show Dialog</Button>\r\n      </AlertDialogTrigger>\r\n      <AlertDialogContent>\r\n        <AlertDialogHeader>\r\n          <AlertDialogTitle>Are you absolutely sure?</AlertDialogTitle>\r\n          <AlertDialogDescription>\r\n            This action cannot be undone. This will permanently delete your\r\n            account and remove your data from our servers.\r\n          </AlertDialogDescription>\r\n        </AlertDialogHeader>\r\n        <AlertDialogFooter>\r\n          <AlertDialogCancel>Cancel</AlertDialogCancel>\r\n          <AlertDialogAction>Continue</AlertDialogAction>\r\n        </AlertDialogFooter>\r\n      </AlertDialogContent>\r\n    </AlertDialog>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/alert/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/alert/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\r\n\r\nimport { Terminal } from \"lucide-react\";\r\n\r\nimport {\r\n  Alert,\r\n  AlertDescription,\r\n  AlertTitle,\r\n} from \"@/registry/ui/react/alert\";\r\n\r\nexport default function AlertDemo() {\r\n  return (\r\n    <Alert>\r\n      <Terminal className=\"h-4 w-4\" />\r\n      <AlertTitle>Heads up!</AlertTitle>\r\n      <AlertDescription>\r\n        You can add components to your app using the cli.\r\n      </AlertDescription>\r\n    </Alert>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/alert/danger": {
    component: React.lazy(() => import("@/registry/demos/ui/react/alert/danger")),
    code: [{"title":"danger.tsx","code":"\"use client\";\r\n\r\nimport {\r\n  Alert,\r\n  AlertDescription,\r\n  AlertTitle,\r\n} from \"@/registry/ui/react/alert\";\r\nimport { AlertCircle } from \"lucide-react\";\r\n\r\nexport default function AlertDemo() {\r\n  return (\r\n    <Alert variant=\"danger\">\r\n      <AlertCircle className=\"size-4\" />\r\n      <AlertTitle>Error</AlertTitle>\r\n      <AlertDescription>\r\n        Your session has expired. Please log in again.\r\n      </AlertDescription>\r\n    </Alert>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/aspect-ratio/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/aspect-ratio/default")),
    code: [{"title":"default.tsx","code":"import { AspectRatio } from \"@/registry/ui/react/aspect-ratio\";\r\nimport Image from \"next/image\";\r\n\r\nexport default function AspectRatioDemo() {\r\n  return (\r\n    <AspectRatio ratio={16 / 9}>\r\n      <Image\r\n        src=\"https://images.unsplash.com/photo-1588345921523-c2dcdb7f1dcd?w=800&dpr=2&q=80\"\r\n        alt=\"Photo by Drew Beamer\"\r\n        fill\r\n        className=\"rounded-md object-cover\"\r\n      />\r\n    </AspectRatio>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/aspect-ratio/as-child": {
    component: React.lazy(() => import("@/registry/demos/ui/react/aspect-ratio/as-child")),
    code: [{"title":"as-child.tsx","code":"import { AspectRatio } from \"@/registry/ui/react/aspect-ratio\";\r\nimport Image from \"next/image\";\r\n\r\nexport default function AspectRatioDemo() {\r\n  return (\r\n    <AspectRatio ratio={16 / 9} asChild>\r\n      <Image\r\n        src=\"https://images.unsplash.com/photo-1588345921523-c2dcdb7f1dcd?w=800&dpr=2&q=80\"\r\n        alt=\"Photo by Drew Beamer\"\r\n        fill\r\n        className=\"rounded-md object-cover\"\r\n      />\r\n    </AspectRatio>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/avatar/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/avatar/default")),
    code: [{"title":"default.tsx","code":"import { Avatar } from \"@/registry/ui/react/avatar\";\r\n\r\nexport default function AvatarDemo() {\r\n  return (\r\n    <Avatar\r\n      className=\"bg-white/70\"\r\n      src=\"/images/profile-default.png\"\r\n      alt=\"@bastiencouder\"\r\n      fallback=\"B\"\r\n    />\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/avatar/shape": {
    component: React.lazy(() => import("@/registry/demos/ui/react/avatar/shape")),
    code: [{"title":"shape.tsx","code":"import { Avatar } from \"@/registry/ui/react/avatar\";\r\n\r\nexport default function AvatarDemo() {\r\n  return (\r\n    <div className=\"space-x-4\">\r\n      <Avatar\r\n        className=\"bg-white/70\"\r\n        src=\"/images/profile-default.png\"\r\n        alt=\"@bastiencouder\"\r\n        fallback=\"B\"\r\n        shape=\"square\"\r\n      />\r\n      <Avatar\r\n        className=\"bg-white/70\"\r\n        src=\"/images/profile-default.png\"\r\n        alt=\"@bastiencouder\"\r\n        fallback=\"B\"\r\n        shape=\"circle\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/avatar/sizes": {
    component: React.lazy(() => import("@/registry/demos/ui/react/avatar/sizes")),
    code: [{"title":"sizes.tsx","code":"import { Avatar } from \"@/registry/ui/react/avatar\";\r\n\r\nexport default function AvatarDemo() {\r\n  return (\r\n    <div className=\"space-x-4\">\r\n      {([\"sm\", \"md\", \"lg\"] as const).map((size) => (\r\n        <Avatar\r\n          key={size}\r\n          size={size}\r\n          src=\"/images/profile-default.png\"\r\n          alt=\"@bastiencouder\"\r\n          fallback=\"B\"\r\n          className=\"bg-white/70\"\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/avatar/composition": {
    component: React.lazy(() => import("@/registry/demos/ui/react/avatar/composition")),
    code: [{"title":"composition.tsx","code":"import React from \"react\";\r\nimport { User2 } from \"@/lib/icons\";\r\nimport {\r\n  AvatarFallback,\r\n  AvatarImage,\r\n  AvatarPlaceholder,\r\n  AvatarRoot,\r\n} from \"@/registry/ui/react/avatar\";\r\n\r\nexport default function AvatarDemo() {\r\n  return (\r\n    <AvatarRoot className=\"bg-white/70\">\r\n      <AvatarImage src=\"/images/profile-default.png\" alt=\"@bastiencouder\" />\r\n      <AvatarFallback>B</AvatarFallback>\r\n      <AvatarPlaceholder>\r\n        <User2 className=\"size-5\" />\r\n      </AvatarPlaceholder>\r\n    </AvatarRoot>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/badge/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/badge/default")),
    code: [{"title":"default.tsx","code":"import { Badge } from \"@/registry/ui/react/badge\";\r\n\r\nexport default function BadgeDemo() {\r\n  return <Badge>Badge</Badge>;\r\n}\r\n"}]
  },
  "demos/ui/react/badge/variants": {
    component: React.lazy(() => import("@/registry/demos/ui/react/badge/variants")),
    code: [{"title":"variants.tsx","code":"import { Badge } from \"@/registry/ui/react/badge\";\r\n\r\nexport default function BadgeDemo() {\r\n  return (\r\n    <div className=\"flex flex-col items-start gap-2\">\r\n      <Flex>\r\n        <Badge variant=\"neutral\">Neutral</Badge>\r\n        <Badge variant=\"outline\">Outline</Badge>\r\n        <Badge variant=\"primary\">Primary</Badge>\r\n      </Flex>\r\n      <Flex>\r\n        <Badge variant=\"success\">Success</Badge>\r\n        <Badge variant=\"danger\">Danger</Badge>\r\n        <Badge variant=\"warning\">Warning</Badge>\r\n        <Badge variant=\"accent\">Accent</Badge>\r\n      </Flex>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Flex = (props: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div {...props} className=\"flex items-center gap-2\" />\r\n);\r\n"}]
  },
  "demos/ui/react/badge/sizes": {
    component: React.lazy(() => import("@/registry/demos/ui/react/badge/sizes")),
    code: [{"title":"sizes.tsx","code":"import { Badge } from \"@/registry/ui/react/badge\";\r\n\r\nexport default function BadgeDemo() {\r\n  return (\r\n    <div className=\"flex items-center gap-2\">\r\n      <Badge variant=\"primary\" size=\"sm\">\r\n        Small\r\n      </Badge>\r\n      <Badge variant=\"primary\" size=\"md\">\r\n        Medium\r\n      </Badge>\r\n      <Badge variant=\"primary\" size=\"lg\">\r\n        Large\r\n      </Badge>\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/badge/icon": {
    component: React.lazy(() => import("@/registry/demos/ui/react/badge/icon")),
    code: [{"title":"icon.tsx","code":"import { Badge } from \"@/registry/ui/react/badge\";\r\nimport { Shield } from \"@/lib/icons\";\r\n\r\nexport default function BadgeDemo() {\r\n  return (\r\n    <div className=\"flex items-center gap-2\">\r\n      <Badge icon={<Shield />} size=\"sm\">\r\n        Badge\r\n      </Badge>\r\n      <Badge icon={<Shield />} size=\"md\">\r\n        Badge\r\n      </Badge>\r\n      <Badge icon={<Shield />} size=\"lg\">\r\n        Badge\r\n      </Badge>\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/breadcrumb/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/breadcrumb/default")),
    code: [{"title":"default.tsx","code":"import {\r\n  Breadcrumb,\r\n  Breadcrumbs,\r\n} from \"@/registry/ui/react/breadcrumb\";\r\n\r\nexport default function BreadcrumbDemo() {\r\n  return (\r\n    <Breadcrumbs>\r\n      <Breadcrumb href=\"#\">Home</Breadcrumb>\r\n      <Breadcrumb href=\"#\">Components</Breadcrumb>\r\n      <Breadcrumb href=\"#\">Breadcrumbs</Breadcrumb>\r\n    </Breadcrumbs>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/breadcrumb/sizes": {
    component: React.lazy(() => import("@/registry/demos/ui/react/breadcrumb/sizes")),
    code: [{"title":"sizes.tsx","code":"import {\r\n  Breadcrumb,\r\n  Breadcrumbs,\r\n} from \"@/registry/ui/react/breadcrumb\";\r\n\r\nexport default function BreadcrumbDemo() {\r\n  return (\r\n    <div className=\"flex flex-col gap-4\">\r\n      <Breadcrumbs size=\"sm\">\r\n        <Breadcrumb href=\"#\">Home</Breadcrumb>\r\n        <Breadcrumb href=\"#\">Components</Breadcrumb>\r\n        <Breadcrumb>Breadcrumbs</Breadcrumb>\r\n      </Breadcrumbs>\r\n      <Breadcrumbs size=\"md\">\r\n        <Breadcrumb href=\"#\">Home</Breadcrumb>\r\n        <Breadcrumb href=\"#\">Components</Breadcrumb>\r\n        <Breadcrumb>Breadcrumbs</Breadcrumb>\r\n      </Breadcrumbs>\r\n      <Breadcrumbs size=\"lg\">\r\n        <Breadcrumb href=\"#\">Home</Breadcrumb>\r\n        <Breadcrumb href=\"#\">Components</Breadcrumb>\r\n        <Breadcrumb>Breadcrumbs</Breadcrumb>\r\n      </Breadcrumbs>\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/breadcrumb/orientation": {
    component: React.lazy(() => import("@/registry/demos/ui/react/breadcrumb/orientation")),
    code: [{"title":"orientation.tsx","code":"import {\r\n  Breadcrumb,\r\n  Breadcrumbs,\r\n} from \"@/registry/ui/react/breadcrumb\";\r\n\r\nexport default function BreadcrumbDemo() {\r\n  return (\r\n    <div className=\"flex flex-col gap-4\">\r\n      <Breadcrumbs orientation=\"vertical\">\r\n        <Breadcrumb href=\"#\">Home</Breadcrumb>\r\n        <Breadcrumb href=\"#\">Components</Breadcrumb>\r\n        <Breadcrumb>Breadcrumbs</Breadcrumb>\r\n      </Breadcrumbs>\r\n      <Breadcrumbs orientation=\"horizontal\">\r\n        <Breadcrumb href=\"#\">Home</Breadcrumb>\r\n        <Breadcrumb href=\"#\">Components</Breadcrumb>\r\n        <Breadcrumb>Breadcrumbs</Breadcrumb>\r\n      </Breadcrumbs>\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/breadcrumb/separator": {
    component: React.lazy(() => import("@/registry/demos/ui/react/breadcrumb/separator")),
    code: [{"title":"separator.tsx","code":"import {\r\n  Breadcrumb,\r\n  Breadcrumbs,\r\n} from \"@/registry/ui/react/breadcrumb\";\r\nimport { X } from \"@/lib/icons\";\r\n\r\nexport default function BreadcrumbDemo() {\r\n  return (\r\n    <Breadcrumbs separatorIcon={<X />}>\r\n      <Breadcrumb href=\"#\">Home</Breadcrumb>\r\n      <Breadcrumb href=\"#\">Components</Breadcrumb>\r\n      <Breadcrumb href=\"#\">Breadcrumbs</Breadcrumb>\r\n    </Breadcrumbs>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/breadcrumb/disabled": {
    component: React.lazy(() => import("@/registry/demos/ui/react/breadcrumb/disabled")),
    code: [{"title":"disabled.tsx","code":"import {\r\n  Breadcrumb,\r\n  Breadcrumbs,\r\n} from \"@/registry/ui/react/breadcrumb\";\r\n\r\nexport default function BreadcrumbDemo() {\r\n  return (\r\n    <Breadcrumbs>\r\n      <Breadcrumb href=\"#\">Home</Breadcrumb>\r\n      <Breadcrumb href=\"#\">Components</Breadcrumb>\r\n      <Breadcrumb disabled>Breadcrumbs</Breadcrumb>\r\n    </Breadcrumbs>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/breadcrumb/composition": {
    component: React.lazy(() => import("@/registry/demos/ui/react/breadcrumb/composition")),
    code: [{"title":"composition.tsx","code":"import {\r\n  BreadcrumbItem,\r\n  BreadcrumbLink,\r\n  Breadcrumbs,\r\n} from \"@/registry/ui/react/breadcrumb\";\r\n\r\nexport default function BreadcrumbDemo() {\r\n  return (\r\n    <Breadcrumbs>\r\n      <BreadcrumbItem>\r\n        <BreadcrumbLink href=\"#\">Home</BreadcrumbLink>\r\n      </BreadcrumbItem>\r\n      <BreadcrumbItem>\r\n        <BreadcrumbLink href=\"#\">Components</BreadcrumbLink>\r\n      </BreadcrumbItem>\r\n      <BreadcrumbItem>\r\n        <BreadcrumbLink>Breadcrumbs</BreadcrumbLink>\r\n      </BreadcrumbItem>\r\n    </Breadcrumbs>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/button/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/button/default")),
    code: [{"title":"default.tsx","code":"import { Button } from \"@/registry/ui/react/button\";\r\n\r\nexport default function ButtonDemo() {\r\n  return <Button>Button</Button>;\r\n}\r\n"}]
  },
  "demos/ui/react/button/variants": {
    component: React.lazy(() => import("@/registry/demos/ui/react/button/variants")),
    code: [{"title":"variants.tsx","code":"import { Button } from \"@/registry/ui/react/button\";\r\n\r\nconst variants = [\r\n  \"default\",\r\n  \"primary\",\r\n  \"secondary\",\r\n  \"outline\",\r\n  \"quiet\",\r\n  \"success\",\r\n  \"warning\",\r\n  \"danger\",\r\n] as const;\r\n\r\nexport default function ButtonDemo() {\r\n  return (\r\n    <div className=\"grid grid-cols-4 gap-2\">\r\n      {variants.map((variant) => (\r\n        <Button key={variant} variant={variant}>\r\n          {variant}\r\n        </Button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/button/sizes": {
    component: React.lazy(() => import("@/registry/demos/ui/react/button/sizes")),
    code: [{"title":"sizes.tsx","code":"import { Button } from \"@/registry/ui/react/button\";\r\n\r\nexport default function ButtonDemo() {\r\n  return (\r\n    <div className=\"flex w-full items-center justify-center gap-4\">\r\n      <Button size=\"sm\">Button</Button>\r\n      <Button size=\"md\">Button</Button>\r\n      <Button size=\"lg\">Button</Button>\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/button/shapes": {
    component: React.lazy(() => import("@/registry/demos/ui/react/button/shapes")),
    code: [{"title":"shapes.tsx","code":"import { Button } from \"@/registry/ui/react/button\";\r\nimport { Upload } from \"@/lib/icons\";\r\n\r\nexport default function ButtonDemo() {\r\n  return (\r\n    <div className=\"flex items-center justify-center gap-4\">\r\n      <Button size=\"sm\" shape=\"square\" aria-label=\"upload\">\r\n        <Upload />\r\n      </Button>\r\n      <Button size=\"md\" shape=\"square\" aria-label=\"upload\">\r\n        <Upload />\r\n      </Button>\r\n      <Button size=\"lg\" shape=\"square\" aria-label=\"upload\">\r\n        <Upload />\r\n      </Button>\r\n      <Button size=\"sm\" shape=\"circle\" aria-label=\"upload\">\r\n        <Upload />\r\n      </Button>\r\n      <Button size=\"md\" shape=\"circle\" aria-label=\"upload\">\r\n        <Upload />\r\n      </Button>\r\n      <Button size=\"lg\" shape=\"circle\" aria-label=\"upload\">\r\n        <Upload />\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/button/prefix-and-suffix": {
    component: React.lazy(() => import("@/registry/demos/ui/react/button/prefix-and-suffix")),
    code: [{"title":"prefix-and-suffix.tsx","code":"import { Button } from \"@/registry/ui/react/button\";\r\nimport { Upload } from \"@/lib/icons\";\r\n\r\nexport default function ButtonDemo() {\r\n  return (\r\n    <div className=\"flex items-center gap-2\">\r\n      <Button prefix={<Upload />}>Upload</Button>\r\n      <Button suffix={<Upload />}>Upload</Button>\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/button/loading": {
    component: React.lazy(() => import("@/registry/demos/ui/react/button/loading")),
    code: [{"title":"loading.tsx","code":"import { Button } from \"@/registry/ui/react/button\";\r\n\r\nexport default function ButtonDemo() {\r\n  return (\r\n    <div className=\"flex w-full items-center justify-center gap-2\">\r\n      <Button size=\"sm\" isLoading>\r\n        Button\r\n      </Button>\r\n      <Button size=\"md\" isLoading>\r\n        Button\r\n      </Button>\r\n      <Button size=\"lg\" isLoading>\r\n        Button\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/button/disabled": {
    component: React.lazy(() => import("@/registry/demos/ui/react/button/disabled")),
    code: [{"title":"disabled.tsx","code":"import { Button } from \"@/registry/ui/react/button\";\r\n\r\nexport default function ButtonDemo() {\r\n  return <Button isDisabled>Button</Button>;\r\n}\r\n"}]
  },
  "demos/ui/react/button/link-button": {
    component: React.lazy(() => import("@/registry/demos/ui/react/button/link-button")),
    code: [{"title":"link-button.tsx","code":"import { Button } from \"@/registry/ui/react/button\";\r\nimport { SignIn } from \"@/lib/icons\";\r\n\r\nexport default function ButtonDemo() {\r\n  return (\r\n    <Button href=\"/login\" prefix={<SignIn />} target=\"_blank\">\r\n      Login\r\n    </Button>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/card/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/card/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\r\n\r\nimport { Button } from \"@/registry/ui/react/button\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardFooter,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/registry/ui/react/card\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\nimport { BellRing, Check } from \"@/lib/icons\";\r\nimport { Switch } from \"react-aria-components\";\r\n\r\nconst notifications = [\r\n  {\r\n    title: \"Your call has been confirmed.\",\r\n    description: \"1 hour ago\",\r\n  },\r\n  {\r\n    title: \"You have a new message!\",\r\n    description: \"1 hour ago\",\r\n  },\r\n  {\r\n    title: \"Your subscription is expiring soon!\",\r\n    description: \"2 hours ago\",\r\n  },\r\n];\r\n\r\ntype CardProps = React.ComponentProps<typeof Card>;\r\n\r\nexport default function CardDemo({ className, ...props }: CardProps) {\r\n  return (\r\n    <Card className={cn(\"w-[380px]\", className)} {...props}>\r\n      <CardHeader>\r\n        <CardTitle>Notifications</CardTitle>\r\n        <CardDescription>You have 3 unread messages.</CardDescription>\r\n      </CardHeader>\r\n      <CardContent className=\"grid gap-4\">\r\n        <div className=\" flex items-center space-x-4 rounded-md border p-4\">\r\n          <BellRing />\r\n          <div className=\"flex-1 space-y-1\">\r\n            <p className=\"text-sm font-medium leading-none\">\r\n              Push Notifications\r\n            </p>\r\n            <p className=\"text-muted-foreground text-sm\">\r\n              Send notifications to device.\r\n            </p>\r\n          </div>\r\n          <Switch />\r\n        </div>\r\n        <div>\r\n          {notifications.map((notification, index) => (\r\n            <div\r\n              key={index}\r\n              className=\"mb-4 grid grid-cols-[25px_1fr] items-start pb-4 last:mb-0 last:pb-0\"\r\n            >\r\n              <span className=\"flex size-2 translate-y-1 rounded-full bg-sky-500\" />\r\n              <div className=\"space-y-1\">\r\n                <p className=\"text-sm font-medium leading-none\">\r\n                  {notification.title}\r\n                </p>\r\n                <p className=\"text-muted-foreground text-sm\">\r\n                  {notification.description}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </CardContent>\r\n      <CardFooter>\r\n        <Button className=\"w-full\">\r\n          <Check className=\"mr-2 size-4\" /> Mark all as read\r\n        </Button>\r\n      </CardFooter>\r\n    </Card>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/card/variants": {
    component: React.lazy(() => import("@/registry/demos/ui/react/card/variants")),
    code: [{"title":"variants.tsx","code":"import {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/registry/ui/react/card\";\r\n\r\nconst variants = [\r\n  \"default\",\r\n  \"outline\",\r\n  \"success\",\r\n  \"warning\",\r\n  \"danger\",\r\n] as const;\r\n\r\nexport default function CardDemo() {\r\n  return (\r\n    <div className=\"grid grid-cols-2 gap-2\">\r\n      {variants.map((variant) => (\r\n        <Card key={variant} variant={variant}>\r\n          <CardHeader>\r\n            <CardTitle className=\"text-lg\">{variant}</CardTitle>\r\n          </CardHeader>\r\n        </Card>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/card/sections": {
    component: React.lazy(() => import("@/registry/demos/ui/react/card/sections")),
    code: [{"title":"sections.tsx","code":"export default function CardDemo() {\r\n  return <div className=\"grid grid-cols-2 gap-2\"></div>;\r\n}\r\n"}]
  },
  "demos/ui/react/checkbox/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/checkbox/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\r\n\r\nimport { Checkbox } from \"@/registry/ui/react/checkbox\";\r\n\r\nexport default function CheckboxDemo() {\r\n  return (\r\n    <div className=\"flex items-center space-x-2\">\r\n      <Checkbox id=\"terms\" />\r\n      <label\r\n        htmlFor=\"terms\"\r\n        className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\r\n      >\r\n        Accept terms and conditions\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/collapsible/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/collapsible/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { ChevronsUpDown, Plus, X } from \"lucide-react\";\r\n\r\nimport { Button } from \"@/registry/ui/react/button\";\r\nimport {\r\n  Collapsible,\r\n  CollapsibleContent,\r\n  CollapsibleTrigger,\r\n} from \"@/registry/ui/react/collapsible\";\r\n\r\nexport default function CollapsibleDemo() {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n  return (\r\n    <Collapsible\r\n      open={isOpen}\r\n      onOpenChange={setIsOpen}\r\n      className=\"w-[350px] space-y-2\"\r\n    >\r\n      <div className=\"flex items-center justify-between space-x-4 px-4\">\r\n        <h4 className=\"text-sm font-semibold\">\r\n          @peduarte starred 3 repositories\r\n        </h4>\r\n        <CollapsibleTrigger asChild>\r\n          <Button variant=\"quiet\" size=\"sm\" className=\"w-9 p-0\">\r\n            <ChevronsUpDown className=\"h-4 w-4\" />\r\n            <span className=\"sr-only\">Toggle</span>\r\n          </Button>\r\n        </CollapsibleTrigger>\r\n      </div>\r\n      <div className=\"rounded-md border px-4 py-3 font-mono text-sm\">\r\n        @radix-ui/primitives\r\n      </div>\r\n      <CollapsibleContent className=\"space-y-2\">\r\n        <div className=\"rounded-md border px-4 py-3 font-mono text-sm\">\r\n          @radix-ui/colors\r\n        </div>\r\n        <div className=\"rounded-md border px-4 py-3 font-mono text-sm\">\r\n          @stitches/react\r\n        </div>\r\n      </CollapsibleContent>\r\n    </Collapsible>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/command/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/command/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\r\n\r\nimport {\r\n  Calculator,\r\n  Calendar,\r\n  CreditCard,\r\n  Settings,\r\n  Smile,\r\n  User,\r\n} from \"lucide-react\";\r\n\r\nimport {\r\n  Command,\r\n  CommandGroup,\r\n  CommandItem,\r\n  CommandList,\r\n  CommandSeparator,\r\n  CommandShortcut,\r\n  CommandEmpty,\r\n  CommandInput,\r\n} from \"@/registry/ui/react/command\";\r\n\r\nexport default function CommandDemo() {\r\n  return (\r\n    <Command className=\"rounded-lg border shadow-md\">\r\n      <CommandInput placeholder=\"Type a command or search...\" />\r\n      <CommandList>\r\n        <CommandEmpty>No results found.</CommandEmpty>\r\n        <CommandGroup heading=\"Suggestions\">\r\n          <CommandItem>\r\n            <Calendar className=\"mr-2 size-4\" />\r\n            <span>Calendar</span>\r\n          </CommandItem>\r\n          <CommandItem>\r\n            <Smile className=\"mr-2 size-4\" />\r\n            <span>Search Emoji</span>\r\n          </CommandItem>\r\n          <CommandItem>\r\n            <Calculator className=\"mr-2 size-4\" />\r\n            <span>Calculator</span>\r\n          </CommandItem>\r\n        </CommandGroup>\r\n        <CommandSeparator />\r\n        <CommandGroup heading=\"Settings\">\r\n          <CommandItem>\r\n            <User className=\"mr-2 size-4\" />\r\n            <span>Profile</span>\r\n            <CommandShortcut>⌘P</CommandShortcut>\r\n          </CommandItem>\r\n          <CommandItem>\r\n            <CreditCard className=\"mr-2 size-4\" />\r\n            <span>Billing</span>\r\n            <CommandShortcut>⌘B</CommandShortcut>\r\n          </CommandItem>\r\n          <CommandItem>\r\n            <Settings className=\"mr-2 size-4\" />\r\n            <span>Settings</span>\r\n            <CommandShortcut>⌘S</CommandShortcut>\r\n          </CommandItem>\r\n        </CommandGroup>\r\n      </CommandList>\r\n    </Command>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/command/dialog": {
    component: React.lazy(() => import("@/registry/demos/ui/react/command/dialog")),
    code: [{"title":"dialog.tsx","code":"\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport {\r\n  Calculator,\r\n  Calendar,\r\n  CreditCard,\r\n  Settings,\r\n  Smile,\r\n  User,\r\n} from \"lucide-react\";\r\n\r\nimport {\r\n  CommandDialog,\r\n  CommandEmpty,\r\n  CommandGroup,\r\n  CommandInput,\r\n  CommandItem,\r\n  CommandList,\r\n  CommandSeparator,\r\n  CommandShortcut,\r\n} from \"@/registry/ui/react/command\";\r\n\r\nexport default function CommandDialogDemo() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    const down = (e: KeyboardEvent) => {\r\n      if (e.key === \"j\" && (e.metaKey || e.ctrlKey)) {\r\n        e.preventDefault();\r\n        setOpen((open) => !open);\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"keydown\", down);\r\n    return () => document.removeEventListener(\"keydown\", down);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <p className=\"text-muted-fg text-sm\">\r\n        Press{\" \"}\r\n        <kbd className=\"bg-secondary text-secondary-fg pointer-events-none inline-flex h-5 select-none items-center gap-1 rounded border px-1.5 font-mono text-[10px] font-medium opacity-100\">\r\n          <span className=\"text-xs\">⌘</span>J\r\n        </kbd>\r\n      </p>\r\n      <CommandDialog open={open} onOpenChange={setOpen}>\r\n        <CommandInput placeholder=\"Type a command or search...\" />\r\n        <CommandList>\r\n          <CommandEmpty>No results found.</CommandEmpty>\r\n          <CommandGroup heading=\"Suggestions\">\r\n            <CommandItem>\r\n              <Calendar className=\"mr-2 size-4\" />\r\n              <span>Calendar</span>\r\n            </CommandItem>\r\n            <CommandItem>\r\n              <Smile className=\"mr-2 size-4\" />\r\n              <span>Search Emoji</span>\r\n            </CommandItem>\r\n            <CommandItem>\r\n              <Calculator className=\"mr-2 size-4\" />\r\n              <span>Calculator</span>\r\n            </CommandItem>\r\n          </CommandGroup>\r\n          <CommandSeparator />\r\n          <CommandGroup heading=\"Settings\">\r\n            <CommandItem>\r\n              <User className=\"mr-2 size-4\" />\r\n              <span>Profile</span>\r\n              <CommandShortcut>⌘P</CommandShortcut>\r\n            </CommandItem>\r\n            <CommandItem>\r\n              <CreditCard className=\"mr-2 size-4\" />\r\n              <span>Billing</span>\r\n              <CommandShortcut>⌘B</CommandShortcut>\r\n            </CommandItem>\r\n            <CommandItem>\r\n              <Settings className=\"mr-2 size-4\" />\r\n              <span>Settings</span>\r\n              <CommandShortcut>⌘S</CommandShortcut>\r\n            </CommandItem>\r\n          </CommandGroup>\r\n        </CommandList>\r\n      </CommandDialog>\r\n    </>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/dialog/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/dialog/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\r\n\r\nimport { Button } from \"@/registry/ui/react/button\";\r\nimport { Label } from \"@/registry/ui/react/label\";\r\nimport { TextField } from \"@/registry/ui/react/text-field\";\r\nimport {\r\n  Dialog,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogDescription,\r\n  DialogFooter,\r\n} from \"@/registry/ui/react/dialog\";\r\n\r\nexport default function DialogDemo() {\r\n  const Content = () => (\r\n    <>\r\n      <DialogHeader>\r\n        <DialogTitle>Edit profile</DialogTitle>\r\n        <DialogDescription>\r\n          Make changes to your profile here. Click save when you're done.\r\n        </DialogDescription>\r\n      </DialogHeader>\r\n      <div className=\"grid gap-4 py-4\">\r\n        <div className=\"grid grid-cols-4 items-center gap-4\">\r\n          <Label htmlFor=\"name\" className=\"text-right\">\r\n            Name\r\n          </Label>\r\n          <TextField\r\n            id=\"name\"\r\n            defaultValue=\"Pedro Duarte\"\r\n            className=\"col-span-3\"\r\n          />\r\n        </div>\r\n        <div className=\"grid grid-cols-4 items-center gap-4\">\r\n          <Label htmlFor=\"username\" className=\"text-right\">\r\n            Username\r\n          </Label>\r\n          <TextField\r\n            id=\"username\"\r\n            defaultValue=\"~peduarte\"\r\n            className=\"col-span-3\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <DialogFooter>\r\n        <Button type=\"submit\">Save changes</Button>\r\n      </DialogFooter>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <Dialog content={<Content />} className=\"sm:max-w-[425px]\">\r\n      <Button>Edit Profile</Button>\r\n    </Dialog>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/dialog/composition": {
    component: React.lazy(() => import("@/registry/demos/ui/react/dialog/composition")),
    code: [{"title":"composition.tsx","code":"\"use client\";\r\n\r\nimport { Button } from \"@/registry/ui/react/button\";\r\nimport { Label } from \"@/registry/ui/react/label\";\r\nimport { TextField } from \"@/registry/ui/react/text-field\";\r\nimport {\r\n  Dialog,\r\n  DialogTrigger,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogDescription,\r\n  DialogFooter,\r\n} from \"@/registry/ui/react/dialog\";\r\n\r\nexport default function DialogDemo() {\r\n  return (\r\n    <Dialog>\r\n      <DialogTrigger asChild>\r\n        <Button>Edit Profile</Button>\r\n      </DialogTrigger>\r\n      <DialogContent className=\"sm:max-w-[425px]\">\r\n        <DialogHeader>\r\n          <DialogTitle>Edit profile</DialogTitle>\r\n          <DialogDescription>\r\n            Make changes to your profile here. Click save when you're done.\r\n          </DialogDescription>\r\n        </DialogHeader>\r\n        <div className=\"grid gap-4 py-4\">\r\n          <div className=\"grid grid-cols-4 items-center gap-4\">\r\n            <Label htmlFor=\"name\" className=\"text-right\">\r\n              Name\r\n            </Label>\r\n            <TextField\r\n              id=\"name\"\r\n              defaultValue=\"Pedro Duarte\"\r\n              className=\"col-span-3\"\r\n            />\r\n          </div>\r\n          <div className=\"grid grid-cols-4 items-center gap-4\">\r\n            <Label htmlFor=\"username\" className=\"text-right\">\r\n              Username\r\n            </Label>\r\n            <TextField\r\n              id=\"username\"\r\n              defaultValue=\"~peduarte\"\r\n              className=\"col-span-3\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <DialogFooter>\r\n          <Button type=\"submit\">Save changes</Button>\r\n        </DialogFooter>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/divider/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/divider/default")),
    code: [{"title":"default.tsx","code":"import { Button } from \"@/registry/ui/react/button\";\r\nimport { Divider } from \"@/registry/ui/react/divider\";\r\n\r\nexport default function DividerDemo() {\r\n  return (\r\n    <div className=\"w-full mx-4\">\r\n      <Divider className=\"gap-4\">\r\n        <Button>Default</Button>\r\n      </Divider>\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/divider/orientation": {
    component: React.lazy(() => import("@/registry/demos/ui/react/divider/orientation")),
    code: [{"title":"orientation.tsx","code":"import { Divider } from \"@/registry/ui/react/divider\";\r\n\r\nexport default function DividerDemo() {\r\n  return (\r\n    <div className=\"w-full mx-4\">\r\n      <Divider orientation=\"vertical\" className=\"gap-4 min-h-[200px]\">\r\n        Vertical\r\n      </Divider>\r\n      <Divider orientation=\"horizontal\" className=\"gap-4\">\r\n        Horizontal\r\n      </Divider>\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/divider/position": {
    component: React.lazy(() => import("@/registry/demos/ui/react/divider/position")),
    code: [{"title":"position.tsx","code":"import { Divider } from \"@/registry/ui/react/divider\";\r\n\r\nexport default function DividerDemo() {\r\n  return (\r\n    <div className=\"w-full mx-4\">\r\n      <Divider className=\"gap-4\">Gap 4</Divider>\r\n      <Divider position=\"after\">After</Divider>\r\n      <Divider position=\"before\">Before</Divider>\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/drawer/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/drawer/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { Minus, Plus } from \"lucide-react\";\r\nimport { Bar, BarChart, ResponsiveContainer } from \"recharts\";\r\nimport {\r\n  Drawer,\r\n  DrawerTrigger,\r\n  DrawerContent,\r\n  DrawerHeader,\r\n  DrawerTitle,\r\n  DrawerDescription,\r\n  DrawerFooter,\r\n  DrawerClose,\r\n} from \"@/registry/ui/react/drawer\";\r\nimport { Button } from \"@/registry/ui/react/button\";\r\n\r\nconst data = [\r\n  {\r\n    goal: 400,\r\n  },\r\n  {\r\n    goal: 300,\r\n  },\r\n  {\r\n    goal: 200,\r\n  },\r\n  {\r\n    goal: 300,\r\n  },\r\n  {\r\n    goal: 200,\r\n  },\r\n  {\r\n    goal: 278,\r\n  },\r\n  {\r\n    goal: 189,\r\n  },\r\n  {\r\n    goal: 239,\r\n  },\r\n  {\r\n    goal: 300,\r\n  },\r\n  {\r\n    goal: 200,\r\n  },\r\n  {\r\n    goal: 278,\r\n  },\r\n  {\r\n    goal: 189,\r\n  },\r\n  {\r\n    goal: 349,\r\n  },\r\n];\r\n\r\nexport default function DrawerDemo() {\r\n  const [goal, setGoal] = React.useState(350);\r\n\r\n  function onClick(adjustment: number) {\r\n    setGoal(Math.max(200, Math.min(400, goal + adjustment)));\r\n  }\r\n\r\n  return (\r\n    <Drawer>\r\n      <DrawerTrigger asChild>\r\n        <Button variant=\"outline\">Open Drawer</Button>\r\n      </DrawerTrigger>\r\n      <DrawerContent>\r\n        <div className=\"mx-auto w-full max-w-sm\">\r\n          <DrawerHeader>\r\n            <DrawerTitle>Move Goal</DrawerTitle>\r\n            <DrawerDescription>Set your daily activity goal.</DrawerDescription>\r\n          </DrawerHeader>\r\n          <div className=\"p-4 pb-0\">\r\n            <div className=\"flex items-center justify-center space-x-2\">\r\n              <Button\r\n                variant=\"outline\"\r\n                size=\"icon\"\r\n                className=\"size-8 shrink-0 rounded-full\"\r\n                onClick={() => onClick(-10)}\r\n                disabled={goal <= 200}\r\n              >\r\n                <Minus className=\"size-4\" />\r\n                <span className=\"sr-only\">Decrease</span>\r\n              </Button>\r\n              <div className=\"flex-1 text-center\">\r\n                <div className=\"text-7xl font-bold tracking-tighter\">\r\n                  {goal}\r\n                </div>\r\n                <div className=\"text-muted-foreground text-[0.70rem] uppercase\">\r\n                  Calories/day\r\n                </div>\r\n              </div>\r\n              <Button\r\n                variant=\"outline\"\r\n                size=\"icon\"\r\n                className=\"size-8 shrink-0 rounded-full\"\r\n                onClick={() => onClick(10)}\r\n                disabled={goal >= 400}\r\n              >\r\n                <Plus className=\"size-4\" />\r\n                <span className=\"sr-only\">Increase</span>\r\n              </Button>\r\n            </div>\r\n            <div className=\"mt-3 h-[120px]\">\r\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                <BarChart data={data}>\r\n                  <Bar\r\n                    dataKey=\"goal\"\r\n                    style={\r\n                      {\r\n                        fill: \"hsl(var(--foreground))\",\r\n                        opacity: 0.9,\r\n                      } as React.CSSProperties\r\n                    }\r\n                  />\r\n                </BarChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n          </div>\r\n          <DrawerFooter>\r\n            <Button>Submit</Button>\r\n            <DrawerClose asChild>\r\n              <Button variant=\"outline\">Cancel</Button>\r\n            </DrawerClose>\r\n          </DrawerFooter>\r\n        </div>\r\n      </DrawerContent>\r\n    </Drawer>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/form/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/form/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\r\n\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { z } from \"zod\";\r\n\r\nimport { Button } from \"@/registry/ui/react/button\";\r\nimport {\r\n  Form,\r\n  FormControl,\r\n  FormDescription,\r\n  FormField,\r\n  FormItem,\r\n  FormLabel,\r\n  FormMessage,\r\n} from \"@/registry/ui/react/form\";\r\nimport { TextField } from \"@/registry/ui/react/text-field\";\r\n// import { toast } from '~/components/ui/use-toast'\r\n\r\nconst FormSchema = z.object({\r\n  username: z.string().min(2, {\r\n    message: \"Username must be at least 2 characters.\",\r\n  }),\r\n});\r\n\r\nexport default function FormDemo() {\r\n  const form = useForm<z.infer<typeof FormSchema>>({\r\n    resolver: zodResolver(FormSchema),\r\n    defaultValues: {\r\n      username: \"\",\r\n    },\r\n  });\r\n\r\n  function onSubmit(data: z.infer<typeof FormSchema>) {\r\n    /* toast({\r\n         title: 'You submitted the following values:',\r\n         description: (\r\n            <pre className=\"mt-2 w-[340px] rounded-md bg-slate-950 p-4\">\r\n               <code className=\"text-white\">{JSON.stringify(data, null, 2)}</code>\r\n            </pre>\r\n         ),\r\n      }) */\r\n  }\r\n\r\n  return (\r\n    <Form {...form}>\r\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"w-2/3 space-y-6\">\r\n        <FormField\r\n          control={form.control}\r\n          name=\"username\"\r\n          render={({ field }) => (\r\n            <FormItem>\r\n              <FormLabel>Username</FormLabel>\r\n              <FormControl>\r\n                <TextField placeholder=\"name...\" {...field} />\r\n              </FormControl>\r\n              <FormDescription>\r\n                This is your public display name.\r\n              </FormDescription>\r\n              <FormMessage />\r\n            </FormItem>\r\n          )}\r\n        />\r\n        <Button type=\"submit\" size=\"sm\">\r\n          Submit\r\n        </Button>\r\n      </form>\r\n    </Form>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/hover-card/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/hover-card/default")),
    code: [{"title":"default.tsx","code":"import { CalendarDays } from \"lucide-react\";\r\n\r\nimport {\r\n  Avatar,\r\n  AvatarFallback,\r\n  AvatarImage,\r\n} from \"@/registry/ui/react/avatar\";\r\nimport { Button } from \"@/registry/ui/react/button\";\r\nimport { HoverCard } from \"@/registry/ui/react/hover-card\";\r\n\r\nexport default function HoverCardDemo() {\r\n  const Content = () => (\r\n    <div className=\"flex justify-between space-x-4\">\r\n      <Avatar>\r\n        <AvatarImage src=\"https://github.com/vercel.png\" />\r\n        <AvatarFallback>VC</AvatarFallback>\r\n      </Avatar>\r\n      <div className=\"space-y-1\">\r\n        <h4 className=\"text-sm font-semibold\">@nextjs</h4>\r\n        <p className=\"text-sm\">\r\n          The React Framework – created and maintained by @vercel.\r\n        </p>\r\n        <div className=\"flex items-center pt-2\">\r\n          <CalendarDays className=\"mr-2 h-4 w-4 opacity-70\" />{\" \"}\r\n          <span className=\"text-xs text-muted-foreground\">\r\n            Joined December 2021\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <HoverCard content={<Content />} className=\"w-80\">\r\n      <Button variant=\"link\">@nextjs</Button>\r\n    </HoverCard>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/hover-card/composition": {
    component: React.lazy(() => import("@/registry/demos/ui/react/hover-card/composition")),
    code: [{"title":"composition.tsx","code":"import { CalendarDays } from \"lucide-react\";\r\n\r\nimport {\r\n  Avatar,\r\n  AvatarFallback,\r\n  AvatarImage,\r\n} from \"@/registry/ui/react/avatar\";\r\nimport { Button } from \"@/registry/ui/react/button\";\r\nimport {\r\n  HoverCard,\r\n  HoverCardContent,\r\n  HoverCardTrigger,\r\n} from \"@/registry/ui/react/hover-card\";\r\n\r\nexport default function HoverCardDemo() {\r\n  return (\r\n    <HoverCard>\r\n      <HoverCardTrigger asChild>\r\n        <Button variant=\"link\">@nextjs</Button>\r\n      </HoverCardTrigger>\r\n      <HoverCardContent className=\"w-80\">\r\n        <div className=\"flex justify-between space-x-4\">\r\n          <Avatar>\r\n            <AvatarImage src=\"https://github.com/vercel.png\" />\r\n            <AvatarFallback>VC</AvatarFallback>\r\n          </Avatar>\r\n          <div className=\"space-y-1\">\r\n            <h4 className=\"text-sm font-semibold\">@nextjs</h4>\r\n            <p className=\"text-sm\">\r\n              The React Framework – created and maintained by @vercel.\r\n            </p>\r\n            <div className=\"flex items-center pt-2\">\r\n              <CalendarDays className=\"mr-2 h-4 w-4 opacity-70\" />{\" \"}\r\n              <span className=\"text-xs text-muted-foreground\">\r\n                Joined December 2021\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </HoverCardContent>\r\n    </HoverCard>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/label/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/label/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\r\n\r\nimport { Checkbox } from \"@/registry/ui/react/checkbox\";\r\nimport { Label } from \"@/registry/ui/react/label\";\r\n\r\nexport default function LabelDemo() {\r\n  return (\r\n    <div>\r\n      <div className=\"flex items-center space-x-2\">\r\n        <Checkbox id=\"terms\" />\r\n        <Label htmlFor=\"terms\">Accept terms and conditions</Label>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/marquee/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/marquee/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\nimport { Marquee } from \"@/registry/ui/react/marquee\";\r\n\r\nconst reviews = [\r\n  {\r\n    name: \"Jack\",\r\n    username: \"@jack\",\r\n    body: \"I've never seen cnthing like this before. It's amazing. I love it.\",\r\n    img: \"https://avatar.vercel.sh/jack\",\r\n  },\r\n  {\r\n    name: \"Jill\",\r\n    username: \"@jill\",\r\n    body: \"I don't know what to say. I'm speechless. This is amazing.\",\r\n    img: \"https://avatar.vercel.sh/jill\",\r\n  },\r\n  {\r\n    name: \"John\",\r\n    username: \"@john\",\r\n    body: \"I'm at a loss for words. This is amazing. I love it.\",\r\n    img: \"https://avatar.vercel.sh/john\",\r\n  },\r\n  {\r\n    name: \"Jane\",\r\n    username: \"@jane\",\r\n    body: \"I'm at a loss for words. This is amazing. I love it.\",\r\n    img: \"https://avatar.vercel.sh/jane\",\r\n  },\r\n  {\r\n    name: \"Jenny\",\r\n    username: \"@jenny\",\r\n    body: \"I'm at a loss for words. This is amazing. I love it.\",\r\n    img: \"https://avatar.vercel.sh/jenny\",\r\n  },\r\n  {\r\n    name: \"James\",\r\n    username: \"@james\",\r\n    body: \"I'm at a loss for words. This is amazing. I love it.\",\r\n    img: \"https://avatar.vercel.sh/james\",\r\n  },\r\n];\r\n\r\nconst firstRow = reviews.slice(0, reviews.length / 2);\r\nconst secondRow = reviews.slice(reviews.length / 2);\r\n\r\nfunction ReviewCard({\r\n  img,\r\n  name,\r\n  username,\r\n  body,\r\n}: {\r\n  img: string;\r\n  name: string;\r\n  username: string;\r\n  body: string;\r\n}) {\r\n  return (\r\n    <figure\r\n      className={cn(\"relative w-64 overflow-hidden rounded-xl border p-4\")}\r\n    >\r\n      <div className=\"flex flex-row items-center gap-2\">\r\n        <img className=\"rounded-full\" width=\"32\" height=\"32\" alt=\"\" src={img} />\r\n        <div className=\"flex flex-col\">\r\n          <figcaption className=\"text-sm font-medium\">{name}</figcaption>\r\n          <p className=\"text-xs font-medium\">{username}</p>\r\n        </div>\r\n      </div>\r\n      <blockquote className=\"mt-2 text-sm\">{body}</blockquote>\r\n    </figure>\r\n  );\r\n}\r\n\r\nexport default function MarqueeDemo() {\r\n  return (\r\n    <div className=\"bg-bg relative flex w-full h-full flex-col items-center justify-center overflow-hidden rounded-lg md:shadow-xl\">\r\n      <Marquee className=\"[--duration:20s]\">\r\n        {firstRow.map((review) => (\r\n          <ReviewCard key={review.username} {...review} />\r\n        ))}\r\n      </Marquee>\r\n      <Marquee reverse className=\"[--duration:20s]\">\r\n        {secondRow.map((review) => (\r\n          <ReviewCard key={review.username} {...review} />\r\n        ))}\r\n      </Marquee>\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/multi-select/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/multi-select/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\r\n\r\nimport {\r\n  MultiSelect,\r\n  MultiSelectContent,\r\n  MultiSelectGroup,\r\n  MultiSelectItem,\r\n  MultiSelectList,\r\n  MultiSelectTrigger,\r\n  MultiSelectValue,\r\n} from \"@/registry/ui/react/multi-select\";\r\n\r\nexport default function MultiSelectDemo() {\r\n  return (\r\n    <MultiSelect>\r\n      <MultiSelectTrigger className=\"w-96\">\r\n        <MultiSelectValue placeholder=\"Select stack\" />\r\n      </MultiSelectTrigger>\r\n      <MultiSelectContent>\r\n        <MultiSelectList>\r\n          <MultiSelectGroup heading=\"React\">\r\n            <MultiSelectItem value=\"react\">React</MultiSelectItem>\r\n            <MultiSelectItem value=\"next\">Next.js</MultiSelectItem>\r\n            <MultiSelectItem value=\"remix\">Remix</MultiSelectItem>\r\n          </MultiSelectGroup>\r\n          <MultiSelectGroup heading=\"Vue\">\r\n            <MultiSelectItem value=\"vue\">Vue</MultiSelectItem>\r\n            <MultiSelectItem value=\"nuxt\">Nuxt</MultiSelectItem>\r\n          </MultiSelectGroup>\r\n          <MultiSelectGroup heading=\"Others\">\r\n            <MultiSelectItem value=\"angular\">Angular</MultiSelectItem>\r\n            <MultiSelectItem value=\"svelte\">Svelte</MultiSelectItem>\r\n          </MultiSelectGroup>\r\n        </MultiSelectList>\r\n      </MultiSelectContent>\r\n    </MultiSelect>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/multi-select/with-filter": {
    component: React.lazy(() => import("@/registry/demos/ui/react/multi-select/with-filter")),
    code: [{"title":"with-filter.tsx","code":"\"use client\";\r\n\r\nimport {\r\n  MultiSelect,\r\n  MultiSelectContent,\r\n  MultiSelectEmpty,\r\n  MultiSelectGroup,\r\n  MultiSelectItem,\r\n  MultiSelectList,\r\n  MultiSelectSearch,\r\n  MultiSelectTrigger,\r\n  MultiSelectValue,\r\n} from \"@/registry/ui/react/multi-select\";\r\n\r\nexport default function MultiSelectDemo() {\r\n  return (\r\n    <MultiSelect>\r\n      <MultiSelectTrigger className=\"w-96\">\r\n        <MultiSelectValue placeholder=\"Select stack\" />\r\n      </MultiSelectTrigger>\r\n      <MultiSelectContent>\r\n        <MultiSelectSearch placeholder=\"Input to search\" />\r\n        <MultiSelectList>\r\n          <MultiSelectGroup heading=\"React\">\r\n            <MultiSelectItem value=\"react\">React</MultiSelectItem>\r\n            <MultiSelectItem value=\"next\">Next.js</MultiSelectItem>\r\n            <MultiSelectItem value=\"remix\">Remix</MultiSelectItem>\r\n          </MultiSelectGroup>\r\n          <MultiSelectGroup heading=\"Vue\">\r\n            <MultiSelectItem value=\"vue\">Vue</MultiSelectItem>\r\n            <MultiSelectItem value=\"nuxt\">Nuxt</MultiSelectItem>\r\n          </MultiSelectGroup>\r\n          <MultiSelectGroup heading=\"Others\">\r\n            <MultiSelectItem value=\"angular\">Angular</MultiSelectItem>\r\n            <MultiSelectItem value=\"svelte\">Svelte</MultiSelectItem>\r\n          </MultiSelectGroup>\r\n        </MultiSelectList>\r\n        <MultiSelectEmpty />\r\n      </MultiSelectContent>\r\n    </MultiSelect>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/multi-select/control-search": {
    component: React.lazy(() => import("@/registry/demos/ui/react/multi-select/control-search")),
    code: [{"title":"control-search.tsx","code":"\"use client\";\r\n\r\nimport { useRef, useState } from \"react\";\r\nimport {\r\n  MultiSelect,\r\n  MultiSelectContent,\r\n  MultiSelectEmpty,\r\n  MultiSelectList,\r\n  type MultiSelectOption,\r\n  type MultiSelectOptionGroup,\r\n  MultiSelectSearch,\r\n  MultiSelectTrigger,\r\n  MultiSelectValue,\r\n  renderMultiSelectOptions,\r\n} from \"@/registry/ui/react/multi-select\";\r\n\r\nconst ALL_ITEMS = [\r\n  { value: \"react\", label: \"React\", group: \"React\" },\r\n  { value: \"next\", label: \"Next.js\", group: \"React\" },\r\n  { value: \"remix\", label: \"Remix\", group: \"React\" },\r\n  { value: \"vue\", label: \"Vue\", group: \"Vue\" },\r\n  { value: \"nuxt\", label: \"Nuxt.js\", group: \"Vue\" },\r\n  { value: \"angular\", label: \"Angular\", group: \"Others\" },\r\n  { value: \"svelte\", label: \"Svelte\", group: \"Others\" },\r\n];\r\n\r\nfunction group(\r\n  options: Array<(typeof ALL_ITEMS)[number]>,\r\n): MultiSelectOptionGroup[] {\r\n  return options.reduce((acc, item) => {\r\n    const group = acc.find((g) => g.heading === item.group);\r\n    if (group) group.children.push(item);\r\n    else acc.push({ heading: item.group, children: [item] });\r\n\r\n    return acc;\r\n  }, [] as MultiSelectOptionGroup[]);\r\n}\r\n\r\nasync function search(keyword?: string) {\r\n  if (!keyword) return group(ALL_ITEMS);\r\n  await new Promise((resolve) => setTimeout(resolve, 500));\r\n  const lowerKeyword = keyword.toLowerCase();\r\n  const filtered = ALL_ITEMS.filter((item) =>\r\n    item.label.toLowerCase().includes(lowerKeyword),\r\n  );\r\n  return group(filtered);\r\n}\r\n\r\nexport default function MultiSelectDemo() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [options, setOptions] = useState<MultiSelectOption[]>(() =>\r\n    group(ALL_ITEMS),\r\n  );\r\n\r\n  const indexRef = useRef(0);\r\n\r\n  const handleSearch = async (keyword?: string) => {\r\n    const index = ++indexRef.current;\r\n    setLoading(true);\r\n    const newOptions = await search(keyword);\r\n    if (indexRef.current === index) {\r\n      setOptions(newOptions);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MultiSelect onSearch={handleSearch}>\r\n      <MultiSelectTrigger className=\"w-96\">\r\n        <MultiSelectValue placeholder=\"Select stack\" />\r\n      </MultiSelectTrigger>\r\n      <MultiSelectContent>\r\n        <MultiSelectSearch />\r\n        <MultiSelectList>\r\n          {loading ? null : renderMultiSelectOptions(options)}\r\n          <MultiSelectEmpty>\r\n            {loading ? \"Loading...\" : \"No results found\"}\r\n          </MultiSelectEmpty>\r\n        </MultiSelectList>\r\n      </MultiSelectContent>\r\n    </MultiSelect>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/multi-select/input-custom": {
    component: React.lazy(() => import("@/registry/demos/ui/react/multi-select/input-custom")),
    code: [{"title":"input-custom.tsx","code":"\"use client\";\r\n\r\nimport { useRef, useState } from \"react\";\r\n\r\nimport {\r\n  MultiSelect,\r\n  MultiSelectContent,\r\n  MultiSelectEmpty,\r\n  MultiSelectList,\r\n  type MultiSelectOption,\r\n  type MultiSelectOptionGroup,\r\n  MultiSelectSearch,\r\n  MultiSelectTrigger,\r\n  MultiSelectValue,\r\n  renderMultiSelectOptions,\r\n} from \"@/registry/ui/react/multi-select\";\r\n\r\nconst ALL_ITEMS = [\r\n  { value: \"react\", label: \"React\", group: \"React\" },\r\n  { value: \"next\", label: \"Next.js\", group: \"React\" },\r\n  { value: \"remix\", label: \"Remix\", group: \"React\" },\r\n  { value: \"vue\", label: \"Vue\", group: \"Vue\" },\r\n  { value: \"nuxt\", label: \"Nuxt.js\", group: \"Vue\" },\r\n  { value: \"angular\", label: \"Angular\", group: \"Others\" },\r\n  { value: \"svelte\", label: \"Svelte\", group: \"Others\" },\r\n];\r\n\r\nfunction group(\r\n  options: Array<(typeof ALL_ITEMS)[number]>,\r\n): MultiSelectOptionGroup[] {\r\n  return options.reduce((acc, item) => {\r\n    const group = acc.find((g) => g.heading === item.group);\r\n    if (group) group.children.push(item);\r\n    else acc.push({ heading: item.group, children: [item] });\r\n\r\n    return acc;\r\n  }, [] as MultiSelectOptionGroup[]);\r\n}\r\n\r\nasync function search(keyword?: string) {\r\n  if (!keyword) return group(ALL_ITEMS);\r\n  const lowerKeyword = keyword.toLowerCase();\r\n  const filtered = ALL_ITEMS.filter((item) =>\r\n    item.label.toLowerCase().includes(lowerKeyword),\r\n  );\r\n\r\n  if (!filtered.length) {\r\n    return [\r\n      {\r\n        label: keyword,\r\n        value: keyword,\r\n      },\r\n    ];\r\n  }\r\n\r\n  return group(filtered);\r\n}\r\n\r\nexport default function MultiSelectDemo() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [options, setOptions] = useState<MultiSelectOption[]>(() =>\r\n    group(ALL_ITEMS),\r\n  );\r\n\r\n  const indexRef = useRef(0);\r\n\r\n  const handleSearch = async (keyword: string) => {\r\n    const index = ++indexRef.current;\r\n    setLoading(true);\r\n    const newOptions = await search(keyword);\r\n    if (indexRef.current === index) {\r\n      setOptions(newOptions);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MultiSelect onSearch={(keyword) => handleSearch(keyword ?? \"\")}>\r\n      <MultiSelectTrigger className=\"w-96\">\r\n        <MultiSelectValue placeholder=\"Select stack\" />\r\n      </MultiSelectTrigger>\r\n      <MultiSelectContent>\r\n        <MultiSelectSearch placeholder=\"input any...\" />\r\n        <MultiSelectList>\r\n          {loading ? null : renderMultiSelectOptions(options)}\r\n          <MultiSelectEmpty>\r\n            {loading ? \"Loading...\" : \"No results found\"}\r\n          </MultiSelectEmpty>\r\n        </MultiSelectList>\r\n      </MultiSelectContent>\r\n    </MultiSelect>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/multi-select/limit-count": {
    component: React.lazy(() => import("@/registry/demos/ui/react/multi-select/limit-count")),
    code: [{"title":"limit-count.tsx","code":"\"use client\";\r\n\r\nimport {\r\n  MultiSelect,\r\n  MultiSelectContent,\r\n  MultiSelectGroup,\r\n  MultiSelectItem,\r\n  MultiSelectList,\r\n  MultiSelectTrigger,\r\n  MultiSelectValue,\r\n} from \"@/registry/ui/react/multi-select\";\r\n\r\nexport default function MultiSelectDemo() {\r\n  return (\r\n    <MultiSelect defaultValue={[\"react\", \"next\", \"remix\"]} maxCount={3}>\r\n      <MultiSelectTrigger className=\"w-96\">\r\n        <MultiSelectValue placeholder=\"Select stack\" />\r\n      </MultiSelectTrigger>\r\n      <MultiSelectContent>\r\n        <MultiSelectList>\r\n          <MultiSelectGroup heading=\"React\">\r\n            <MultiSelectItem value=\"react\">React</MultiSelectItem>\r\n            <MultiSelectItem value=\"next\">Next.js</MultiSelectItem>\r\n            <MultiSelectItem value=\"remix\">Remix</MultiSelectItem>\r\n          </MultiSelectGroup>\r\n          <MultiSelectGroup heading=\"Vue\">\r\n            <MultiSelectItem value=\"vue\">Vue</MultiSelectItem>\r\n            <MultiSelectItem value=\"nuxt\">Nuxt</MultiSelectItem>\r\n          </MultiSelectGroup>\r\n          <MultiSelectGroup heading=\"Others\">\r\n            <MultiSelectItem value=\"angular\">Angular</MultiSelectItem>\r\n            <MultiSelectItem value=\"svelte\">Svelte</MultiSelectItem>\r\n          </MultiSelectGroup>\r\n        </MultiSelectList>\r\n      </MultiSelectContent>\r\n    </MultiSelect>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/multi-select/limit-item": {
    component: React.lazy(() => import("@/registry/demos/ui/react/multi-select/limit-item")),
    code: [{"title":"limit-item.tsx","code":"\"use client\";\r\n\r\nimport {\r\n  MultiSelect,\r\n  MultiSelectContent,\r\n  MultiSelectGroup,\r\n  MultiSelectItem,\r\n  MultiSelectList,\r\n  MultiSelectTrigger,\r\n  MultiSelectValue,\r\n} from \"@/registry/ui/react/multi-select\";\r\n\r\nexport default function MultiSelectDemo() {\r\n  return (\r\n    <MultiSelect defaultValue={[\"long\", \"react\", \"angular\", \"vue\", \"remix\"]}>\r\n      <MultiSelectTrigger className=\"w-96\">\r\n        <MultiSelectValue\r\n          placeholder=\"Select stack\"\r\n          maxDisplay={3}\r\n          maxItemLength={5}\r\n        />\r\n      </MultiSelectTrigger>\r\n      <MultiSelectContent>\r\n        <MultiSelectList>\r\n          <MultiSelectGroup heading=\"React\">\r\n            <MultiSelectItem value=\"react\">React</MultiSelectItem>\r\n            <MultiSelectItem value=\"next\">Next.js</MultiSelectItem>\r\n            <MultiSelectItem value=\"remix\">Remix</MultiSelectItem>\r\n          </MultiSelectGroup>\r\n          <MultiSelectGroup heading=\"Vue\">\r\n            <MultiSelectItem value=\"vue\">Vue</MultiSelectItem>\r\n            <MultiSelectItem value=\"nuxt\">Nuxt</MultiSelectItem>\r\n          </MultiSelectGroup>\r\n          <MultiSelectGroup heading=\"Others\">\r\n            <MultiSelectItem value=\"angular\">Angular</MultiSelectItem>\r\n            <MultiSelectItem value=\"svelte\">Svelte</MultiSelectItem>\r\n            <MultiSelectItem value=\"long\">VeryVeryLongItem</MultiSelectItem>\r\n          </MultiSelectGroup>\r\n        </MultiSelectList>\r\n      </MultiSelectContent>\r\n    </MultiSelect>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/multi-select/form": {
    component: React.lazy(() => import("@/registry/demos/ui/react/multi-select/form")),
    code: [{"title":"form.tsx","code":"\"use client\";\r\n\r\nimport { useRef, useState } from \"react\";\r\nimport Link from \"next/link\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { z } from \"zod\";\r\n\r\nimport { Button } from \"@/registry/ui/react/button\";\r\nimport {\r\n  Form,\r\n  FormControl,\r\n  FormDescription,\r\n  FormField,\r\n  FormItem,\r\n  FormLabel,\r\n  FormMessage,\r\n} from \"@/registry/ui/react/form\";\r\nimport {\r\n  MultiSelect,\r\n  MultiSelectContent,\r\n  MultiSelectEmpty,\r\n  MultiSelectList,\r\n  type MultiSelectOption,\r\n  type MultiSelectOptionGroup,\r\n  MultiSelectSearch,\r\n  MultiSelectTrigger,\r\n  MultiSelectValue,\r\n  renderMultiSelectOptions,\r\n} from \"@/registry/ui/react/multi-select\";\r\n// import { toast } from '~/components/ui/use-toast'\r\n\r\nconst ALL_ITEMS = [\r\n  { value: \"react\", label: \"React\", group: \"React\" },\r\n  { value: \"next\", label: \"Next.js\", group: \"React\" },\r\n  { value: \"remix\", label: \"Remix\", group: \"React\" },\r\n  { value: \"vue\", label: \"Vue\", group: \"Vue\" },\r\n  { value: \"nuxt\", label: \"Nuxt.js\", group: \"Vue\" },\r\n  { value: \"angular\", label: \"Angular\", group: \"Others\" },\r\n  { value: \"svelte\", label: \"Svelte\", group: \"Others\" },\r\n];\r\n\r\nfunction group(\r\n  options: Array<(typeof ALL_ITEMS)[number]>,\r\n): MultiSelectOptionGroup[] {\r\n  return options.reduce((acc, item) => {\r\n    const group = acc.find((g) => g.heading === item.group);\r\n    if (group) group.children.push(item);\r\n    else acc.push({ heading: item.group, children: [item] });\r\n\r\n    return acc;\r\n  }, [] as MultiSelectOptionGroup[]);\r\n}\r\n\r\nasync function search(keyword?: string) {\r\n  if (!keyword) return group(ALL_ITEMS);\r\n  const lowerKeyword = keyword.toLowerCase();\r\n  const filtered = ALL_ITEMS.filter((item) =>\r\n    item.label.toLowerCase().includes(lowerKeyword),\r\n  );\r\n\r\n  if (!filtered.length) {\r\n    return [\r\n      {\r\n        label: keyword,\r\n        value: keyword,\r\n      },\r\n    ];\r\n  }\r\n\r\n  return group(filtered);\r\n}\r\n\r\nconst FormSchema = z.object({\r\n  frameworks: z.array(z.string(), {\r\n    required_error: \"Please select at least one framework.\",\r\n  }),\r\n});\r\n\r\nexport default function MultiSelectDemo() {\r\n  const form = useForm<z.infer<typeof FormSchema>>({\r\n    resolver: zodResolver(FormSchema),\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [options, setOptions] = useState<MultiSelectOption[]>(() =>\r\n    group(ALL_ITEMS),\r\n  );\r\n\r\n  const indexRef = useRef(0);\r\n\r\n  const handleSearch = async (keyword: string) => {\r\n    const index = ++indexRef.current;\r\n    setLoading(true);\r\n    const newOptions = await search(keyword);\r\n    if (indexRef.current === index) {\r\n      setOptions(newOptions);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const onSubmit = (data: z.infer<typeof FormSchema>) => {\r\n    /*  toast({\r\n         title: 'You submitted the following values:',\r\n         description: (\r\n            <pre className=\"mt-2 w-[340px] rounded-md bg-slate-950 p-4\">\r\n               <code className=\"text-white\">{JSON.stringify(data, null, 2)}</code>\r\n            </pre>\r\n         ),\r\n      }) */\r\n  };\r\n\r\n  return (\r\n    <Form {...form}>\r\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"w-2/3 space-y-6\">\r\n        <FormField\r\n          control={form.control}\r\n          name=\"frameworks\"\r\n          render={({ field }) => (\r\n            <FormItem>\r\n              <FormLabel>Frameworks</FormLabel>\r\n              <MultiSelect\r\n                onValueChange={field.onChange}\r\n                defaultValue={field.value}\r\n                onSearch={(keyword) => handleSearch(keyword ?? \"\")}\r\n              >\r\n                <FormControl>\r\n                  <MultiSelectTrigger className=\"w-96\">\r\n                    <MultiSelectValue placeholder=\"Select frameworks\" />\r\n                  </MultiSelectTrigger>\r\n                </FormControl>\r\n                <MultiSelectContent>\r\n                  <MultiSelectSearch />\r\n                  <MultiSelectList>\r\n                    {loading ? null : renderMultiSelectOptions(options)}\r\n                    <MultiSelectEmpty>\r\n                      {loading ? \"Loading...\" : \"No results found\"}\r\n                    </MultiSelectEmpty>\r\n                  </MultiSelectList>\r\n                </MultiSelectContent>\r\n              </MultiSelect>\r\n              <FormDescription>\r\n                You can manage frameworks in{\" \"}\r\n                <Link href=\"/examples/forms\">framework settings</Link>.\r\n              </FormDescription>\r\n              <FormMessage />\r\n            </FormItem>\r\n          )}\r\n        />\r\n        <Button type=\"submit\">Submit</Button>\r\n      </form>\r\n    </Form>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/pagination/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/pagination/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\r\n\r\nimport { Paginations } from \"@/registry/ui/react/pagination\";\r\nimport React from \"react\";\r\n\r\nconst generateFakeData = (numItems: number) => {\r\n  return Array.from({ length: numItems }, (_, index) => ({\r\n    id: index + 1,\r\n    name: `Item ${index + 1}`,\r\n  }));\r\n};\r\n\r\nconst ITEMS_PER_PAGE = 10;\r\n\r\nexport default function PaginationDemo() {\r\n  const data = generateFakeData(100);\r\n  const [currentPage, setCurrentPage] = React.useState(1);\r\n\r\n  const handlePageChange = (page: number) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  return (\r\n    <Paginations\r\n      totalPages={Math.ceil(data.length / ITEMS_PER_PAGE)}\r\n      onChange={handlePageChange}\r\n    />\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/popover/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/popover/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\r\n\r\nimport { Label } from \"@/registry/ui/react/label\";\r\nimport { Button } from \"@/registry/ui/react/button\";\r\nimport { TextField } from \"@/registry/ui/react/text-field\";\r\nimport { Popover } from \"@/registry/ui/react/popover\";\r\n\r\nexport default function PopoverDemo() {\r\n  const Content = () => (\r\n    <div className=\"grid gap-4\">\r\n      <div className=\"space-y-2\">\r\n        <h4 className=\"font-medium leading-none\">Dimensions</h4>\r\n        <p className=\"text-muted-foreground text-sm\">\r\n          Set the dimensions for the layer.\r\n        </p>\r\n      </div>\r\n      <div className=\"grid gap-2\">\r\n        <div className=\"grid grid-cols-3 items-center gap-4\">\r\n          <Label htmlFor=\"width\">Width</Label>\r\n          <TextField\r\n            id=\"width\"\r\n            defaultValue=\"100%\"\r\n            className=\"col-span-2 h-8\"\r\n          />\r\n        </div>\r\n        <div className=\"grid grid-cols-3 items-center gap-4\">\r\n          <Label htmlFor=\"maxWidth\">Max. width</Label>\r\n          <TextField\r\n            id=\"maxWidth\"\r\n            defaultValue=\"300px\"\r\n            className=\"col-span-2 h-8\"\r\n          />\r\n        </div>\r\n        <div className=\"grid grid-cols-3 items-center gap-4\">\r\n          <Label htmlFor=\"height\">Height</Label>\r\n          <TextField\r\n            id=\"height\"\r\n            defaultValue=\"25px\"\r\n            className=\"col-span-2 h-8\"\r\n          />\r\n        </div>\r\n        <div className=\"grid grid-cols-3 items-center gap-4\">\r\n          <Label htmlFor=\"maxHeight\">Max. height</Label>\r\n          <TextField\r\n            id=\"maxHeight\"\r\n            defaultValue=\"none\"\r\n            className=\"col-span-2 h-8\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Popover content={<Content />} className=\"w-80\">\r\n      <Button>Open popover</Button>\r\n    </Popover>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/popover/placement": {
    component: React.lazy(() => import("@/registry/demos/ui/react/popover/placement")),
    code: [{"title":"placement.tsx","code":"\"use client\";\r\n\r\nimport { Label } from \"@/registry/ui/react/label\";\r\nimport { Button } from \"@/registry/ui/react/button\";\r\nimport { TextField } from \"@/registry/ui/react/text-field\";\r\nimport { Popover } from \"@/registry/ui/react/popover\";\r\n\r\nconst placements = [\"top\", \"right\", \"left\", \"bottom\"] as const;\r\n\r\nexport default function PopoverDemo() {\r\n  const Content = () => (\r\n    <div className=\"grid gap-4\">\r\n      <div className=\"space-y-2\">\r\n        <h4 className=\"font-medium leading-none\">Dimensions</h4>\r\n        <p className=\"text-muted-foreground text-sm\">\r\n          Set the dimensions for the layer.\r\n        </p>\r\n      </div>\r\n      <div className=\"grid gap-2\">\r\n        <div className=\"grid grid-cols-3 items-center gap-4\">\r\n          <Label htmlFor=\"width\">Width</Label>\r\n          <TextField\r\n            id=\"width\"\r\n            defaultValue=\"100%\"\r\n            className=\"col-span-2 h-8\"\r\n          />\r\n        </div>\r\n        <div className=\"grid grid-cols-3 items-center gap-4\">\r\n          <Label htmlFor=\"maxWidth\">Max. width</Label>\r\n          <TextField\r\n            id=\"maxWidth\"\r\n            defaultValue=\"300px\"\r\n            className=\"col-span-2 h-8\"\r\n          />\r\n        </div>\r\n        <div className=\"grid grid-cols-3 items-center gap-4\">\r\n          <Label htmlFor=\"height\">Height</Label>\r\n          <TextField\r\n            id=\"height\"\r\n            defaultValue=\"25px\"\r\n            className=\"col-span-2 h-8\"\r\n          />\r\n        </div>\r\n        <div className=\"grid grid-cols-3 items-center gap-4\">\r\n          <Label htmlFor=\"maxHeight\">Max. height</Label>\r\n          <TextField\r\n            id=\"maxHeight\"\r\n            defaultValue=\"none\"\r\n            className=\"col-span-2 h-8\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-2 gap-2\">\r\n      {placements.map((placement) => (\r\n        <Popover\r\n          key={placement}\r\n          placement={placement}\r\n          content={<Content />}\r\n          className=\"w-80\"\r\n        >\r\n          <Button>{placement}</Button>\r\n        </Popover>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/popover/offset": {
    component: React.lazy(() => import("@/registry/demos/ui/react/popover/offset")),
    code: [{"title":"offset.tsx","code":"\"use client\";\r\n\r\nimport { Label } from \"@/registry/ui/react/label\";\r\nimport { Button } from \"@/registry/ui/react/button\";\r\nimport { TextField } from \"@/registry/ui/react/text-field\";\r\nimport { Popover } from \"@/registry/ui/react/popover\";\r\n\r\nexport default function PopoverDemo() {\r\n  const Content = () => (\r\n    <div className=\"grid gap-4\">\r\n      <div className=\"space-y-2\">\r\n        <h4 className=\"font-medium leading-none\">Dimensions</h4>\r\n        <p className=\"text-muted-foreground text-sm\">\r\n          Set the dimensions for the layer.\r\n        </p>\r\n      </div>\r\n      <div className=\"grid gap-2\">\r\n        <div className=\"grid grid-cols-3 items-center gap-4\">\r\n          <Label htmlFor=\"width\">Width</Label>\r\n          <TextField\r\n            id=\"width\"\r\n            defaultValue=\"100%\"\r\n            className=\"col-span-2 h-8\"\r\n          />\r\n        </div>\r\n        <div className=\"grid grid-cols-3 items-center gap-4\">\r\n          <Label htmlFor=\"maxWidth\">Max. width</Label>\r\n          <TextField\r\n            id=\"maxWidth\"\r\n            defaultValue=\"300px\"\r\n            className=\"col-span-2 h-8\"\r\n          />\r\n        </div>\r\n        <div className=\"grid grid-cols-3 items-center gap-4\">\r\n          <Label htmlFor=\"height\">Height</Label>\r\n          <TextField\r\n            id=\"height\"\r\n            defaultValue=\"25px\"\r\n            className=\"col-span-2 h-8\"\r\n          />\r\n        </div>\r\n        <div className=\"grid grid-cols-3 items-center gap-4\">\r\n          <Label htmlFor=\"maxHeight\">Max. height</Label>\r\n          <TextField\r\n            id=\"maxHeight\"\r\n            defaultValue=\"none\"\r\n            className=\"col-span-2 h-8\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Popover content={<Content />} className=\"w-80\" offset={20}>\r\n      <Button>Open popover</Button>\r\n    </Popover>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/popover/arrow": {
    component: React.lazy(() => import("@/registry/demos/ui/react/popover/arrow")),
    code: [{"title":"arrow.tsx","code":"\"use client\";\r\n\r\nimport { Label } from \"@/registry/ui/react/label\";\r\nimport { Button } from \"@/registry/ui/react/button\";\r\nimport { TextField } from \"@/registry/ui/react/text-field\";\r\nimport { Popover } from \"@/registry/ui/react/popover\";\r\n\r\nexport default function PopoverDemo() {\r\n  const Content = () => (\r\n    <div className=\"grid gap-4\">\r\n      <div className=\"space-y-2\">\r\n        <h4 className=\"font-medium leading-none\">Dimensions</h4>\r\n        <p className=\"text-muted-foreground text-sm\">\r\n          Set the dimensions for the layer.\r\n        </p>\r\n      </div>\r\n      <div className=\"grid gap-2\">\r\n        <div className=\"grid grid-cols-3 items-center gap-4\">\r\n          <Label htmlFor=\"width\">Width</Label>\r\n          <TextField\r\n            id=\"width\"\r\n            defaultValue=\"100%\"\r\n            className=\"col-span-2 h-8\"\r\n          />\r\n        </div>\r\n        <div className=\"grid grid-cols-3 items-center gap-4\">\r\n          <Label htmlFor=\"maxWidth\">Max. width</Label>\r\n          <TextField\r\n            id=\"maxWidth\"\r\n            defaultValue=\"300px\"\r\n            className=\"col-span-2 h-8\"\r\n          />\r\n        </div>\r\n        <div className=\"grid grid-cols-3 items-center gap-4\">\r\n          <Label htmlFor=\"height\">Height</Label>\r\n          <TextField\r\n            id=\"height\"\r\n            defaultValue=\"25px\"\r\n            className=\"col-span-2 h-8\"\r\n          />\r\n        </div>\r\n        <div className=\"grid grid-cols-3 items-center gap-4\">\r\n          <Label htmlFor=\"maxHeight\">Max. height</Label>\r\n          <TextField\r\n            id=\"maxHeight\"\r\n            defaultValue=\"none\"\r\n            className=\"col-span-2 h-8\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Popover content={<Content />} className=\"w-80\" arrow>\r\n      <Button>Open popover</Button>\r\n    </Popover>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/popover/composition": {
    component: React.lazy(() => import("@/registry/demos/ui/react/popover/composition")),
    code: [{"title":"composition.tsx","code":"\"use client\";\r\n\r\nimport { Label } from \"@/registry/ui/react/label\";\r\nimport { Button } from \"@/registry/ui/react/button\";\r\nimport { TextField } from \"@/registry/ui/react/text-field\";\r\nimport {\r\n  Popover,\r\n  PopoverContent,\r\n  PopoverTrigger,\r\n} from \"@/registry/ui/react/popover\";\r\n\r\nexport default function PopoverDemo() {\r\n  return (\r\n    <Popover>\r\n      <PopoverTrigger asChild>\r\n        <Button>Open popover</Button>\r\n      </PopoverTrigger>\r\n      <PopoverContent className=\"w-80\">\r\n        <div className=\"grid gap-4\">\r\n          <div className=\"space-y-2\">\r\n            <h4 className=\"font-medium leading-none\">Dimensions</h4>\r\n            <p className=\"text-muted-foreground text-sm\">\r\n              Set the dimensions for the layer.\r\n            </p>\r\n          </div>\r\n          <div className=\"grid gap-2\">\r\n            <div className=\"grid grid-cols-3 items-center gap-4\">\r\n              <Label htmlFor=\"width\">Width</Label>\r\n              <TextField\r\n                id=\"width\"\r\n                defaultValue=\"100%\"\r\n                className=\"col-span-2 h-8\"\r\n              />\r\n            </div>\r\n            <div className=\"grid grid-cols-3 items-center gap-4\">\r\n              <Label htmlFor=\"maxWidth\">Max. width</Label>\r\n              <TextField\r\n                id=\"maxWidth\"\r\n                defaultValue=\"300px\"\r\n                className=\"col-span-2 h-8\"\r\n              />\r\n            </div>\r\n            <div className=\"grid grid-cols-3 items-center gap-4\">\r\n              <Label htmlFor=\"height\">Height</Label>\r\n              <TextField\r\n                id=\"height\"\r\n                defaultValue=\"25px\"\r\n                className=\"col-span-2 h-8\"\r\n              />\r\n            </div>\r\n            <div className=\"grid grid-cols-3 items-center gap-4\">\r\n              <Label htmlFor=\"maxHeight\">Max. height</Label>\r\n              <TextField\r\n                id=\"maxHeight\"\r\n                defaultValue=\"none\"\r\n                className=\"col-span-2 h-8\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </PopoverContent>\r\n    </Popover>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/radio-group/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/radio-group/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\r\n\r\nimport {\r\n  RadioGroup,\r\n  RadioGroupItem,\r\n} from \"@/registry/ui/react/radio-group\";\r\nimport { Label } from \"@/registry/ui/react/label\";\r\n\r\nexport default function RadioGroupDemo() {\r\n  return (\r\n    <RadioGroup defaultValue=\"comfortable\">\r\n      <div className=\"flex items-center space-x-2\">\r\n        <RadioGroupItem value=\"default\" id=\"r1\" />\r\n        <Label htmlFor=\"r1\">Default</Label>\r\n      </div>\r\n      <div className=\"flex items-center space-x-2\">\r\n        <RadioGroupItem value=\"comfortable\" id=\"r2\" />\r\n        <Label htmlFor=\"r2\">Comfortable</Label>\r\n      </div>\r\n      <div className=\"flex items-center space-x-2\">\r\n        <RadioGroupItem value=\"compact\" id=\"r3\" />\r\n        <Label htmlFor=\"r3\">Compact</Label>\r\n      </div>\r\n    </RadioGroup>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/radio-group/variant": {
    component: React.lazy(() => import("@/registry/demos/ui/react/radio-group/variant")),
    code: [{"title":"variant.tsx","code":"\"use client\";\r\n\r\nimport {\r\n  RadioGroup,\r\n  RadioGroupItem,\r\n} from \"@/registry/ui/react/radio-group\";\r\nimport { Label } from \"@/registry/ui/react/label\";\r\n\r\nexport default function RadioGroupDemo() {\r\n  return (\r\n    <RadioGroup defaultValue=\"default\">\r\n      <div className=\"flex items-center space-x-2\">\r\n        <RadioGroupItem value=\"default\" id=\"r1\" variant=\"neutral\" />\r\n        <Label htmlFor=\"r1\">Neutral</Label>\r\n      </div>\r\n      <div className=\"flex items-center space-x-2\">\r\n        <RadioGroupItem value=\"primary\" id=\"r2\" variant=\"primary\" />\r\n        <Label htmlFor=\"r2\">Primary</Label>\r\n      </div>\r\n      <div className=\"flex items-center space-x-2\">\r\n        <RadioGroupItem value=\"secondary\" id=\"r3\" variant=\"secondary\" />\r\n        <Label htmlFor=\"r3\">Secondary</Label>\r\n      </div>\r\n    </RadioGroup>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/radio-group/size": {
    component: React.lazy(() => import("@/registry/demos/ui/react/radio-group/size")),
    code: [{"title":"size.tsx","code":"\"use client\";\r\n\r\nimport {\r\n  RadioGroup,\r\n  RadioGroupItem,\r\n} from \"@/registry/ui/react/radio-group\";\r\nimport { Label } from \"@/registry/ui/react/label\";\r\n\r\nexport default function RadioGroupDemo() {\r\n  return (\r\n    <RadioGroup defaultValue=\"small\">\r\n      <div className=\"flex items-center space-x-2\">\r\n        <RadioGroupItem value=\"small\" id=\"r1\" size=\"sm\" />\r\n        <Label htmlFor=\"r1\">Small</Label>\r\n      </div>\r\n      <div className=\"flex items-center space-x-2\">\r\n        <RadioGroupItem value=\"medium\" id=\"r2\" size=\"md\" />\r\n        <Label htmlFor=\"r2\">Medium</Label>\r\n      </div>\r\n      <div className=\"flex items-center space-x-2\">\r\n        <RadioGroupItem value=\"large\" id=\"r3\" size=\"lg\" />\r\n        <Label htmlFor=\"r3\">Large</Label>\r\n      </div>\r\n    </RadioGroup>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/radio-group/shape": {
    component: React.lazy(() => import("@/registry/demos/ui/react/radio-group/shape")),
    code: [{"title":"shape.tsx","code":"\"use client\";\r\n\r\nimport {\r\n  RadioGroup,\r\n  RadioGroupItem,\r\n} from \"@/registry/ui/react/radio-group\";\r\nimport { Label } from \"@/registry/ui/react/label\";\r\n\r\nexport default function RadioGroupDemo() {\r\n  return (\r\n    <RadioGroup defaultValue=\"circle\">\r\n      <div className=\"flex items-center space-x-2\">\r\n        <RadioGroupItem value=\"rectangle\" id=\"r1\" shape=\"rectangle\" />\r\n        <Label htmlFor=\"r1\">Rectangle</Label>\r\n      </div>\r\n      <div className=\"flex items-center space-x-2\">\r\n        <RadioGroupItem value=\"square\" id=\"r2\" shape=\"square\" />\r\n        <Label htmlFor=\"r2\">Square</Label>\r\n      </div>\r\n      <div className=\"flex items-center space-x-2\">\r\n        <RadioGroupItem value=\"circle\" id=\"r3\" shape=\"circle\" />\r\n        <Label htmlFor=\"r3\">Circle</Label>\r\n      </div>\r\n    </RadioGroup>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/radio-group/disabled": {
    component: React.lazy(() => import("@/registry/demos/ui/react/radio-group/disabled")),
    code: [{"title":"disabled.tsx","code":"\"use client\";\r\n\r\nimport {\r\n  RadioGroup,\r\n  RadioGroupItem,\r\n} from \"@/registry/ui/react/radio-group\";\r\nimport { Label } from \"@/registry/ui/react/label\";\r\n\r\nexport default function RadioGroupDemo() {\r\n  return (\r\n    <RadioGroup defaultValue=\"default\">\r\n      <div className=\"flex items-center space-x-2\">\r\n        <RadioGroupItem value=\"default\" id=\"r1\" disabled />\r\n        <Label htmlFor=\"r1\">Default (disabled)</Label>\r\n      </div>\r\n      <div className=\"flex items-center space-x-2\">\r\n        <RadioGroupItem value=\"comfortable\" id=\"r2\" />\r\n        <Label htmlFor=\"r2\">Comfortable</Label>\r\n      </div>\r\n    </RadioGroup>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/resizable/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/resizable/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\r\n\r\nimport {\r\n  ResizableHandle,\r\n  ResizablePanel,\r\n  ResizablePanelGroup,\r\n} from \"@/registry/ui/react/resizable\";\r\n\r\nexport default function ResizableDemo() {\r\n  return (\r\n    <ResizablePanelGroup\r\n      direction=\"horizontal\"\r\n      className=\"max-w-md rounded-lg border\"\r\n    >\r\n      <ResizablePanel defaultSize={50}>\r\n        <div className=\"flex h-[200px] items-center justify-center p-6\">\r\n          <span className=\"font-semibold\">One</span>\r\n        </div>\r\n      </ResizablePanel>\r\n      <ResizableHandle />\r\n      <ResizablePanel defaultSize={50}>\r\n        <ResizablePanelGroup direction=\"vertical\">\r\n          <ResizablePanel defaultSize={25}>\r\n            <div className=\"flex h-full items-center justify-center p-6\">\r\n              <span className=\"font-semibold\">Two</span>\r\n            </div>\r\n          </ResizablePanel>\r\n          <ResizableHandle />\r\n          <ResizablePanel defaultSize={75}>\r\n            <div className=\"flex h-full items-center justify-center p-6\">\r\n              <span className=\"font-semibold\">Three</span>\r\n            </div>\r\n          </ResizablePanel>\r\n        </ResizablePanelGroup>\r\n      </ResizablePanel>\r\n    </ResizablePanelGroup>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/resizable/direction": {
    component: React.lazy(() => import("@/registry/demos/ui/react/resizable/direction")),
    code: [{"title":"direction.tsx","code":"import {\r\n  ResizableHandle,\r\n  ResizablePanel,\r\n  ResizablePanelGroup,\r\n} from \"@/registry/ui/react/resizable\";\r\n\r\nexport default function ResizableDemo() {\r\n  return (\r\n    <ResizablePanelGroup\r\n      direction=\"vertical\"\r\n      className=\"min-h-[200px] max-w-md rounded-lg border\"\r\n    >\r\n      <ResizablePanel defaultSize={25}>\r\n        <div className=\"flex h-full items-center justify-center p-6\">\r\n          <span className=\"font-semibold\">Header</span>\r\n        </div>\r\n      </ResizablePanel>\r\n      <ResizableHandle />\r\n      <ResizablePanel defaultSize={75}>\r\n        <div className=\"flex h-full items-center justify-center p-6\">\r\n          <span className=\"font-semibold\">Content</span>\r\n        </div>\r\n      </ResizablePanel>\r\n    </ResizablePanelGroup>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/resizable/handle": {
    component: React.lazy(() => import("@/registry/demos/ui/react/resizable/handle")),
    code: [{"title":"handle.tsx","code":"import {\r\n  ResizableHandle,\r\n  ResizablePanel,\r\n  ResizablePanelGroup,\r\n} from \"@/registry/ui/react/resizable\";\r\n\r\nexport default function ResizableDemo() {\r\n  return (\r\n    <ResizablePanelGroup\r\n      direction=\"horizontal\"\r\n      className=\"min-h-[200px] max-w-md rounded-lg border\"\r\n    >\r\n      <ResizablePanel defaultSize={25}>\r\n        <div className=\"flex h-full items-center justify-center p-6\">\r\n          <span className=\"font-semibold\">Sidebar</span>\r\n        </div>\r\n      </ResizablePanel>\r\n      <ResizableHandle withHandle />\r\n      <ResizablePanel defaultSize={75}>\r\n        <div className=\"flex h-full items-center justify-center p-6\">\r\n          <span className=\"font-semibold\">Content</span>\r\n        </div>\r\n      </ResizablePanel>\r\n    </ResizablePanelGroup>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/scroll-area/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/scroll-area/default")),
    code: [{"title":"default.tsx","code":"import { ScrollArea } from \"@/registry/ui/react/scroll-area\";\r\nimport * as React from \"react\";\r\n\r\nexport default function ScrollAreaDemo() {\r\n  return (\r\n    <div className=\"rounded-md border p-6\">\r\n      <ScrollArea className=\"h-72 w-full max-w-sm\" type=\"always\">\r\n        <div className=\"space-y-4 p-4 pr-8\">\r\n          <h4 className=\"text-md font-bold\">\r\n            Principles of the typographic craft\r\n          </h4>\r\n          <p>\r\n            Three fundamental aspects of typography are legibility, readability,\r\n            and aesthetics. Although in a non-technical sense “legible” and\r\n            “readable” are often used synonymously, typographically they are\r\n            separate but related concepts.\r\n          </p>\r\n          <p>\r\n            Legibility describes how easily individual characters can be\r\n            distinguished from one another. It is described by Walter Tracy as\r\n            “the quality of being decipherable and recognisable”. For instance,\r\n            if a “b” and an “h”, or a “3” and an “8”, are difficult to\r\n            distinguish at small sizes, this is a problem of legibility.\r\n          </p>\r\n          <p>\r\n            Typographers are concerned with legibility insofar as it is their\r\n            job to select the correct font to use. Brush Script is an example of\r\n            a font containing many characters that might be difficult to\r\n            distinguish. The selection of cases influences the legibility of\r\n            typography because using only uppercase letters (all-caps) reduces\r\n            legibility.\r\n          </p>\r\n        </div>\r\n      </ScrollArea>\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/scroll-area/sizes": {
    component: React.lazy(() => import("@/registry/demos/ui/react/scroll-area/sizes")),
    code: [{"title":"sizes.tsx","code":"import { ScrollArea } from \"@/registry/ui/react/scroll-area\";\r\nimport * as React from \"react\";\r\n\r\nconst sizes = [\"sm\", \"md\", \"lg\"] as const;\r\n\r\nexport default function ScrollAreaDemo() {\r\n  return (\r\n    <div className=\"grid grid-cols-3 gap-10\">\r\n      {sizes.map((size) => (\r\n        <div key={size} className=\"rounded-md border p-3\">\r\n          <ScrollArea size={size} className=\"h-72\" type=\"always\">\r\n            <div className=\"space-y-4 p-4 pr-8\">\r\n              <h4 className=\"text-md font-bold\">\r\n                Principles of the typographic craft\r\n              </h4>\r\n              <p>\r\n                Three fundamental aspects of typography are legibility,\r\n                readability, and aesthetics. Although in a non-technical sense\r\n                “legible” and “readable” are often used synonymously,\r\n                typographically they are separate but related concepts.\r\n              </p>\r\n              <p>\r\n                Legibility describes how easily individual characters can be\r\n                distinguished from one another. It is described by Walter Tracy\r\n                as “the quality of being decipherable and recognisable”. For\r\n                instance, if a “b” and an “h”, or a “3” and an “8”, are\r\n                difficult to distinguish at small sizes, this is a problem of\r\n                legibility.\r\n              </p>\r\n              <p>\r\n                Typographers are concerned with legibility insofar as it is\r\n                their job to select the correct font to use. Brush Script is an\r\n                example of a font containing many characters that might be\r\n                difficult to distinguish. The selection of cases influences the\r\n                legibility of typography because using only uppercase letters\r\n                (all-caps) reduces legibility.\r\n              </p>\r\n            </div>\r\n          </ScrollArea>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/scroll-area/variants": {
    component: React.lazy(() => import("@/registry/demos/ui/react/scroll-area/variants")),
    code: [{"title":"variants.tsx","code":"import { ScrollArea } from \"@/registry/ui/react/scroll-area\";\r\nimport * as React from \"react\";\r\n\r\nconst variants = [\"default\", \"primary\", \"secondary\"] as const;\r\n\r\nexport default function ScrollAreaDemo() {\r\n  return (\r\n    <div className=\"grid grid-cols-3 gap-10\">\r\n      {variants.map((variant) => (\r\n        <div key={variant} className=\"rounded-md border p-3\">\r\n          <ScrollArea variant={variant} className=\"h-72\" type=\"always\">\r\n            <div className=\"space-y-4 p-4 pr-8\">\r\n              <h4 className=\"text-md font-bold\">\r\n                Principles of the typographic craft\r\n              </h4>\r\n              <p>\r\n                Three fundamental aspects of typography are legibility,\r\n                readability, and aesthetics. Although in a non-technical sense\r\n                “legible” and “readable” are often used synonymously,\r\n                typographically they are separate but related concepts.\r\n              </p>\r\n              <p>\r\n                Legibility describes how easily individual characters can be\r\n                distinguished from one another. It is described by Walter Tracy\r\n                as “the quality of being decipherable and recognisable”. For\r\n                instance, if a “b” and an “h”, or a “3” and an “8”, are\r\n                difficult to distinguish at small sizes, this is a problem of\r\n                legibility.\r\n              </p>\r\n              <p>\r\n                Typographers are concerned with legibility insofar as it is\r\n                their job to select the correct font to use. Brush Script is an\r\n                example of a font containing many characters that might be\r\n                difficult to distinguish. The selection of cases influences the\r\n                legibility of typography because using only uppercase letters\r\n                (all-caps) reduces legibility.\r\n              </p>\r\n            </div>\r\n          </ScrollArea>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/scroll-area/scrollbars": {
    component: React.lazy(() => import("@/registry/demos/ui/react/scroll-area/scrollbars")),
    code: [{"title":"scrollbars.tsx","code":"\"use client\";\r\n\r\nimport {\r\n  ScrollArea,\r\n  ScrollAreaProps,\r\n} from \"@/registry/ui/react/scroll-area\";\r\nimport * as React from \"react\";\r\n// import { Radio, RadioGroup } from \"@/lib/components/radio-group\";\r\n\r\nexport default function ScrollAreaDemo(): JSX.Element {\r\n  const [scrollbars, setScrollbars] = React.useState(\"vertical\");\r\n  return (\r\n    <div className=\"flex items-center gap-10\">\r\n      <div className=\"rounded-md border p-6\">\r\n        <ScrollArea\r\n          scrollbars={scrollbars as ScrollAreaProps[\"scrollbars\"]}\r\n          className=\"h-44 w-full max-w-sm\"\r\n          type=\"always\"\r\n        >\r\n          <div className=\"flex w-[500px] items-start gap-4\">\r\n            <div className=\"space-y-4 p-4 pr-8\">\r\n              <h4 className=\"text-md font-bold\">\r\n                Principles of the typographic craft\r\n              </h4>\r\n              <p>\r\n                Three fundamental aspects of typography are legibility,\r\n                readability, and aesthetics. Although in a non-technical sense\r\n                “legible” and “readable” are often used synonymously,\r\n                typographically they are separate but related concepts.\r\n              </p>\r\n              <p>\r\n                Legibility describes how easily individual characters can be\r\n                distinguished from one another. It is described by Walter Tracy\r\n                as “the quality of being decipherable and recognisable”. For\r\n                instance, if a “b” and an “h”, or a “3” and an “8”, are\r\n                difficult to distinguish at small sizes, this is a problem of\r\n                legibility.\r\n              </p>\r\n              <p>\r\n                Typographers are concerned with legibility insofar as it is\r\n                their job to select the correct font to use. Brush Script is an\r\n                example of a font containing many characters that might be\r\n                difficult to distinguish. The selection of cases influences the\r\n                legibility of typography because using only uppercase letters\r\n                (all-caps) reduces legibility.\r\n              </p>\r\n            </div>\r\n            <div className=\"space-y-4 p-4 pr-8\">\r\n              <h4 className=\"text-md font-bold\">\r\n                Principles of the typographic craft\r\n              </h4>\r\n              <p>\r\n                Three fundamental aspects of typography are legibility,\r\n                readability, and aesthetics. Although in a non-technical sense\r\n                “legible” and “readable” are often used synonymously,\r\n                typographically they are separate but related concepts.\r\n              </p>\r\n              <p>\r\n                Legibility describes how easily individual characters can be\r\n                distinguished from one another. It is described by Walter Tracy\r\n                as “the quality of being decipherable and recognisable”. For\r\n                instance, if a “b” and an “h”, or a “3” and an “8”, are\r\n                difficult to distinguish at small sizes, this is a problem of\r\n                legibility.\r\n              </p>\r\n              <p>\r\n                Typographers are concerned with legibility insofar as it is\r\n                their job to select the correct font to use. Brush Script is an\r\n                example of a font containing many characters that might be\r\n                difficult to distinguish. The selection of cases influences the\r\n                legibility of typography because using only uppercase letters\r\n                (all-caps) reduces legibility.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </ScrollArea>\r\n      </div>\r\n      {/* <RadioGroup label=\"Scrollbars\" value={scrollbars} onChange={setScrollbars}>\r\n        <Radio value=\"vertical\">Vertical</Radio>\r\n        <Radio value=\"horizontal\">Horizontal</Radio>\r\n        <Radio value=\"both\">Both</Radio>\r\n      </RadioGroup> */}\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/select/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/select/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\r\n\r\nimport * as React from \"react\";\r\n\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectGroup,\r\n  SelectItem,\r\n  SelectLabel,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from \"@/registry/ui/react/select\";\r\n\r\nexport default function SelectDemo() {\r\n  return (\r\n    <Select>\r\n      <SelectTrigger className=\"w-[180px]\">\r\n        <SelectValue placeholder=\"Select a fruit\" />\r\n      </SelectTrigger>\r\n      <SelectContent>\r\n        <SelectGroup>\r\n          <SelectLabel>Fruits</SelectLabel>\r\n          <SelectItem value=\"apple\">Apple</SelectItem>\r\n          <SelectItem value=\"banana\">Banana</SelectItem>\r\n          <SelectItem value=\"blueberry\">Blueberry</SelectItem>\r\n          <SelectItem value=\"grapes\">Grapes</SelectItem>\r\n          <SelectItem value=\"pineapple\">Pineapple</SelectItem>\r\n        </SelectGroup>\r\n      </SelectContent>\r\n    </Select>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/separator/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/separator/default")),
    code: [{"title":"default.tsx","code":"import { Separator } from \"@/registry/ui/react/separator\";\r\n\r\nexport default function SeparatorDemo() {\r\n  return (\r\n    <div className=\"space-y-2 rounded-md border p-4\">\r\n      <div>\r\n        <h3 className=\"font-bold\">UI</h3>\r\n        <p className=\"text-sm text-muted-fg\">\r\n          Tools for building high-quality, accessible UI.\r\n        </p>\r\n      </div>\r\n      <Separator className=\"my-4\" />\r\n      <div className=\"flex h-5 items-center space-x-4 text-sm\">\r\n        <div>Docs</div>\r\n        <Separator orientation=\"vertical\" />\r\n        <div>Components</div>\r\n        <Separator orientation=\"vertical\" />\r\n        <div>Hooks</div>\r\n        <Separator orientation=\"vertical\" />\r\n        <div>Themes</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/separator/orientation": {
    component: React.lazy(() => import("@/registry/demos/ui/react/separator/orientation")),
    code: [{"title":"orientation.tsx","code":"import { Separator } from \"@/registry/ui/react/separator\";\r\n\r\nexport default function SeparatorDemo() {\r\n  return (\r\n    <div className=\"flex items-center gap-10\">\r\n      <div className=\"flex h-5 items-center gap-2 text-sm\">\r\n        <div>Components</div>\r\n        <Separator orientation=\"vertical\" />\r\n        <div>Hooks</div>\r\n      </div>\r\n      <div className=\"flex flex-col items-center gap-2 text-sm\">\r\n        <div>Components</div>\r\n        <Separator orientation=\"horizontal\" />\r\n        <div>Hooks</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/sheet/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/sheet/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\r\n\r\nimport { Label } from \"@/registry/ui/react/label\";\r\nimport { TextField } from \"@/registry/ui/react/text-field\";\r\nimport { Button } from \"@/registry/ui/react/button\";\r\nimport {\r\n  Sheet,\r\n  SheetHeader,\r\n  SheetTitle,\r\n  SheetDescription,\r\n  SheetFooter,\r\n  SheetClose,\r\n} from \"@/registry/ui/react/sheet\";\r\n\r\nexport default function SheetDemo() {\r\n  const Content = () => (\r\n    <>\r\n      <SheetHeader>\r\n        <SheetTitle>Edit profile</SheetTitle>\r\n        <SheetDescription>\r\n          Make changes to your profile here. Click save when you're done.\r\n        </SheetDescription>\r\n      </SheetHeader>\r\n      <div className=\"grid gap-4 py-4\">\r\n        <div className=\"grid grid-cols-4 items-center gap-4\">\r\n          <Label htmlFor=\"name\" className=\"text-right\">\r\n            Name\r\n          </Label>\r\n          <TextField\r\n            id=\"name\"\r\n            defaultValue=\"Pedro Duarte\"\r\n            className=\"col-span-3\"\r\n          />\r\n        </div>\r\n        <div className=\"grid grid-cols-4 items-center gap-4\">\r\n          <Label htmlFor=\"username\" className=\"text-right\">\r\n            Username\r\n          </Label>\r\n          <TextField\r\n            id=\"username\"\r\n            defaultValue=\"~peduarte\"\r\n            className=\"col-span-3\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <SheetFooter>\r\n        <Button type=\"submit\">Save changes</Button>\r\n      </SheetFooter>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <Sheet content={<Content />}>\r\n      <Button>Open</Button>\r\n    </Sheet>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/sheet/side": {
    component: React.lazy(() => import("@/registry/demos/ui/react/sheet/side")),
    code: [{"title":"side.tsx","code":"\"use client\";\r\n\r\nimport { Label } from \"@/registry/ui/react/label\";\r\nimport { TextField } from \"@/registry/ui/react/text-field\";\r\nimport { Button } from \"@/registry/ui/react/button\";\r\nimport {\r\n  Sheet,\r\n  SheetHeader,\r\n  SheetTitle,\r\n  SheetDescription,\r\n  SheetFooter,\r\n  SheetClose,\r\n} from \"@/registry/ui/react/sheet\";\r\n\r\nconst sides = [\"top\", \"right\", \"left\", \"bottom\"] as const;\r\n\r\nexport default function SheetDemo() {\r\n  const Content = () => (\r\n    <>\r\n      <SheetHeader>\r\n        <SheetTitle>Edit profile</SheetTitle>\r\n        <SheetDescription>\r\n          Make changes to your profile here. Click save when you're done.\r\n        </SheetDescription>\r\n      </SheetHeader>\r\n      <div className=\"grid gap-4 py-4\">\r\n        <div className=\"grid grid-cols-4 items-center gap-4\">\r\n          <Label htmlFor=\"name\" className=\"text-right\">\r\n            Name\r\n          </Label>\r\n          <TextField\r\n            id=\"name\"\r\n            defaultValue=\"Pedro Duarte\"\r\n            className=\"col-span-3\"\r\n          />\r\n        </div>\r\n        <div className=\"grid grid-cols-4 items-center gap-4\">\r\n          <Label htmlFor=\"username\" className=\"text-right\">\r\n            Username\r\n          </Label>\r\n          <TextField\r\n            id=\"username\"\r\n            defaultValue=\"~peduarte\"\r\n            className=\"col-span-3\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <SheetFooter>\r\n        <Button type=\"submit\">Save changes</Button>\r\n      </SheetFooter>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-2 gap-2\">\r\n      {sides.map((side) => (\r\n        <Sheet key={side} content={<Content />} side={side}>\r\n          <Button>{side}</Button>\r\n        </Sheet>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/sheet/composition": {
    component: React.lazy(() => import("@/registry/demos/ui/react/sheet/composition")),
    code: [{"title":"composition.tsx","code":"\"use client\";\r\n\r\nimport { Label } from \"@/registry/ui/react/label\";\r\nimport { TextField } from \"@/registry/ui/react/text-field\";\r\nimport { Button } from \"@/registry/ui/react/button\";\r\nimport {\r\n  Sheet,\r\n  SheetTrigger,\r\n  SheetContent,\r\n  SheetHeader,\r\n  SheetTitle,\r\n  SheetDescription,\r\n  SheetFooter,\r\n  SheetClose,\r\n} from \"@/registry/ui/react/sheet\";\r\n\r\nexport default function SheetDemo() {\r\n  return (\r\n    <Sheet>\r\n      <SheetTrigger asChild>\r\n        <Button>Open</Button>\r\n      </SheetTrigger>\r\n      <SheetContent>\r\n        <SheetHeader>\r\n          <SheetTitle>Edit profile</SheetTitle>\r\n          <SheetDescription>\r\n            Make changes to your profile here. Click save when you're done.\r\n          </SheetDescription>\r\n        </SheetHeader>\r\n        <div className=\"grid gap-4 py-4\">\r\n          <div className=\"grid grid-cols-4 items-center gap-4\">\r\n            <Label htmlFor=\"name\" className=\"text-right\">\r\n              Name\r\n            </Label>\r\n            <TextField id=\"name\" value=\"Pedro Duarte\" className=\"col-span-3\" />\r\n          </div>\r\n          <div className=\"grid grid-cols-4 items-center gap-4\">\r\n            <Label htmlFor=\"username\" className=\"text-right\">\r\n              Username\r\n            </Label>\r\n            <TextField id=\"username\" value=\"~peduarte\" className=\"col-span-3\" />\r\n          </div>\r\n        </div>\r\n        <SheetFooter>\r\n          <SheetClose asChild>\r\n            <Button type=\"submit\">Save changes</Button>\r\n          </SheetClose>\r\n        </SheetFooter>\r\n      </SheetContent>\r\n    </Sheet>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/skeleton/card": {
    component: React.lazy(() => import("@/registry/demos/ui/react/skeleton/card")),
    code: [{"title":"card.tsx","code":"import { Skeleton } from \"@/registry/ui/react/skeleton\";\r\n\r\nexport default function SkeletonDemo() {\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <Skeleton className=\"h-44 w-64\" />\r\n      <div className=\"flex items-center space-x-4\">\r\n        <Skeleton className=\"size-10 rounded-full\" />\r\n        <div className=\"space-y-2\">\r\n          <Skeleton className=\"h-4 w-44\" />\r\n          <Skeleton className=\"h-4 w-36\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/skeleton/children": {
    component: React.lazy(() => import("@/registry/demos/ui/react/skeleton/children")),
    code: [{"title":"children.tsx","code":"import { Button } from \"@/registry/ui/react/button\";\r\nimport { Skeleton } from \"@/registry/ui/react/skeleton\";\r\n\r\nexport default function SkeletonDemo() {\r\n  return (\r\n    <Skeleton>\r\n      <Button>Button</Button>\r\n    </Skeleton>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/skeleton/show": {
    component: React.lazy(() => import("@/registry/demos/ui/react/skeleton/show")),
    code: [{"title":"show.tsx","code":"import { Button } from \"@/registry/ui/react/button\";\r\nimport { Skeleton } from \"@/registry/ui/react/skeleton\";\r\n\r\nexport default function SkeletonDemo() {\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <Skeleton>\r\n        <Button>Button</Button>\r\n      </Skeleton>\r\n      <Skeleton show={false}>\r\n        <Button>Button</Button>\r\n      </Skeleton>\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/skeleton/api-simulation": {
    component: React.lazy(() => import("@/registry/demos/ui/react/skeleton/api-simulation")),
    code: [{"title":"api-simulation.tsx","code":"\"use client\";\r\n\r\nimport { Button } from \"@/registry/ui/react/button\";\r\nimport { Skeleton } from \"@/registry/ui/react/skeleton\";\r\nimport React from \"react\";\r\n\r\nexport default function SkeletonDemo() {\r\n  const [status, setStatus] = React.useState<\r\n    \"idle\" | \"loading\" | \"error\" | \"success\"\r\n  >(\"idle\");\r\n  const apiCall = () => {\r\n    setStatus(\"loading\");\r\n    setTimeout(() => {\r\n      setStatus(\"success\");\r\n    }, 4000);\r\n  };\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <Button isLoading={status === \"loading\"} onClick={apiCall}>\r\n        Simulate API Call\r\n      </Button>\r\n      <Skeleton show={status === \"loading\"}>\r\n        <p>Some text loaded from API.</p>\r\n      </Skeleton>\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/skeleton/fixed-size-children": {
    component: React.lazy(() => import("@/registry/demos/ui/react/skeleton/fixed-size-children")),
    code: [{"title":"fixed-size-children.tsx","code":"import { Button } from \"@/registry/ui/react/button\";\r\nimport { Skeleton } from \"@/registry/ui/react/skeleton\";\r\n\r\nexport default function SkeletonDemo() {\r\n  return (\r\n    <Skeleton className=\"size-20\">\r\n      <Button>Button</Button>\r\n    </Skeleton>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/slider/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/slider/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\r\n\r\nimport { Slider } from \"@/registry/ui/react/slider\";\r\n\r\nexport default function SliderDemo() {\r\n  return <Slider defaultValue={[50]} max={100} step={1} className=\"w-3/5\" />;\r\n}\r\n"}]
  },
  "demos/ui/react/slider/disabled": {
    component: React.lazy(() => import("@/registry/demos/ui/react/slider/disabled")),
    code: [{"title":"disabled.tsx","code":"\"use client\";\r\n\r\nimport { Slider } from \"@/registry/ui/react/slider\";\r\n\r\nexport default function SliderDemo() {\r\n  return (\r\n    <Slider defaultValue={[50]} max={100} step={1} className=\"w-3/5\" disabled />\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/slider/inverted": {
    component: React.lazy(() => import("@/registry/demos/ui/react/slider/inverted")),
    code: [{"title":"inverted.tsx","code":"\"use client\";\r\n\r\nimport { Slider } from \"@/registry/ui/react/slider\";\r\n\r\nexport default function SliderDemo() {\r\n  return (\r\n    <Slider defaultValue={[50]} max={100} step={1} className=\"w-3/5\" inverted />\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/slider/orientation": {
    component: React.lazy(() => import("@/registry/demos/ui/react/slider/orientation")),
    code: [{"title":"orientation.tsx","code":"\"use client\";\r\n\r\nimport { Slider } from \"@/registry/ui/react/slider\";\r\n\r\nexport default function SliderDemo() {\r\n  return (\r\n    <div className=\"h-64\">\r\n      <Slider\r\n        defaultValue={[50]}\r\n        max={100}\r\n        step={1}\r\n        className=\"w-3/5\"\r\n        orientation=\"vertical\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/slider/range": {
    component: React.lazy(() => import("@/registry/demos/ui/react/slider/range")),
    code: [{"title":"range.tsx","code":"\"use client\";\r\n\r\nimport { Slider } from \"@/registry/ui/react/slider\";\r\n\r\nexport default function SliderDemo() {\r\n  return (\r\n    <Slider defaultValue={[25, 75]} max={100} step={1} className=\"w-3/5\" />\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/slider/half-tick-marks": {
    component: React.lazy(() => import("@/registry/demos/ui/react/slider/half-tick-marks")),
    code: [{"title":"half-tick-marks.tsx","code":"\"use client\";\r\n\r\nimport { Slider } from \"@/registry/ui/react/slider\";\r\n\r\nexport default function SliderDemo() {\r\n  return (\r\n    <Slider\r\n      defaultValue={[2]}\r\n      max={5}\r\n      step={1}\r\n      className=\"w-3/5\"\r\n      showSteps=\"half\"\r\n    />\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/slider/full-tick-marks": {
    component: React.lazy(() => import("@/registry/demos/ui/react/slider/full-tick-marks")),
    code: [{"title":"full-tick-marks.tsx","code":"\"use client\";\r\n\r\nimport { Slider } from \"@/registry/ui/react/slider\";\r\n\r\nexport default function SliderDemo() {\r\n  return (\r\n    <Slider\r\n      defaultValue={[2]}\r\n      max={5}\r\n      step={1}\r\n      className=\"w-3/5\"\r\n      showSteps=\"full\"\r\n    />\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/slider/format-label": {
    component: React.lazy(() => import("@/registry/demos/ui/react/slider/format-label")),
    code: [{"title":"format-label.tsx","code":"\"use client\";\r\n\r\nimport { Slider } from \"@/registry/ui/react/slider\";\r\n\r\nexport default function SliderDemo() {\r\n  return (\r\n    <Slider\r\n      defaultValue={[2]}\r\n      max={100}\r\n      step={1}\r\n      className=\"w-3/5\"\r\n      formatLabel={(value) => `${value} points`}\r\n    />\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/slider/format-label-side": {
    component: React.lazy(() => import("@/registry/demos/ui/react/slider/format-label-side")),
    code: [{"title":"format-label-side.tsx","code":"\"use client\";\r\n\r\nimport { Slider } from \"@/registry/ui/react/slider\";\r\n\r\nexport default function SliderDemo() {\r\n  return (\r\n    <Slider\r\n      defaultValue={[2]}\r\n      max={100}\r\n      step={1}\r\n      className=\"w-3/5\"\r\n      formatLabel={(value) => `${value} points`}\r\n      formatLabelSide=\"left\"\r\n    />\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/star-rating/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/star-rating/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { StarRating } from \"@/registry/ui/react/star-rating\";\r\n\r\nexport default function StarRatingDemo() {\r\n  return <StarRating defaultValue={3} />;\r\n}\r\n"}]
  },
  "demos/ui/react/star-rating/color": {
    component: React.lazy(() => import("@/registry/demos/ui/react/star-rating/color")),
    code: [{"title":"color.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { StarRating } from \"@/registry/ui/react/star-rating\";\r\n\r\nexport default function StarRatingDemo() {\r\n  return (\r\n    <StarRating\r\n      defaultValue={3}\r\n      iconProps={{ className: \"fill-red-500 stroke-red-500\" }}\r\n    />\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/star-rating/icon": {
    component: React.lazy(() => import("@/registry/demos/ui/react/star-rating/icon")),
    code: [{"title":"icon.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { StarRating } from \"@/registry/ui/react/star-rating\";\r\nimport { Heart } from \"lucide-react\";\r\n\r\nexport default function StarRatingDemo() {\r\n  return <StarRating defaultValue={3} icon={Heart} />;\r\n}\r\n"}]
  },
  "demos/ui/react/star-rating/disabled": {
    component: React.lazy(() => import("@/registry/demos/ui/react/star-rating/disabled")),
    code: [{"title":"disabled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { StarRating } from \"@/registry/ui/react/star-rating\";\r\n\r\nexport default function StarRatingDemo() {\r\n  return <StarRating defaultValue={3} disabled />;\r\n}\r\n"}]
  },
  "demos/ui/react/star-rating/decimal-point": {
    component: React.lazy(() => import("@/registry/demos/ui/react/star-rating/decimal-point")),
    code: [{"title":"decimal-point.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { StarRating } from \"@/registry/ui/react/star-rating\";\r\n\r\nexport default function StarRatingDemo() {\r\n  return <StarRating defaultValue={3.68} disabled />;\r\n}\r\n"}]
  },
  "demos/ui/react/stepper/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/stepper/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\r\n\r\nimport {\r\n  Stepper,\r\n  Step,\r\n  useStepper,\r\n  StepItem,\r\n} from \"@/registry/ui/react/stepper\";\r\nimport { Button } from \"@/registry/ui/react/button\";\r\n\r\nconst steps = [\r\n  { label: \"Step 1\" },\r\n  { label: \"Step 2\" },\r\n  { label: \"Step 3\" },\r\n] satisfies StepItem[];\r\n\r\nexport default function StepperDemo() {\r\n  return (\r\n    <div className=\"flex w-full flex-col gap-4\">\r\n      <Stepper initialStep={0} steps={steps}>\r\n        {steps.map((stepProps, index) => {\r\n          return (\r\n            <Step key={stepProps.label} {...stepProps}>\r\n              <div className=\"bg-bg text-primary my-2 flex h-40 items-center justify-center rounded-md border\">\r\n                <h1 className=\"text-xl\">\r\n                  Step\r\n                  {index + 1}\r\n                </h1>\r\n              </div>\r\n            </Step>\r\n          );\r\n        })}\r\n        <Footer />\r\n      </Stepper>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Footer() {\r\n  const {\r\n    nextStep,\r\n    prevStep,\r\n    resetSteps,\r\n    hasCompletedAllSteps,\r\n    isLastStep,\r\n    isOptionalStep,\r\n    isDisabledStep,\r\n  } = useStepper();\r\n  return (\r\n    <>\r\n      {hasCompletedAllSteps && (\r\n        <div className=\"bg-bg text-primary my-2 flex h-40 items-center justify-center rounded-md border\">\r\n          <h1 className=\"text-xl\">Woohoo! All steps completed! 🎉</h1>\r\n        </div>\r\n      )}\r\n      <div className=\"flex w-full justify-end gap-2\">\r\n        {hasCompletedAllSteps ? (\r\n          <Button size=\"sm\" onClick={resetSteps}>\r\n            Reset\r\n          </Button>\r\n        ) : (\r\n          <>\r\n            <Button\r\n              disabled={isDisabledStep}\r\n              onClick={prevStep}\r\n              size=\"sm\"\r\n              variant=\"secondary\"\r\n            >\r\n              Prev\r\n            </Button>\r\n            <Button size=\"sm\" onClick={nextStep}>\r\n              {isLastStep ? \"Finish\" : isOptionalStep ? \"Skip\" : \"Next\"}\r\n            </Button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/stepper/orientation": {
    component: React.lazy(() => import("@/registry/demos/ui/react/stepper/orientation")),
    code: [{"title":"orientation.tsx","code":"\"use client\";\r\n\r\nimport * as React from \"react\";\r\n\r\nimport { Button } from \"@/registry/ui/react/button\";\r\nimport { Label } from \"@/registry/ui/react/label\";\r\nimport {\r\n  RadioGroup,\r\n  RadioGroupItem,\r\n} from \"@/registry/ui/react/radio-group\";\r\nimport type {\r\n  StepItem,\r\n  StepperProps,\r\n} from \"@/registry/ui/react/stepper\";\r\nimport {\r\n  Step,\r\n  Stepper,\r\n  useStepper,\r\n} from \"@/registry/ui/react/stepper\";\r\n\r\nconst steps = [\r\n  { label: \"Step 1\" },\r\n  { label: \"Step 2\" },\r\n  { label: \"Step 3\" },\r\n] satisfies StepItem[];\r\n\r\nexport default function StepperOrientation() {\r\n  const [orientation, setOrientation] =\r\n    React.useState<StepperProps[\"orientation\"]>(\"vertical\");\r\n\r\n  return (\r\n    <div className=\"flex w-full flex-col gap-4\">\r\n      <RadioGroup\r\n        className=\"mb-2 flex\"\r\n        value={orientation}\r\n        onValueChange={(value) =>\r\n          setOrientation(value as StepperProps[\"orientation\"])\r\n        }\r\n      >\r\n        <Label\r\n          htmlFor=\"horizontal\"\r\n          className=\"bg-bg hover:bg-gray-3 [&:has([data-state=checked])]:border-primary flex w-fit flex-col gap-3 rounded-md border px-2 py-1\"\r\n        >\r\n          <RadioGroupItem\r\n            value=\"horizontal\"\r\n            id=\"horizontal\"\r\n            className=\"sr-only\"\r\n          />\r\n          <h2 className=\"font-medium\">Horizontal</h2>\r\n        </Label>\r\n        <Label\r\n          htmlFor=\"vertical\"\r\n          className=\"bg-bg hover:bg-gray-3 [&:has([data-state=checked])]:border-primary flex w-fit flex-col gap-3 rounded-md border px-2 py-1\"\r\n        >\r\n          <RadioGroupItem value=\"vertical\" id=\"vertical\" className=\"sr-only\" />\r\n          <h2 className=\"font-medium\">Vertical</h2>\r\n        </Label>\r\n      </RadioGroup>\r\n      <Stepper orientation={orientation} initialStep={0} steps={steps}>\r\n        {steps.map((stepProps, index) => {\r\n          return (\r\n            <Step key={stepProps.label} {...stepProps}>\r\n              <div className=\"bg-bg text-primary my-4 flex h-40 items-center justify-center rounded-md border\">\r\n                <h1 className=\"text-xl\">\r\n                  Step\r\n                  {index + 1}\r\n                </h1>\r\n              </div>\r\n            </Step>\r\n          );\r\n        })}\r\n        <Footer />\r\n      </Stepper>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Footer() {\r\n  const {\r\n    nextStep,\r\n    prevStep,\r\n    resetSteps,\r\n    isDisabledStep,\r\n    hasCompletedAllSteps,\r\n    isLastStep,\r\n    isOptionalStep,\r\n  } = useStepper();\r\n  return (\r\n    <>\r\n      {hasCompletedAllSteps && (\r\n        <div className=\"bg-bg text-primary flex h-40 items-center justify-center rounded-md border\">\r\n          <h1 className=\"text-xl\">Woohoo! All steps completed! 🎉</h1>\r\n        </div>\r\n      )}\r\n      <div className=\"flex w-full justify-end gap-2\">\r\n        {hasCompletedAllSteps ? (\r\n          <Button size=\"sm\" onClick={resetSteps}>\r\n            Reset\r\n          </Button>\r\n        ) : (\r\n          <>\r\n            <Button\r\n              disabled={isDisabledStep}\r\n              onClick={prevStep}\r\n              size=\"sm\"\r\n              variant=\"secondary\"\r\n            >\r\n              Prev\r\n            </Button>\r\n            <Button size=\"sm\" onClick={nextStep}>\r\n              {isLastStep ? \"Finish\" : isOptionalStep ? \"Skip\" : \"Next\"}\r\n            </Button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/stepper/optional": {
    component: React.lazy(() => import("@/registry/demos/ui/react/stepper/optional")),
    code: [{"title":"optional.tsx","code":"\"use client\";\r\n\r\nimport { Button } from \"@/registry/ui/react/button\";\r\nimport type { StepItem } from \"@/registry/ui/react/stepper\";\r\nimport {\r\n  Step,\r\n  Stepper,\r\n  useStepper,\r\n} from \"@/registry/ui/react/stepper\";\r\n\r\nconst steps = [\r\n  { label: \"Step 1\" },\r\n  { label: \"Step 2\", optional: true },\r\n  { label: \"Step 3\" },\r\n] satisfies StepItem[];\r\n\r\nexport default function StepperDemo() {\r\n  return (\r\n    <div className=\"flex w-full flex-col gap-4\">\r\n      <Stepper initialStep={0} steps={steps}>\r\n        {steps.map((stepProps, index) => {\r\n          return (\r\n            <Step key={stepProps.label} {...stepProps}>\r\n              <div className=\"bg-bg text-primary my-2 flex h-40 items-center justify-center rounded-md border\">\r\n                <h1 className=\"text-xl\">\r\n                  Step\r\n                  {index + 1}\r\n                </h1>\r\n              </div>\r\n            </Step>\r\n          );\r\n        })}\r\n        <Footer />\r\n      </Stepper>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Footer() {\r\n  const {\r\n    nextStep,\r\n    prevStep,\r\n    resetSteps,\r\n    isDisabledStep,\r\n    hasCompletedAllSteps,\r\n    isLastStep,\r\n    isOptionalStep,\r\n  } = useStepper();\r\n  return (\r\n    <>\r\n      {hasCompletedAllSteps && (\r\n        <div className=\"bg-bg text-primary my-2 flex h-40 items-center justify-center rounded-md border\">\r\n          <h1 className=\"text-xl\">Woohoo! All steps completed! 🎉</h1>\r\n        </div>\r\n      )}\r\n      <div className=\"flex w-full justify-end gap-2\">\r\n        {hasCompletedAllSteps ? (\r\n          <Button size=\"sm\" onClick={resetSteps}>\r\n            Reset\r\n          </Button>\r\n        ) : (\r\n          <>\r\n            <Button\r\n              disabled={isDisabledStep}\r\n              onClick={prevStep}\r\n              size=\"sm\"\r\n              variant=\"secondary\"\r\n            >\r\n              Prev\r\n            </Button>\r\n            <Button size=\"sm\" onClick={nextStep}>\r\n              {isLastStep ? \"Finish\" : isOptionalStep ? \"Skip\" : \"Next\"}\r\n            </Button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/stepper/variant": {
    component: React.lazy(() => import("@/registry/demos/ui/react/stepper/variant")),
    code: [{"title":"variant.tsx","code":"\"use client\";\r\n\r\nimport * as React from \"react\";\r\n\r\nimport { Button } from \"@/registry/ui/react/button\";\r\nimport { Label } from \"@/registry/ui/react/label\";\r\nimport {\r\n  RadioGroup,\r\n  RadioGroupItem,\r\n} from \"@/registry/ui/react/radio-group\";\r\nimport type {\r\n  StepItem,\r\n  StepperProps,\r\n} from \"@/registry/ui/react/stepper\";\r\nimport {\r\n  Step,\r\n  Stepper,\r\n  useStepper,\r\n} from \"@/registry/ui/react/stepper\";\r\n\r\nconst steps = [\r\n  { label: \"Step 1\" },\r\n  { label: \"Step 2\" },\r\n  { label: \"Step 3\" },\r\n] satisfies StepItem[];\r\n\r\nexport default function StepperDemo() {\r\n  const [variant, setVariant] =\r\n    React.useState<StepperProps[\"variant\"]>(\"circle\");\r\n\r\n  return (\r\n    <div className=\"flex w-full flex-col gap-4\">\r\n      <RadioGroup\r\n        className=\"mb-2 flex\"\r\n        value={variant}\r\n        onValueChange={(value) => setVariant(value as StepperProps[\"variant\"])}\r\n      >\r\n        <Label\r\n          htmlFor=\"circle\"\r\n          className=\"bg-bg hover:bg-gray-3 [&:has([data-state=checked])]:border-primary flex w-fit flex-col gap-3 rounded-md border px-2 py-1\"\r\n        >\r\n          <RadioGroupItem value=\"circle\" id=\"circle\" className=\"sr-only\" />\r\n          <h2 className=\"font-medium\">circle</h2>\r\n        </Label>\r\n        <Label\r\n          htmlFor=\"circle-alt\"\r\n          className=\"bg-bg hover:bg-gray-3 [&:has([data-state=checked])]:border-primary flex w-fit flex-col gap-3 rounded-md border px-2 py-1\"\r\n        >\r\n          <RadioGroupItem\r\n            value=\"circle-alt\"\r\n            id=\"circle-alt\"\r\n            className=\"sr-only\"\r\n          />\r\n          <h2 className=\"font-medium\">circle-alt</h2>\r\n        </Label>\r\n        <Label\r\n          htmlFor=\"line\"\r\n          className=\"bg-bg hover:bg-gray-3 [&:has([data-state=checked])]:border-primary flex w-fit flex-col gap-3 rounded-md border px-2 py-1\"\r\n        >\r\n          <RadioGroupItem value=\"line\" id=\"line\" className=\"sr-only\" />\r\n          <h2 className=\"font-medium\">line</h2>\r\n        </Label>\r\n      </RadioGroup>\r\n      <Stepper variant={variant} initialStep={0} steps={steps}>\r\n        {steps.map((stepProps, index) => {\r\n          return (\r\n            <Step key={stepProps.label} {...stepProps}>\r\n              <div className=\"bg-bg text-primary my-2 flex h-40 items-center justify-center rounded-md border\">\r\n                <h1 className=\"text-xl\">\r\n                  Step\r\n                  {index + 1}\r\n                </h1>\r\n              </div>\r\n            </Step>\r\n          );\r\n        })}\r\n        <Footer />\r\n      </Stepper>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Footer() {\r\n  const {\r\n    nextStep,\r\n    prevStep,\r\n    resetSteps,\r\n    isDisabledStep,\r\n    hasCompletedAllSteps,\r\n    isLastStep,\r\n    isOptionalStep,\r\n  } = useStepper();\r\n  return (\r\n    <>\r\n      {hasCompletedAllSteps && (\r\n        <div className=\"bg-bg text-primary my-2 flex h-40 items-center justify-center rounded-md border\">\r\n          <h1 className=\"text-xl\">Woohoo! All steps completed! 🎉</h1>\r\n        </div>\r\n      )}\r\n      <div className=\"flex w-full justify-end gap-2\">\r\n        {hasCompletedAllSteps ? (\r\n          <Button size=\"sm\" onClick={resetSteps}>\r\n            Reset\r\n          </Button>\r\n        ) : (\r\n          <>\r\n            <Button\r\n              disabled={isDisabledStep}\r\n              onClick={prevStep}\r\n              size=\"sm\"\r\n              variant=\"secondary\"\r\n            >\r\n              Prev\r\n            </Button>\r\n            <Button size=\"sm\" onClick={nextStep}>\r\n              {isLastStep ? \"Finish\" : isOptionalStep ? \"Skip\" : \"Next\"}\r\n            </Button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/stepper/size": {
    component: React.lazy(() => import("@/registry/demos/ui/react/stepper/size")),
    code: [{"title":"size.tsx","code":"\"use client\";\r\n\r\nimport * as React from \"react\";\r\n\r\nimport { Button } from \"@/registry/ui/react/button\";\r\nimport { Label } from \"@/registry/ui/react/label\";\r\nimport {\r\n  RadioGroup,\r\n  RadioGroupItem,\r\n} from \"@/registry/ui/react/radio-group\";\r\nimport type {\r\n  StepItem,\r\n  StepperProps,\r\n} from \"@/registry/ui/react/stepper\";\r\nimport {\r\n  Step,\r\n  Stepper,\r\n  useStepper,\r\n} from \"@/registry/ui/react/stepper\";\r\n\r\nconst steps = [\r\n  { label: \"Step 1\" },\r\n  { label: \"Step 2\" },\r\n  { label: \"Step 3\" },\r\n] satisfies StepItem[];\r\n\r\nexport default function StepperDemo() {\r\n  const [size, setSize] = React.useState<StepperProps[\"size\"]>(\"md\");\r\n\r\n  return (\r\n    <div className=\"flex w-full flex-col gap-4\">\r\n      <RadioGroup\r\n        className=\"mb-2 flex\"\r\n        value={size}\r\n        onValueChange={(value) => setSize(value as StepperProps[\"size\"])}\r\n      >\r\n        <Label\r\n          htmlFor=\"sm\"\r\n          className=\"bg-bg hover:bg-gray-3 [&:has([data-state=checked])]:border-primary flex w-fit flex-col gap-3 rounded-md border px-2 py-1\"\r\n        >\r\n          <RadioGroupItem value=\"sm\" id=\"sm\" className=\"sr-only\" />\r\n          <h2 className=\"font-medium\">sm</h2>\r\n        </Label>\r\n        <Label\r\n          htmlFor=\"md\"\r\n          className=\"bg-bg hover:bg-gray-3 [&:has([data-state=checked])]:border-primary flex w-fit flex-col gap-3 rounded-md border px-2 py-1\"\r\n        >\r\n          <RadioGroupItem value=\"md\" id=\"md\" className=\"sr-only\" />\r\n          <h2 className=\"font-medium\">md</h2>\r\n        </Label>\r\n        <Label\r\n          htmlFor=\"lg\"\r\n          className=\"bg-bg hover:bg-gray-3 [&:has([data-state=checked])]:border-primary flex w-fit flex-col gap-3 rounded-md border px-2 py-1\"\r\n        >\r\n          <RadioGroupItem value=\"lg\" id=\"lg\" className=\"sr-only\" />\r\n          <h2 className=\"font-medium\">lg</h2>\r\n        </Label>\r\n      </RadioGroup>\r\n      <Stepper size={size} initialStep={0} steps={steps}>\r\n        {steps.map((stepProps, index) => {\r\n          return (\r\n            <Step key={stepProps.label} {...stepProps}>\r\n              <div className=\"bg-bg text-primary my-2 flex h-40 items-center justify-center rounded-md border\">\r\n                <h1 className=\"text-xl\">\r\n                  Step\r\n                  {index + 1}\r\n                </h1>\r\n              </div>\r\n            </Step>\r\n          );\r\n        })}\r\n        <Footer />\r\n      </Stepper>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Footer() {\r\n  const {\r\n    nextStep,\r\n    prevStep,\r\n    resetSteps,\r\n    isDisabledStep,\r\n    hasCompletedAllSteps,\r\n    isLastStep,\r\n    isOptionalStep,\r\n  } = useStepper();\r\n  return (\r\n    <>\r\n      {hasCompletedAllSteps && (\r\n        <div className=\"bg-bg text-primary my-2 flex h-40 items-center justify-center rounded-md border\">\r\n          <h1 className=\"text-xl\">Woohoo! All steps completed! 🎉</h1>\r\n        </div>\r\n      )}\r\n      <div className=\"flex w-full justify-end gap-2\">\r\n        {hasCompletedAllSteps ? (\r\n          <Button size=\"sm\" onClick={resetSteps}>\r\n            Reset\r\n          </Button>\r\n        ) : (\r\n          <>\r\n            <Button\r\n              disabled={isDisabledStep}\r\n              onClick={prevStep}\r\n              size=\"sm\"\r\n              variant=\"secondary\"\r\n            >\r\n              Prev\r\n            </Button>\r\n            <Button size=\"sm\" onClick={nextStep}>\r\n              {isLastStep ? \"Finish\" : isOptionalStep ? \"Skip\" : \"Next\"}\r\n            </Button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/switch/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/switch/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\r\n\r\nimport { Label } from \"@/registry/ui/react/label\";\r\nimport { Switch } from \"@/registry/ui/react/switch\";\r\n\r\nexport default function SwitchDemo() {\r\n  return (\r\n    <div className=\"flex items-center space-x-2\">\r\n      <Switch id=\"airplane-mode\" />\r\n      <Label htmlFor=\"airplane-mode\">Airplane Mode</Label>\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/switch/variant": {
    component: React.lazy(() => import("@/registry/demos/ui/react/switch/variant")),
    code: [{"title":"variant.tsx","code":"\"use client\";\r\n\r\nimport { Label } from \"@/registry/ui/react/label\";\r\nimport { Switch } from \"@/registry/ui/react/switch\";\r\n\r\nexport default function SwitchDemo() {\r\n  return (\r\n    <div className=\"flex items-center gap-2\">\r\n      <div className=\"flex items-center space-x-2\">\r\n        <Switch variant=\"neutral\" id=\"neutral-switch\" />\r\n        <Label htmlFor=\"neutral-switch\">Neutral</Label>\r\n      </div>\r\n      <div className=\"flex items-center space-x-2\">\r\n        <Switch variant=\"primary\" id=\"primary-switch\" />\r\n        <Label htmlFor=\"primary-switch\">Primary</Label>\r\n      </div>\r\n      <div className=\"flex items-center space-x-2\">\r\n        <Switch variant=\"secondary\" id=\"secondary-switch\" />\r\n        <Label htmlFor=\"secondary-switch\">Secondary</Label>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/switch/size": {
    component: React.lazy(() => import("@/registry/demos/ui/react/switch/size")),
    code: [{"title":"size.tsx","code":"\"use client\";\r\n\r\nimport { Label } from \"@/registry/ui/react/label\";\r\nimport { Switch } from \"@/registry/ui/react/switch\";\r\n\r\nexport default function SwitchDemo() {\r\n  return (\r\n    <div className=\"flex items-center gap-2\">\r\n      <div className=\"flex items-center space-x-2\">\r\n        <Switch size=\"sm\" id=\"small-switch\" />\r\n        <Label htmlFor=\"small-switch\">Small</Label>\r\n      </div>\r\n      <div className=\"flex items-center space-x-2\">\r\n        <Switch size=\"md\" id=\"medium-switch\" />\r\n        <Label htmlFor=\"medium-switch\">Medium</Label>\r\n      </div>\r\n      <div className=\"flex items-center space-x-2\">\r\n        <Switch size=\"lg\" id=\"large-switch\" />\r\n        <Label htmlFor=\"large-switch\">Large</Label>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/switch/shape": {
    component: React.lazy(() => import("@/registry/demos/ui/react/switch/shape")),
    code: [{"title":"shape.tsx","code":"\"use client\";\r\n\r\nimport { Label } from \"@/registry/ui/react/label\";\r\nimport { Switch } from \"@/registry/ui/react/switch\";\r\n\r\nexport default function SwitchDemo() {\r\n  return (\r\n    <div className=\"flex items-center gap-2\">\r\n      <div className=\"flex items-center space-x-2\">\r\n        <Switch shape=\"rectangle\" id=\"rectangle-switch\" />\r\n        <Label htmlFor=\"rectangle-switch\">Rectangle</Label>\r\n      </div>\r\n      <div className=\"flex items-center space-x-2\">\r\n        <Switch shape=\"circle\" id=\"circle-switch\" />\r\n        <Label htmlFor=\"circle-switch\">Circle</Label>\r\n      </div>\r\n      <div className=\"flex items-center space-x-2\">\r\n        <Switch shape=\"square\" id=\"square-switch\" />\r\n        <Label htmlFor=\"square-switch\">Square</Label>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/switch/disabled": {
    component: React.lazy(() => import("@/registry/demos/ui/react/switch/disabled")),
    code: [{"title":"disabled.tsx","code":"\"use client\";\r\n\r\nimport { Label } from \"@/registry/ui/react/label\";\r\nimport { Switch } from \"@/registry/ui/react/switch\";\r\n\r\nexport default function SwitchDemo() {\r\n  return (\r\n    <div className=\"flex items-center space-x-2\">\r\n      <Switch disabled id=\"disabled-switch\" />\r\n      <Label htmlFor=\"disabled-switch\">Disabled</Label>\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/table/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/table/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\r\n\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableHeader,\r\n  TableCaption,\r\n  TableCell,\r\n  TableFooter,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@/registry/ui/react/table\";\r\n\r\nconst invoices = [\r\n  {\r\n    invoice: \"INV001\",\r\n    paymentStatus: \"Paid\",\r\n    totalAmount: \"$250.00\",\r\n    paymentMethod: \"Credit Card\",\r\n  },\r\n  {\r\n    invoice: \"INV002\",\r\n    paymentStatus: \"Pending\",\r\n    totalAmount: \"$150.00\",\r\n    paymentMethod: \"PayPal\",\r\n  },\r\n  {\r\n    invoice: \"INV003\",\r\n    paymentStatus: \"Unpaid\",\r\n    totalAmount: \"$350.00\",\r\n    paymentMethod: \"Bank Transfer\",\r\n  },\r\n  {\r\n    invoice: \"INV004\",\r\n    paymentStatus: \"Paid\",\r\n    totalAmount: \"$450.00\",\r\n    paymentMethod: \"Credit Card\",\r\n  },\r\n  {\r\n    invoice: \"INV005\",\r\n    paymentStatus: \"Paid\",\r\n    totalAmount: \"$550.00\",\r\n    paymentMethod: \"PayPal\",\r\n  },\r\n  {\r\n    invoice: \"INV006\",\r\n    paymentStatus: \"Pending\",\r\n    totalAmount: \"$200.00\",\r\n    paymentMethod: \"Bank Transfer\",\r\n  },\r\n  {\r\n    invoice: \"INV007\",\r\n    paymentStatus: \"Unpaid\",\r\n    totalAmount: \"$300.00\",\r\n    paymentMethod: \"Credit Card\",\r\n  },\r\n];\r\n\r\nexport default function TableDemo() {\r\n  return (\r\n    <Table>\r\n      <TableCaption>A list of your recent invoices.</TableCaption>\r\n      <TableHeader>\r\n        <TableRow>\r\n          <TableHead className=\"w-[100px]\">Invoice</TableHead>\r\n          <TableHead>Status</TableHead>\r\n          <TableHead>Method</TableHead>\r\n          <TableHead className=\"text-right\">Amount</TableHead>\r\n        </TableRow>\r\n      </TableHeader>\r\n      <TableBody>\r\n        {invoices.map((invoice) => (\r\n          <TableRow key={invoice.invoice}>\r\n            <TableCell className=\"font-medium\">{invoice.invoice}</TableCell>\r\n            <TableCell>{invoice.paymentStatus}</TableCell>\r\n            <TableCell>{invoice.paymentMethod}</TableCell>\r\n            <TableCell className=\"text-right\">{invoice.totalAmount}</TableCell>\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n      <TableFooter>\r\n        <TableRow>\r\n          <TableCell colSpan={3}>Total</TableCell>\r\n          <TableCell className=\"text-right\">$2,500.00</TableCell>\r\n        </TableRow>\r\n      </TableFooter>\r\n    </Table>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/table/data-table": {
    component: React.lazy(() => import("@/registry/demos/ui/react/table/data-table")),
    code: [{"title":"data-table.tsx","code":"\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport {\r\n  ColumnDef,\r\n  ColumnFiltersState,\r\n  SortingState,\r\n  VisibilityState,\r\n  flexRender,\r\n  getCoreRowModel,\r\n  getFilteredRowModel,\r\n  getPaginationRowModel,\r\n  getSortedRowModel,\r\n  useReactTable,\r\n} from \"@tanstack/react-table\";\r\nimport { ArrowUpDown, ChevronDown, MoreHorizontal } from \"@/lib/icons\";\r\nimport { Checkbox } from \"@/registry/ui/react/checkbox\";\r\nimport { Button } from \"@/registry/ui/react/button\";\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuCheckboxItem,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuLabel,\r\n  DropdownMenuSeparator,\r\n  DropdownMenuTrigger,\r\n} from \"@/registry/ui/react/dropdown-menu\";\r\nimport { TextField } from \"@/registry/ui/react/text-field\";\r\nimport {\r\n  Table,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableBody,\r\n  TableHeader,\r\n} from \"@/registry/ui/react/table\";\r\n\r\nconst data: Payment[] = [\r\n  {\r\n    id: \"m5gr84i9\",\r\n    amount: 316,\r\n    status: \"success\",\r\n    email: \"ken99@yahoo.com\",\r\n  },\r\n  {\r\n    id: \"3u1reuv4\",\r\n    amount: 242,\r\n    status: \"success\",\r\n    email: \"Abe45@gmail.com\",\r\n  },\r\n  {\r\n    id: \"derv1ws0\",\r\n    amount: 837,\r\n    status: \"processing\",\r\n    email: \"Monserrat44@gmail.com\",\r\n  },\r\n  {\r\n    id: \"5kma53ae\",\r\n    amount: 874,\r\n    status: \"success\",\r\n    email: \"Silas22@gmail.com\",\r\n  },\r\n  {\r\n    id: \"bhqecj4p\",\r\n    amount: 721,\r\n    status: \"failed\",\r\n    email: \"carmella@hotmail.com\",\r\n  },\r\n];\r\n\r\nexport type Payment = {\r\n  id: string;\r\n  amount: number;\r\n  status: \"pending\" | \"processing\" | \"success\" | \"failed\";\r\n  email: string;\r\n};\r\n\r\nexport const columns: ColumnDef<Payment>[] = [\r\n  {\r\n    id: \"select\",\r\n    header: ({ table }) => (\r\n      <Checkbox\r\n        checked={\r\n          table.getIsAllPageRowsSelected() ||\r\n          (table.getIsSomePageRowsSelected() && \"indeterminate\")\r\n        }\r\n        onCheckedChange={(value) => table.toggleAllPageRowsSelected(!!value)}\r\n        aria-label=\"Select all\"\r\n      />\r\n    ),\r\n    cell: ({ row }) => (\r\n      <Checkbox\r\n        checked={row.getIsSelected()}\r\n        onCheckedChange={(value) => row.toggleSelected(!!value)}\r\n        aria-label=\"Select row\"\r\n      />\r\n    ),\r\n    enableSorting: false,\r\n    enableHiding: false,\r\n  },\r\n  {\r\n    accessorKey: \"status\",\r\n    header: \"Status\",\r\n    cell: ({ row }) => (\r\n      <div className=\"capitalize\">{row.getValue(\"status\")}</div>\r\n    ),\r\n  },\r\n  {\r\n    accessorKey: \"email\",\r\n    header: ({ column }) => {\r\n      return (\r\n        <Button\r\n          variant=\"quiet\"\r\n          onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\r\n        >\r\n          Email\r\n          <ArrowUpDown className=\"ml-2 h-4 w-4\" />\r\n        </Button>\r\n      );\r\n    },\r\n    cell: ({ row }) => <div className=\"lowercase\">{row.getValue(\"email\")}</div>,\r\n  },\r\n  {\r\n    accessorKey: \"amount\",\r\n    header: () => <div className=\"text-right\">Amount</div>,\r\n    cell: ({ row }) => {\r\n      const amount = parseFloat(row.getValue(\"amount\"));\r\n\r\n      // Format the amount as a dollar amount\r\n      const formatted = new Intl.NumberFormat(\"en-US\", {\r\n        style: \"currency\",\r\n        currency: \"USD\",\r\n      }).format(amount);\r\n\r\n      return <div className=\"text-right font-medium\">{formatted}</div>;\r\n    },\r\n  },\r\n  {\r\n    id: \"actions\",\r\n    enableHiding: false,\r\n    cell: ({ row }) => {\r\n      const payment = row.original;\r\n\r\n      return (\r\n        <DropdownMenu>\r\n          <DropdownMenuTrigger asChild>\r\n            <Button variant=\"quiet\" className=\"h-8 w-8 p-0\">\r\n              <span className=\"sr-only\">Open menu</span>\r\n              <MoreHorizontal className=\"h-4 w-4\" />\r\n            </Button>\r\n          </DropdownMenuTrigger>\r\n          <DropdownMenuContent align=\"end\">\r\n            <DropdownMenuLabel>Actions</DropdownMenuLabel>\r\n            <DropdownMenuItem\r\n              onClick={() => navigator.clipboard.writeText(payment.id)}\r\n            >\r\n              Copy payment ID\r\n            </DropdownMenuItem>\r\n            <DropdownMenuSeparator />\r\n            <DropdownMenuItem>View customer</DropdownMenuItem>\r\n            <DropdownMenuItem>View payment details</DropdownMenuItem>\r\n          </DropdownMenuContent>\r\n        </DropdownMenu>\r\n      );\r\n    },\r\n  },\r\n];\r\n\r\nexport default function DataTableDemo() {\r\n  const [sorting, setSorting] = React.useState<SortingState>([]);\r\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>(\r\n    [],\r\n  );\r\n  const [columnVisibility, setColumnVisibility] =\r\n    React.useState<VisibilityState>({});\r\n  const [rowSelection, setRowSelection] = React.useState({});\r\n\r\n  const table = useReactTable({\r\n    data,\r\n    columns,\r\n    onSortingChange: setSorting,\r\n    onColumnFiltersChange: setColumnFilters,\r\n    getCoreRowModel: getCoreRowModel(),\r\n    getPaginationRowModel: getPaginationRowModel(),\r\n    getSortedRowModel: getSortedRowModel(),\r\n    getFilteredRowModel: getFilteredRowModel(),\r\n    onColumnVisibilityChange: setColumnVisibility,\r\n    onRowSelectionChange: setRowSelection,\r\n    state: {\r\n      sorting,\r\n      columnFilters,\r\n      columnVisibility,\r\n      rowSelection,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className=\"w-full\">\r\n      <div className=\"flex items-center py-4\">\r\n        <TextField\r\n          placeholder=\"Filter emails...\"\r\n          value={(table.getColumn(\"email\")?.getFilterValue() as string) ?? \"\"}\r\n          onChange={(event) =>\r\n            table.getColumn(\"email\")?.setFilterValue(event.target.value)\r\n          }\r\n          className=\"max-w-sm\"\r\n        />\r\n        <DropdownMenu>\r\n          <DropdownMenuTrigger asChild>\r\n            <Button variant=\"outline\" className=\"ml-auto\">\r\n              Columns <ChevronDown className=\"ml-2 h-4 w-4\" />\r\n            </Button>\r\n          </DropdownMenuTrigger>\r\n          <DropdownMenuContent align=\"end\">\r\n            {table\r\n              .getAllColumns()\r\n              .filter((column) => column.getCanHide())\r\n              .map((column) => {\r\n                return (\r\n                  <DropdownMenuCheckboxItem\r\n                    key={column.id}\r\n                    className=\"capitalize\"\r\n                    checked={column.getIsVisible()}\r\n                    onCheckedChange={(value) =>\r\n                      column.toggleVisibility(!!value)\r\n                    }\r\n                  >\r\n                    {column.id}\r\n                  </DropdownMenuCheckboxItem>\r\n                );\r\n              })}\r\n          </DropdownMenuContent>\r\n        </DropdownMenu>\r\n      </div>\r\n      <div className=\"rounded-md border\">\r\n        <Table>\r\n          <TableHeader>\r\n            {table.getHeaderGroups().map((headerGroup) => (\r\n              <TableRow key={headerGroup.id}>\r\n                {headerGroup.headers.map((header) => {\r\n                  return (\r\n                    <TableHead key={header.id}>\r\n                      {header.isPlaceholder\r\n                        ? null\r\n                        : flexRender(\r\n                            header.column.columnDef.header,\r\n                            header.getContext(),\r\n                          )}\r\n                    </TableHead>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            ))}\r\n          </TableHeader>\r\n          <TableBody>\r\n            {table.getRowModel().rows?.length ? (\r\n              table.getRowModel().rows.map((row) => (\r\n                <TableRow\r\n                  key={row.id}\r\n                  data-state={row.getIsSelected() && \"selected\"}\r\n                >\r\n                  {row.getVisibleCells().map((cell) => (\r\n                    <TableCell key={cell.id}>\r\n                      {flexRender(\r\n                        cell.column.columnDef.cell,\r\n                        cell.getContext(),\r\n                      )}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              ))\r\n            ) : (\r\n              <TableRow>\r\n                <TableCell\r\n                  colSpan={columns.length}\r\n                  className=\"h-24 text-center\"\r\n                >\r\n                  No results.\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n      <div className=\"flex items-center justify-end space-x-2 py-4\">\r\n        <div className=\"flex-1 text-sm text-muted-foreground\">\r\n          {table.getFilteredSelectedRowModel().rows.length} of{\" \"}\r\n          {table.getFilteredRowModel().rows.length} row(s) selected.\r\n        </div>\r\n        <div className=\"space-x-2\">\r\n          <Button\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            onClick={() => table.previousPage()}\r\n            disabled={!table.getCanPreviousPage()}\r\n          >\r\n            Previous\r\n          </Button>\r\n          <Button\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            onClick={() => table.nextPage()}\r\n            disabled={!table.getCanNextPage()}\r\n          >\r\n            Next\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/tabs/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/tabs/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\r\n\r\nimport { Button } from \"@/registry/ui/react/button\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardFooter,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/registry/ui/react/card\";\r\nimport { Label } from \"@/registry/ui/react/label\";\r\nimport {\r\n  Tabs,\r\n  TabsContent,\r\n  TabsList,\r\n  TabsTrigger,\r\n} from \"@/registry/ui/react/tabs\";\r\nimport { TextField } from \"@/registry/ui/react/text-field\";\r\n\r\nexport default function TabsDemo() {\r\n  return (\r\n    <Tabs defaultValue=\"account\" className=\"w-[400px]\">\r\n      <TabsList className=\"grid w-full grid-cols-2\">\r\n        <TabsTrigger value=\"account\">Account</TabsTrigger>\r\n        <TabsTrigger value=\"password\">Password</TabsTrigger>\r\n      </TabsList>\r\n      <TabsContent value=\"account\">\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Account</CardTitle>\r\n            <CardDescription>\r\n              Make changes to your account here. Click save when you're done.\r\n            </CardDescription>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-2\">\r\n            <div className=\"space-y-1\">\r\n              <Label htmlFor=\"name\">Name</Label>\r\n              <TextField id=\"name\" defaultValue=\"Pedro Duarte\" />\r\n            </div>\r\n            <div className=\"space-y-1\">\r\n              <Label htmlFor=\"username\">Username</Label>\r\n              <TextField id=\"username\" defaultValue=\"@peduarte\" />\r\n            </div>\r\n          </CardContent>\r\n          <CardFooter>\r\n            <Button>Save changes</Button>\r\n          </CardFooter>\r\n        </Card>\r\n      </TabsContent>\r\n      <TabsContent value=\"password\">\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Password</CardTitle>\r\n            <CardDescription>\r\n              Change your password here. After saving, you'll be logged out.\r\n            </CardDescription>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-2\">\r\n            <div className=\"space-y-1\">\r\n              <Label htmlFor=\"current\">Current password</Label>\r\n              <TextField id=\"current\" type=\"password\" />\r\n            </div>\r\n            <div className=\"space-y-1\">\r\n              <Label htmlFor=\"new\">New password</Label>\r\n              <TextField id=\"new\" type=\"password\" />\r\n            </div>\r\n          </CardContent>\r\n          <CardFooter>\r\n            <Button>Save password</Button>\r\n          </CardFooter>\r\n        </Card>\r\n      </TabsContent>\r\n    </Tabs>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/text-field/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/text-field/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\r\n\r\nimport { TextField } from \"@/registry/ui/react/text-field\";\r\n\r\nexport default function InputDemo() {\r\n  return <TextField type=\"email\" placeholder=\"Email\" />;\r\n}\r\n"}]
  },
  "demos/ui/react/textarea/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/textarea/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\r\n\r\nimport { Textarea } from \"@/registry/ui/react/textarea\";\r\n\r\nexport default function TextareaDemo() {\r\n  return <Textarea placeholder=\"Type your message here.\" />;\r\n}\r\n"}]
  },
  "demos/ui/react/timeline/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/timeline/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\n\r\nimport {\r\n  Timeline,\r\n  TimelineContent,\r\n  TimelineDot,\r\n  TimelineHeading,\r\n  TimelineItem,\r\n  TimelineLine,\r\n} from \"@/registry/ui/react/timeline\";\r\n\r\nexport default function TimelineDemo() {\r\n  return (\r\n    <Timeline>\r\n      <TimelineItem status=\"done\">\r\n        <TimelineHeading>Plan!</TimelineHeading>\r\n        <TimelineDot status=\"done\" />\r\n        <TimelineLine done />\r\n        <TimelineContent status=\"done\">\r\n          Before diving into coding, it is crucial to plan your software project\r\n          thoroughly. This involves defining the project scope, setting clear\r\n          objectives.\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n      <TimelineItem status=\"done\">\r\n        <TimelineHeading side=\"right\" className=\"text-danger\">\r\n          Design\r\n        </TimelineHeading>\r\n        <TimelineDot status=\"error\" />\r\n        <TimelineLine done />\r\n        <TimelineContent status=\"done\">\r\n          Designing your software involves creating a blueprint that outlines\r\n          the structure, user interface, and functionality of your application.\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n      <TimelineItem status=\"done\">\r\n        <TimelineHeading>Code</TimelineHeading>\r\n        <TimelineDot status=\"current\" />\r\n        <TimelineLine />\r\n        <TimelineContent status=\"done\">\r\n          The coding phase involves translating your design into actual code.\r\n          Choose a programming language and framework that aligns with your\r\n          project requirements.\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n      <TimelineItem>\r\n        <TimelineHeading>Test</TimelineHeading>\r\n        <TimelineDot />\r\n        <TimelineLine />\r\n        <TimelineContent>\r\n          Thorough testing is essential to ensure the quality and reliability of\r\n          your software. Implement different testing methodologies, including\r\n          unit testing, integration testing, and user acceptance testing.\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n      <TimelineItem>\r\n        <TimelineHeading>Deploy</TimelineHeading>\r\n        <TimelineDot />\r\n        <TimelineLine />\r\n        <TimelineContent>\r\n          Once your software has passed rigorous testing, it's time to deploy\r\n          it. Consider the deployment environment, whether it's on-premises or\r\n          in the cloud.\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n      <TimelineItem>\r\n        <TimelineHeading>Done!</TimelineHeading>\r\n        <TimelineDot />\r\n      </TimelineItem>\r\n    </Timeline>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/timeline/left": {
    component: React.lazy(() => import("@/registry/demos/ui/react/timeline/left")),
    code: [{"title":"left.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\n\r\nimport {\r\n  Timeline,\r\n  TimelineContent,\r\n  TimelineDot,\r\n  TimelineHeading,\r\n  TimelineItem,\r\n  TimelineLine,\r\n} from \"@/registry/ui/react/timeline\";\r\n\r\nexport default function TimelineDemo() {\r\n  return (\r\n    <Timeline>\r\n      <TimelineItem status=\"done\">\r\n        <TimelineHeading>Plan!</TimelineHeading>\r\n        <TimelineDot status=\"done\" />\r\n        <TimelineLine done />\r\n        <TimelineContent status=\"done\">\r\n          Before diving into coding, it is crucial to plan your software project\r\n          thoroughly. This involves defining the project scope, setting clear\r\n          objectives.\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n      <TimelineItem status=\"done\">\r\n        <TimelineHeading side=\"right\" className=\"text-danger\">\r\n          Design\r\n        </TimelineHeading>\r\n        <TimelineDot status=\"error\" />\r\n        <TimelineLine done />\r\n        <TimelineContent status=\"done\">\r\n          Designing your software involves creating a blueprint that outlines\r\n          the structure, user interface, and functionality of your application.\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n      <TimelineItem status=\"done\">\r\n        <TimelineHeading>Code</TimelineHeading>\r\n        <TimelineDot status=\"current\" />\r\n        <TimelineLine />\r\n        <TimelineContent status=\"done\">\r\n          The coding phase involves translating your design into actual code.\r\n          Choose a programming language and framework that aligns with your\r\n          project requirements.\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n      <TimelineItem>\r\n        <TimelineHeading>Test</TimelineHeading>\r\n        <TimelineDot />\r\n        <TimelineLine />\r\n        <TimelineContent>\r\n          Thorough testing is essential to ensure the quality and reliability of\r\n          your software. Implement different testing methodologies, including\r\n          unit testing, integration testing, and user acceptance testing.\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n      <TimelineItem>\r\n        <TimelineHeading>Deploy</TimelineHeading>\r\n        <TimelineDot />\r\n        <TimelineLine />\r\n        <TimelineContent>\r\n          Once your software has passed rigorous testing, it's time to deploy\r\n          it. Consider the deployment environment, whether it's on-premises or\r\n          in the cloud.\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n      <TimelineItem>\r\n        <TimelineHeading>Done!</TimelineHeading>\r\n        <TimelineDot />\r\n      </TimelineItem>\r\n    </Timeline>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/timeline/right": {
    component: React.lazy(() => import("@/registry/demos/ui/react/timeline/right")),
    code: [{"title":"right.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\n\r\nimport {\r\n  Timeline,\r\n  TimelineContent,\r\n  TimelineDot,\r\n  TimelineHeading,\r\n  TimelineItem,\r\n  TimelineLine,\r\n} from \"@/registry/ui/react/timeline\";\r\n\r\nexport default function TimelineDemo() {\r\n  return (\r\n    <Timeline positions=\"right\">\r\n      <TimelineItem status=\"done\">\r\n        <TimelineHeading side=\"left\">Plan!</TimelineHeading>\r\n        <TimelineDot status=\"done\" />\r\n        <TimelineLine done />\r\n        <TimelineContent status=\"done\" side=\"left\">\r\n          Before diving into coding, it is crucial to plan your software project\r\n          thoroughly. This involves defining the project scope, setting clear\r\n          objectives.\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n      <TimelineItem status=\"done\">\r\n        <TimelineHeading side=\"left\" className=\"text-danger\">\r\n          Design\r\n        </TimelineHeading>\r\n        <TimelineDot status=\"error\" />\r\n        <TimelineLine done />\r\n        <TimelineContent status=\"done\" side=\"left\">\r\n          Designing your software involves creating a blueprint that outlines\r\n          the structure, user interface, and functionality of your application.\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n      <TimelineItem status=\"done\">\r\n        <TimelineHeading side=\"left\">Code</TimelineHeading>\r\n        <TimelineDot status=\"current\" />\r\n        <TimelineLine />\r\n        <TimelineContent status=\"done\" side=\"left\">\r\n          The coding phase involves translating your design into actual code.\r\n          Choose a programming language and framework that aligns with your\r\n          project requirements.\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n      <TimelineItem>\r\n        <TimelineHeading side=\"left\">Test</TimelineHeading>\r\n        <TimelineDot />\r\n        <TimelineLine />\r\n        <TimelineContent side=\"left\">\r\n          Thorough testing is essential to ensure the quality and reliability of\r\n          your software. Implement different testing methodologies, including\r\n          unit testing, integration testing, and user acceptance testing.\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n      <TimelineItem>\r\n        <TimelineHeading side=\"left\">Deploy</TimelineHeading>\r\n        <TimelineDot />\r\n        <TimelineLine />\r\n        <TimelineContent side=\"left\">\r\n          Once your software has passed rigorous testing, it's time to deploy\r\n          it. Consider the deployment environment, whether it's on-premises or\r\n          in the cloud.\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n      <TimelineItem>\r\n        <TimelineDot />\r\n        <TimelineHeading side=\"left\">Done!</TimelineHeading>\r\n      </TimelineItem>\r\n    </Timeline>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/timeline/alternating": {
    component: React.lazy(() => import("@/registry/demos/ui/react/timeline/alternating")),
    code: [{"title":"alternating.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\n\r\nimport {\r\n  Timeline,\r\n  TimelineContent,\r\n  TimelineDot,\r\n  TimelineHeading,\r\n  TimelineItem,\r\n  TimelineLine,\r\n} from \"@/registry/ui/react/timeline\";\r\n\r\nexport default function TimelineDemo() {\r\n  return (\r\n    <Timeline positions=\"center\">\r\n      <TimelineItem status=\"done\">\r\n        <TimelineHeading side=\"left\">Plan!</TimelineHeading>\r\n        <TimelineDot status=\"done\" />\r\n        <TimelineLine done />\r\n        <TimelineContent status=\"done\" side=\"left\">\r\n          Before diving into coding, it is crucial to plan your software project\r\n          thoroughly. This involves defining the project scope, setting clear\r\n          objectives.\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n      <TimelineItem status=\"done\">\r\n        <TimelineHeading side=\"right\" className=\"text-danger\">\r\n          Design\r\n        </TimelineHeading>\r\n        <TimelineDot status=\"error\" />\r\n        <TimelineLine done />\r\n        <TimelineContent status=\"done\">\r\n          Designing your software involves creating a blueprint that outlines\r\n          the structure, user interface, and functionality of your application.\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n      <TimelineItem status=\"done\">\r\n        <TimelineHeading side=\"left\">Code</TimelineHeading>\r\n        <TimelineDot status=\"current\" />\r\n        <TimelineLine />\r\n        <TimelineContent status=\"done\" side=\"left\">\r\n          The coding phase involves translating your design into actual code.\r\n          Choose a programming language and framework that aligns with your\r\n          project requirements.\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n      <TimelineItem>\r\n        <TimelineHeading>Test</TimelineHeading>\r\n        <TimelineDot />\r\n        <TimelineLine />\r\n        <TimelineContent>\r\n          Thorough testing is essential to ensure the quality and reliability of\r\n          your software. Implement different testing methodologies, including\r\n          unit testing, integration testing, and user acceptance testing.\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n      <TimelineItem>\r\n        <TimelineHeading side=\"left\">Deploy</TimelineHeading>\r\n        <TimelineDot />\r\n        <TimelineLine />\r\n        <TimelineContent side=\"left\">\r\n          Once your software has passed rigorous testing, it's time to deploy\r\n          it. Consider the deployment environment, whether it's on-premises or\r\n          in the cloud.\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n      <TimelineItem>\r\n        <TimelineDot />\r\n        <TimelineHeading>Done!</TimelineHeading>\r\n      </TimelineItem>\r\n    </Timeline>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/timeline/lable": {
    component: React.lazy(() => import("@/registry/demos/ui/react/timeline/lable")),
    code: [{"title":"lable.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\n\r\nimport {\r\n  Timeline,\r\n  TimelineContent,\r\n  TimelineDot,\r\n  TimelineHeading,\r\n  TimelineItem,\r\n  TimelineLine,\r\n} from \"@/registry/ui/react/timeline\";\r\n\r\nexport default function TimelineDemo() {\r\n  return (\r\n    <Timeline positions=\"center\">\r\n      <TimelineItem status=\"done\">\r\n        <TimelineHeading side=\"left\">Plan!</TimelineHeading>\r\n        <TimelineHeading side=\"right\" variant=\"neutral\">\r\n          Done (05/04/2024)\r\n        </TimelineHeading>\r\n        <TimelineDot status=\"done\" />\r\n        <TimelineLine done />\r\n        <TimelineContent status=\"done\" side=\"left\">\r\n          Before diving into coding, it is crucial to plan your software project\r\n          thoroughly. This involves defining the project scope, setting clear\r\n          objectives.\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n      <TimelineItem status=\"done\">\r\n        <TimelineHeading side=\"right\" className=\"text-danger\">\r\n          Design\r\n        </TimelineHeading>\r\n        <TimelineHeading side=\"left\" variant=\"neutral\">\r\n          Failed (05/04/2024)\r\n        </TimelineHeading>\r\n        <TimelineDot status=\"error\" />\r\n        <TimelineLine done />\r\n        <TimelineContent status=\"done\">\r\n          Designing your software involves creating a blueprint that outlines\r\n          the structure, user interface, and functionality of your application.\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n      <TimelineItem status=\"done\">\r\n        <TimelineHeading side=\"left\">Code</TimelineHeading>\r\n        <TimelineHeading side=\"right\" variant=\"neutral\">\r\n          Current step\r\n        </TimelineHeading>\r\n        <TimelineDot status=\"current\" />\r\n        <TimelineLine />\r\n        <TimelineContent status=\"done\" side=\"left\">\r\n          The coding phase involves translating your design into actual code.\r\n          Choose a programming language and framework that aligns with your\r\n          project requirements.\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n      <TimelineItem>\r\n        <TimelineHeading>Test</TimelineHeading>\r\n        <TimelineHeading side=\"left\" variant=\"neutral\">\r\n          Next step\r\n        </TimelineHeading>\r\n        <TimelineDot />\r\n        <TimelineLine />\r\n        <TimelineContent>\r\n          Thorough testing is essential to ensure the quality and reliability of\r\n          your software. Implement different testing methodologies, including\r\n          unit testing, integration testing, and user acceptance testing.\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n      <TimelineItem>\r\n        <TimelineHeading side=\"left\">Deploy</TimelineHeading>\r\n        <TimelineHeading side=\"right\" variant=\"secondary\">\r\n          Deadline (05/10/2024)\r\n        </TimelineHeading>\r\n        <TimelineDot />\r\n        <TimelineLine />\r\n        <TimelineContent side=\"left\">\r\n          Once your software has passed rigorous testing, it's time to deploy\r\n          it. Consider the deployment environment, whether it's on-premises or\r\n          in the cloud.\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n      <TimelineItem>\r\n        <TimelineDot />\r\n        <TimelineHeading>Done!</TimelineHeading>\r\n        <TimelineHeading side=\"left\" variant=\"secondary\">\r\n          Here everything ends\r\n        </TimelineHeading>\r\n      </TimelineItem>\r\n    </Timeline>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/toast/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/toast/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\r\n\r\nimport { Button } from \"@/registry/ui/react/button\";\r\nimport { useToast } from \"@/registry/ui/react/use-toast\";\r\n\r\nexport default function ToastDemo() {\r\n  const { toast } = useToast();\r\n\r\n  return (\r\n    <Button\r\n      variant=\"outline\"\r\n      onClick={() => {\r\n        toast({\r\n          title: \"Scheduled: Catch up \",\r\n          description: \"Friday, February 10, 2023 at 5:57 PM\",\r\n        });\r\n      }}\r\n    >\r\n      Add to calendar\r\n    </Button>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/toast/variant": {
    component: React.lazy(() => import("@/registry/demos/ui/react/toast/variant")),
    code: [{"title":"variant.tsx","code":"\"use client\";\r\n\r\nimport { Button } from \"@/registry/ui/react/button\";\r\nimport { useToast } from \"@/registry/ui/react/use-toast\";\r\n\r\nconst variants = [\"default\", \"primary\", \"secondary\", \"danger\"] as const;\r\n\r\nexport default function ToastDemo() {\r\n  const { toast } = useToast();\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-2 gap-2\">\r\n      {variants.map((variant) => (\r\n        <Button\r\n          key={variant}\r\n          onClick={() => {\r\n            toast({\r\n              title: \"Scheduled: Catch up \",\r\n              description: \"Friday, February 10, 2023 at 5:57 PM\",\r\n            });\r\n          }}\r\n        >\r\n          {variant}\r\n        </Button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/toast/action": {
    component: React.lazy(() => import("@/registry/demos/ui/react/toast/action")),
    code: [{"title":"action.tsx","code":"\"use client\";\r\n\r\nimport { Button } from \"@/registry/ui/react/button\";\r\nimport { ToastAction } from \"@/registry/ui/react/toast\";\r\nimport { useToast } from \"@/registry/ui/react/use-toast\";\r\n\r\nexport default function ToastDemo() {\r\n  const { toast } = useToast();\r\n\r\n  return (\r\n    <Button\r\n      onClick={() => {\r\n        toast({\r\n          title: \"Scheduled: Catch up \",\r\n          description: \"Friday, February 10, 2023 at 5:57 PM\",\r\n          action: (\r\n            <ToastAction altText=\"Goto schedule to undo\">Undo</ToastAction>\r\n          ),\r\n        });\r\n      }}\r\n    >\r\n      Add to calendar\r\n    </Button>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/toc/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/toc/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\r\n\r\nimport {\r\n  TableOfContents,\r\n  TableOfContent,\r\n  TableOfContentsTitle,\r\n} from \"@/registry/ui/react/toc\";\r\n\r\nexport default function TocDemo() {\r\n  return (\r\n    <TableOfContents>\r\n      <TableOfContentsTitle>Table of Contents</TableOfContentsTitle>\r\n      <TableOfContent href=\"#first-section\">First Section</TableOfContent>\r\n      <TableOfContent href=\"#second-section\">Second Section</TableOfContent>\r\n      <TableOfContent href=\"#third-section\">Third Section</TableOfContent>\r\n    </TableOfContents>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/toc/nested": {
    component: React.lazy(() => import("@/registry/demos/ui/react/toc/nested")),
    code: [{"title":"nested.tsx","code":"\"use client\";\r\n\r\nimport {\r\n  TableOfContents,\r\n  TableOfContent,\r\n  TableOfContentsTitle,\r\n  TableOfContentsList,\r\n} from \"@/registry/ui/react/toc\";\r\n\r\nexport default function TocDemo() {\r\n  return (\r\n    <TableOfContents>\r\n      <TableOfContentsTitle>Table of Contents</TableOfContentsTitle>\r\n      <TableOfContent href=\"#first-section-nested\">\r\n        First Nested Section\r\n      </TableOfContent>\r\n      <TableOfContentsList indent>\r\n        <TableOfContent href=\"#first-nested-section-nested\">\r\n          First Nested Section\r\n        </TableOfContent>\r\n        <TableOfContent href=\"#second-nested-section-nested\" indent>\r\n          Second Nested Section\r\n        </TableOfContent>\r\n      </TableOfContentsList>\r\n      <TableOfContent href=\"#third-section-nested\">\r\n        Third Section\r\n      </TableOfContent>\r\n    </TableOfContents>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/toc/active": {
    component: React.lazy(() => import("@/registry/demos/ui/react/toc/active")),
    code: [{"title":"active.tsx","code":"\"use client\";\r\n\r\nimport {\r\n  TableOfContents,\r\n  TableOfContent,\r\n  TableOfContentsTitle,\r\n} from \"@/registry/ui/react/toc\";\r\n\r\nexport default function TocDemo() {\r\n  return (\r\n    <TableOfContents>\r\n      <TableOfContentsTitle>Active Item Table of Contents</TableOfContentsTitle>\r\n      <TableOfContent href=\"#first-section\">First Section</TableOfContent>\r\n      <TableOfContent isActive href=\"#second-section\" indent>\r\n        Second Section\r\n      </TableOfContent>\r\n      <TableOfContent href=\"#third-section\">Third Section</TableOfContent>\r\n    </TableOfContents>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/toggle/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/toggle/default")),
    code: [{"title":"default.tsx","code":"import { Toggle } from \"@/registry/ui/react/toggle\";\r\nimport { Pin } from \"@/lib/icons\";\r\n\r\nexport default function ToggleDemo() {\r\n  return (\r\n    <Toggle>\r\n      <Pin />\r\n    </Toggle>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/toggle/variants": {
    component: React.lazy(() => import("@/registry/demos/ui/react/toggle/variants")),
    code: [{"title":"variants.tsx","code":"import { Toggle } from \"@/registry/ui/react/toggle\";\r\nimport { Pin } from \"@/lib/icons\";\r\n\r\nconst variants = [\"outline\", \"quiet\", \"accent\"] as const;\r\n\r\nexport default function ToggleDemo() {\r\n  return (\r\n    <div className=\"flex space-x-4\">\r\n      {variants.map((variant) => (\r\n        <Toggle key={variant} variant={variant}>\r\n          <Pin />\r\n        </Toggle>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/toggle/sizes": {
    component: React.lazy(() => import("@/registry/demos/ui/react/toggle/sizes")),
    code: [{"title":"sizes.tsx","code":"import { Toggle } from \"@/registry/ui/react/toggle\";\r\nimport { Pin } from \"@/lib/icons\";\r\n\r\nexport default function ToggleDemo() {\r\n  return (\r\n    <div className=\"flex w-full items-center justify-center gap-4\">\r\n      <Toggle size=\"sm\">\r\n        <Pin />\r\n      </Toggle>\r\n      <Toggle size=\"md\">\r\n        <Pin />\r\n      </Toggle>\r\n      <Toggle size=\"lg\">\r\n        <Pin />\r\n      </Toggle>\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/toggle/shapes": {
    component: React.lazy(() => import("@/registry/demos/ui/react/toggle/shapes")),
    code: [{"title":"shapes.tsx","code":"import { Toggle } from \"@/registry/ui/react/toggle\";\r\nimport { Pin } from \"@/lib/icons\";\r\n\r\nexport default function ToggleDemo() {\r\n  return (\r\n    <div className=\"flex w-full items-center justify-center gap-4\">\r\n      <Toggle shape=\"square\">\r\n        <Pin />\r\n      </Toggle>\r\n      <Toggle shape=\"circle\">\r\n        <Pin />\r\n      </Toggle>\r\n      <Toggle shape=\"rectangle\">\r\n        <Pin />\r\n      </Toggle>\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/toggle/disabled": {
    component: React.lazy(() => import("@/registry/demos/ui/react/toggle/disabled")),
    code: [{"title":"disabled.tsx","code":"import { Toggle } from \"@/registry/ui/react/toggle\";\r\nimport { Pin } from \"@/lib/icons\";\r\n\r\nexport default function ToggleDemo() {\r\n  return (\r\n    <Toggle isDisabled>\r\n      <Pin />\r\n    </Toggle>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/toggle/uncontrolled": {
    component: React.lazy(() => import("@/registry/demos/ui/react/toggle/uncontrolled")),
    code: [{"title":"uncontrolled.tsx","code":"import { Toggle } from \"@/registry/ui/react/toggle\";\r\nimport { Pin } from \"@/lib/icons\";\r\n\r\nexport default function ToggleDemo() {\r\n  return (\r\n    <Toggle defaultSelected>\r\n      <Pin />\r\n    </Toggle>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/toggle/controlled": {
    component: React.lazy(() => import("@/registry/demos/ui/react/toggle/controlled")),
    code: [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport { Toggle } from \"@/registry/ui/react/toggle\";\r\nimport { Pin } from \"@/lib/icons\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function ToggleDemo() {\r\n  const [isSelected, setSelected] = useState(true);\r\n\r\n  return (\r\n    <Toggle isSelected={isSelected} onPressedChange={setSelected}>\r\n      <Pin className=\"rotate-45\" />\r\n    </Toggle>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/tooltip/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/tooltip/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\r\n\r\nimport { Button } from \"@/registry/ui/react/button\";\r\nimport { Tooltip } from \"@/registry/ui/react/tooltip\";\r\n\r\nexport default function TooltipDemo() {\r\n  const Content = () => <p>Add to library</p>;\r\n\r\n  return (\r\n    <Tooltip content={<Content />}>\r\n      <Button>Hover</Button>\r\n    </Tooltip>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/tooltip/variant": {
    component: React.lazy(() => import("@/registry/demos/ui/react/tooltip/variant")),
    code: [{"title":"variant.tsx","code":"\"use client\";\r\n\r\nimport { Button } from \"@/registry/ui/react/button\";\r\nimport { Tooltip } from \"@/registry/ui/react/tooltip\";\r\n\r\nconst variants = [\"default\", \"outline\", \"secondary\"] as const;\r\n\r\nexport default function TooltipDemo() {\r\n  return (\r\n    <div className=\"grid grid-cols-2 gap-2\">\r\n      {variants.map((variant) => (\r\n        <Tooltip\r\n          key={variant}\r\n          content={`This is a ${variant} tooltip`}\r\n          variant={variant}\r\n        >\r\n          <Button>{variant}</Button>\r\n        </Tooltip>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/tooltip/placement": {
    component: React.lazy(() => import("@/registry/demos/ui/react/tooltip/placement")),
    code: [{"title":"placement.tsx","code":"\"use client\";\r\n\r\nimport { Button } from \"@/registry/ui/react/button\";\r\nimport { Tooltip } from \"@/registry/ui/react/tooltip\";\r\n\r\nconst placements = [\"top\", \"right\", \"left\", \"bottom\"] as const;\r\n\r\nexport default function TooltipDemo() {\r\n  return (\r\n    <div className=\"grid grid-cols-2 gap-2\">\r\n      {placements.map((placement) => (\r\n        <Tooltip\r\n          key={placement}\r\n          content={`Tooltip on the ${placement}`}\r\n          placement={placement}\r\n        >\r\n          <Button>{placement}</Button>\r\n        </Tooltip>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/tooltip/offset": {
    component: React.lazy(() => import("@/registry/demos/ui/react/tooltip/offset")),
    code: [{"title":"offset.tsx","code":"\"use client\";\r\n\r\nimport { Button } from \"@/registry/ui/react/button\";\r\nimport { Tooltip } from \"@/registry/ui/react/tooltip\";\r\n\r\nexport default function TooltipDemo() {\r\n  return (\r\n    <Tooltip content=\"This tooltip is 20px away\" offset={20}>\r\n      <Button>Hover me</Button>\r\n    </Tooltip>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/tooltip/arrow": {
    component: React.lazy(() => import("@/registry/demos/ui/react/tooltip/arrow")),
    code: [{"title":"arrow.tsx","code":"\"use client\";\r\n\r\nimport { Button } from \"@/registry/ui/react/button\";\r\nimport { Tooltip } from \"@/registry/ui/react/tooltip\";\r\n\r\nexport default function TooltipDemo() {\r\n  return (\r\n    <Tooltip content=\"This tooltip has an arrow\" arrow>\r\n      <Button>Hover me</Button>\r\n    </Tooltip>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/tooltip/delay": {
    component: React.lazy(() => import("@/registry/demos/ui/react/tooltip/delay")),
    code: [{"title":"delay.tsx","code":"\"use client\";\r\n\r\nimport { Button } from \"@/registry/ui/react/button\";\r\nimport { Tooltip } from \"@/registry/ui/react/tooltip\";\r\n\r\nexport default function TooltipDemo() {\r\n  return (\r\n    <Tooltip content=\"This tooltip appears after a delay\" delay={300}>\r\n      <Button>Hover me</Button>\r\n    </Tooltip>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/tooltip/composition": {
    component: React.lazy(() => import("@/registry/demos/ui/react/tooltip/composition")),
    code: [{"title":"composition.tsx","code":"\"use client\";\r\n\r\nimport { Button } from \"@/registry/ui/react/button\";\r\nimport {\r\n  Tooltip,\r\n  TooltipArrow,\r\n  TooltipContent,\r\n  TooltipTrigger,\r\n} from \"@/registry/ui/react/tooltip\";\r\n\r\nexport default function TooltipDemo() {\r\n  return (\r\n    <Tooltip>\r\n      <TooltipTrigger asChild>\r\n        <Button>Hover</Button>\r\n      </TooltipTrigger>\r\n      <TooltipContent>\r\n        <p>Add to library</p>\r\n        <TooltipArrow />\r\n      </TooltipContent>\r\n    </Tooltip>\r\n  );\r\n}\r\n"}]
  },
  "demos/ui/react/tree/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/tree/default")),
    code: [{"title":"default.tsx","code":"import { File, Folder, Tree } from \"@/registry/ui/react/tree\";\r\n\r\nexport default function FileTreeDemo() {\r\n  return (\r\n    <div className=\"bg-background relative flex h-[300px] w-1/2 flex-col items-center justify-center overflow-hidden rounded-lg border md:shadow-xl\">\r\n      <Tree\r\n        className=\"bg-background overflow-hidden rounded-md p-2\"\r\n        initialSelectedId=\"7\"\r\n        initialExpandedItems={[\r\n          \"1\",\r\n          \"2\",\r\n          \"3\",\r\n          \"4\",\r\n          \"5\",\r\n          \"6\",\r\n          \"7\",\r\n          \"8\",\r\n          \"9\",\r\n          \"10\",\r\n          \"11\",\r\n        ]}\r\n        elements={ELEMENTS}\r\n      >\r\n        <Folder element=\"src\" value=\"1\">\r\n          <Folder value=\"2\" element=\"app\">\r\n            <File value=\"3\">\r\n              <p>layout.tsx</p>\r\n            </File>\r\n            <File value=\"4\">\r\n              <p>page.tsx</p>\r\n            </File>\r\n          </Folder>\r\n          <Folder value=\"5\" element=\"components\">\r\n            <Folder value=\"6\" element=\"ui\">\r\n              <File value=\"7\">\r\n                <p>button.tsx</p>\r\n              </File>\r\n            </Folder>\r\n            <File value=\"8\">\r\n              <p>header.tsx</p>\r\n            </File>\r\n            <File value=\"9\">\r\n              <p>footer.tsx</p>\r\n            </File>\r\n          </Folder>\r\n          <Folder value=\"10\" element=\"lib\">\r\n            <File value=\"11\">\r\n              <p>utils.ts</p>\r\n            </File>\r\n          </Folder>\r\n        </Folder>\r\n      </Tree>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst ELEMENTS = [\r\n  {\r\n    id: \"1\",\r\n    isSelectable: true,\r\n    name: \"src\",\r\n    children: [\r\n      {\r\n        id: \"2\",\r\n        isSelectable: true,\r\n        name: \"app\",\r\n        children: [\r\n          {\r\n            id: \"3\",\r\n            isSelectable: true,\r\n            name: \"layout.tsx\",\r\n          },\r\n          {\r\n            id: \"4\",\r\n            isSelectable: true,\r\n            name: \"page.tsx\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: \"5\",\r\n        isSelectable: true,\r\n        name: \"components\",\r\n        children: [\r\n          {\r\n            id: \"6\",\r\n            isSelectable: true,\r\n            name: \"header.tsx\",\r\n          },\r\n          {\r\n            id: \"7\",\r\n            isSelectable: true,\r\n            name: \"footer.tsx\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: \"8\",\r\n        isSelectable: true,\r\n        name: \"lib\",\r\n        children: [\r\n          {\r\n            id: \"9\",\r\n            isSelectable: true,\r\n            name: \"utils.ts\",\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\n"}]
  },
  "demos/ui/vue/button/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/button/default")),
    code: [{"title":"default.vue","code":"<script setup lang=\"ts\">\r\nimport Button from '@/lib/components/vue/button.vue';\r\n</script>\r\n\r\n<template>\r\n  <Button>Button</Button>\r\n</template>"}]
  },
  "demos/ui/vue/button/variants": {
    component: React.lazy(() => import("@/registry/demos/ui/react/button/variants")),
    code: [{"title":"variants.vue","code":"<script setup lang=\"ts\">\r\nimport Button from '@/lib/components/vue/button.vue';\r\n\r\nconst variants = [\r\n  \"default\",\r\n  \"primary\",\r\n  \"secondary\",\r\n  \"outline\",\r\n  \"quiet\",\r\n  \"success\",\r\n  \"warning\",\r\n  \"danger\",\r\n] as const;\r\n</script>\r\n\r\n\r\n<template>\r\n  <div class=\"grid grid-cols-4 gap-2\">\r\n    <Button v-for=\"variant in variants\" :key=\"variant\" :variant=\"variant\">\r\n      {{ variant }}\r\n    </Button>\r\n  </div>\r\n</template>\r\n"}]
  },
  "demos/ui/vue/button/sizes": {
    component: React.lazy(() => import("@/registry/demos/ui/react/button/sizes")),
    code: [{"title":"sizes.vue","code":"<script setup lang=\"ts\">\r\nimport Button from '@/lib/components/vue/button.vue';\r\n</script>\r\n\r\n<template>\r\n    <div className=\"flex w-full items-center justify-center gap-4\">\r\n      <Button size=\"sm\">Button</Button>\r\n      <Button size=\"md\">Button</Button>\r\n      <Button size=\"lg\">Button</Button>\r\n    </div>\r\n</template>"}]
  },
  "demos/ui/vue/button/shapes": {
    component: React.lazy(() => import("@/registry/demos/ui/react/button/shapes")),
    code: [{"title":"shapes.vue","code":"<script setup lang=\"ts\">\r\nimport Button from '@/lib/components/vue/button.vue';\r\nimport { UploadIcon } from \"@/lib/icons\";\r\n</script>\r\n\r\n<template>\r\n  <div className=\"flex items-center justify-center gap-4\">\r\n    <Button size=\"sm\" shape=\"square\" aria-label=\"upload\">\r\n      <UploadIcon />\r\n    </Button>\r\n    <Button size=\"md\" shape=\"square\" aria-label=\"upload\">\r\n      <UploadIcon />\r\n    </Button>\r\n    <Button size=\"lg\" shape=\"square\" aria-label=\"upload\">\r\n      <UploadIcon />\r\n    </Button>\r\n    <Button size=\"sm\" shape=\"circle\" aria-label=\"upload\">\r\n      <UploadIcon />\r\n    </Button>\r\n    <Button size=\"md\" shape=\"circle\" aria-label=\"upload\">\r\n      <UploadIcon />\r\n    </Button>\r\n    <Button size=\"lg\" shape=\"circle\" aria-label=\"upload\">\r\n      <UploadIcon />\r\n    </Button>\r\n  </div>\r\n</template>"}]
  },
  "demos/ui/vue/button/prefix-and-suffix": {
    component: React.lazy(() => import("@/registry/demos/ui/react/button/prefix-and-suffix")),
    code: [{"title":"prefix-and-suffix.vue","code":"<script setup lang=\"ts\">\r\nimport Button from '@/lib/components/button.vue';\r\nimport { UploadIcon } from \"@/lib/icons\";\r\n</script>\r\n\r\n<template>\r\n  <div className=\"flex items-center gap-2\">\r\n    <Button :prefix=\"UploadIcon\">\r\n      Button\r\n    </Button>\r\n    <Button :suffix=\"UploadIcon\">\r\n      Button\r\n    </Button>\r\n  </div>\r\n</template>\r\n"}]
  },
  "demos/ui/vue/button/loading": {
    component: React.lazy(() => import("@/registry/demos/ui/react/button/loading")),
    code: [{"title":"loading.vue","code":"<script setup lang=\"ts\">\r\nimport Button from '@/lib/components/vue/button.vue';\r\nimport { ref } from 'vue';\r\nconst someVariable = ref(5);\r\n</script>\r\n\r\n<template>\r\n  <div className=\"flex w-full items-center justify-center gap-2\">\r\n    <Button size=\"sm\" :isLoading=\"someVariable === 5\">\r\n      Button\r\n    </Button>\r\n    <Button size=\"md\" isLoading>\r\n      Button\r\n    </Button>\r\n    <Button size=\"lg\" isLoading>\r\n      Button\r\n    </Button>\r\n  </div>\r\n</template>\r\n"}]
  },
  "demos/ui/vue/button/disabled": {
    component: React.lazy(() => import("@/registry/demos/ui/react/button/disabled")),
    code: [{"title":"disabled.vue","code":"<script setup lang=\"ts\">\r\nimport Button from '@/lib/components/vue/button.vue';\r\nimport { ref } from 'vue';\r\nconst someVariable = ref(5);\r\n</script>\r\n\r\n<template>\r\n  <Button :isDisabled=\"someVariable === 5\">Button</Button>\r\n</template>\r\n"}]
  },
  "demos/ui/vue/button/link-button": {
    component: React.lazy(() => import("@/registry/demos/ui/react/button/link-button")),
    code: [{"title":"link-button.vue","code":"<script setup lang=\"ts\">\r\nimport Button from '@/lib/components/vue/button.vue';\r\nimport { LinkIcon } from '@/lib/icons';\r\n</script>\r\n\r\n<template>\r\n  <Button href=\"/login\" target=\"_blank\" :prefix=\"LinkIcon\">\r\n    Login\r\n  </Button>\r\n</template>"}]
  },
};
