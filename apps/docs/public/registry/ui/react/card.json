{
  "name": "card",
  "type": "registry:ui",
  "files": [
    {
      "path": "ui/react/card.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { tv, VariantProps } from \"tailwind-variants\";\n\nconst cardStyles = tv({\n  base: \"rounded-lg border shadow-sm p-2 md:px-4 md:py-2\",\n  variants: {\n    variant: {\n      default:\n        \"bg-neutral/70 hover:bg-neutral-hover active:bg-neutral-active text-neutral-fg\",\n      outline:\n        \"border border-border bg-transparent hover:bg-neutral/10 active:bg-neutral/20 text-fg disabled:border-disabled disabled:bg-transparent\",\n      success:\n        \"bg-success hover:bg-success-hover active:bg-success-active text-success-fg\",\n      warning:\n        \"bg-warning hover:bg-warning-hover active:bg-warning-active text-warning-fg\",\n      danger:\n        \"bg-danger hover:bg-danger-hover active:bg-danger-active text-danger-fg\",\n    },\n    shape: {\n      rectangle: \"\",\n      square: \"rounded-sm\",\n      circle: \"rounded-full\",\n    },\n  },\n  defaultVariants: {\n    variant: \"outline\",\n    size: \"md\",\n    shape: \"rectangle\",\n  },\n});\n\ntype CardVariants = VariantProps<typeof cardStyles>;\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CardVariants\n>(({ className, variant, shape, ...props }, ref) => {\n  const cardClassName = cn(cardStyles({ variant, shape }), className);\n  return <div ref={ref} className={cardClassName} {...props} />;\n});\n\nCard.displayName = \"Card\";\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CardVariants\n>(({ className, ...props }, ref) => {\n  const headerClassName = cn(\"flex flex-col space-y-1.5 p-4\", className);\n  return <div ref={ref} className={headerClassName} {...props} />;\n});\n\nCardHeader.displayName = \"CardHeader\";\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLDivElement> & CardVariants\n>(({ className, ...props }, ref) => {\n  const titleClassName = cn(\n    \"text-2xl font-semibold leading-none tracking-tight\",\n    className,\n  );\n  return <h3 ref={ref} className={titleClassName} {...props} />;\n});\n\nCardTitle.displayName = \"CardTitle\";\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement> & CardVariants\n>(({ className, ...props }, ref) => {\n  const descriptionClassName = cn(\"text-sm text-muted-foreground\", className);\n  return <p ref={ref} className={descriptionClassName} {...props} />;\n});\n\nCardDescription.displayName = \"CardDescription\";\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CardVariants\n>(({ className, ...props }, ref) => {\n  const contentClassName = cn(\"p-4 pt-0\", className);\n  return <div ref={ref} className={contentClassName} {...props} />;\n});\n\nCardContent.displayName = \"CardContent\";\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CardVariants\n>(({ className, ...props }, ref) => {\n  const footerClassName = cn(\"flex items-center p-4 pt-0\", className);\n  return <div ref={ref} className={footerClassName} {...props} />;\n});\n\nCardFooter.displayName = \"CardFooter\";\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n};\n",
      "type": "registry:ui",
      "target": "components/ui/card.tsx"
    }
  ]
}