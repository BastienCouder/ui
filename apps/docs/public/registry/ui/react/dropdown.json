{
  "name": "dropdown",
  "type": "registry:ui",
  "files": [
    {
      "path": "ui/react/dropdown.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport * as DropdownPrimitive from \"@radix-ui/react-dropdown-menu\";\r\nimport { Check, ChevronRight, Circle } from \"lucide-react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\ninterface DropdownProps {\r\n  children: React.ReactNode | string;\r\n  content?: React.ReactNode;\r\n  className?: string;\r\n  open?: any;\r\n  onOpenChange?: any;\r\n  side?: \"top\" | \"bottom\" | \"left\" | \"right\";\r\n}\r\n\r\nconst Dropdown: React.FC<DropdownProps> = ({\r\n  children,\r\n  content,\r\n  className,\r\n  side = \"bottom\",\r\n  ...props\r\n}) => {\r\n  const wrappedChildren =\r\n    typeof children === \"string\" || typeof children === \"number\" ? (\r\n      <>{children}</>\r\n    ) : (\r\n      children\r\n    );\r\n\r\n  return (\r\n    <DropdownPrimitive.Root {...props}>\r\n      {content ? (\r\n        <>\r\n          <DropdownTrigger asChild>{wrappedChildren}</DropdownTrigger>\r\n          <DropdownContent className={className} side={side}>\r\n            {content}\r\n          </DropdownContent>\r\n        </>\r\n      ) : (\r\n        wrappedChildren\r\n      )}\r\n    </DropdownPrimitive.Root>\r\n  );\r\n};\r\n\r\nconst DropdownTrigger = DropdownPrimitive.Trigger;\r\n\r\nconst DropdownGroup = DropdownPrimitive.Group;\r\n\r\nconst DropdownPortal = DropdownPrimitive.Portal;\r\n\r\nconst DropdownSub = DropdownPrimitive.Sub;\r\n\r\nconst DropdownRadioGroup = DropdownPrimitive.RadioGroup;\r\n\r\nconst DropdownSubTrigger = React.forwardRef<\r\n  React.ElementRef<typeof DropdownPrimitive.SubTrigger>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownPrimitive.SubTrigger> & {\r\n    inset?: boolean;\r\n  }\r\n>(({ className, inset, children, ...props }, ref) => (\r\n  <DropdownPrimitive.SubTrigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent  gap-2 [&_svg]:pointer-events-none [&_svg]:w-4 [&_svg]:h-4 [&_svg]:shrink-0\",\r\n      inset && \"pl-8\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\r\n  </DropdownPrimitive.SubTrigger>\r\n));\r\nDropdownSubTrigger.displayName = DropdownPrimitive.SubTrigger.displayName;\r\n\r\nconst DropdownSubContent = React.forwardRef<\r\n  React.ElementRef<typeof DropdownPrimitive.SubContent>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownPrimitive.SubContent>\r\n>(({ className, ...props }, ref) => (\r\n  <DropdownPrimitive.SubContent\r\n    ref={ref}\r\n    className={cn(\r\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nDropdownSubContent.displayName = DropdownPrimitive.SubContent.displayName;\r\n\r\nconst DropdownContent = React.forwardRef<\r\n  React.ElementRef<typeof DropdownPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownPrimitive.Content>\r\n>(({ className, sideOffset = 4, ...props }, ref) => (\r\n  <DropdownPrimitive.Portal>\r\n    <DropdownPrimitive.Content\r\n      ref={ref}\r\n      sideOffset={sideOffset}\r\n      className={cn(\r\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        className,\r\n      )}\r\n      {...props}\r\n    />\r\n  </DropdownPrimitive.Portal>\r\n));\r\nDropdownContent.displayName = DropdownPrimitive.Content.displayName;\r\n\r\nconst DropdownItem = React.forwardRef<\r\n  React.ElementRef<typeof DropdownPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownPrimitive.Item> & {\r\n    inset?: boolean;\r\n  }\r\n>(({ className, inset, ...props }, ref) => (\r\n  <DropdownPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      inset && \"pl-8\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nDropdownItem.displayName = DropdownPrimitive.Item.displayName;\r\n\r\nconst DropdownCheckboxItem = React.forwardRef<\r\n  React.ElementRef<typeof DropdownPrimitive.CheckboxItem>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownPrimitive.CheckboxItem>\r\n>(({ className, children, checked, ...props }, ref) => (\r\n  <DropdownPrimitive.CheckboxItem\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className,\r\n    )}\r\n    checked={checked}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <DropdownPrimitive.ItemIndicator>\r\n        <Check className=\"h-4 w-4\" />\r\n      </DropdownPrimitive.ItemIndicator>\r\n    </span>\r\n    {children}\r\n  </DropdownPrimitive.CheckboxItem>\r\n));\r\nDropdownCheckboxItem.displayName = DropdownPrimitive.CheckboxItem.displayName;\r\n\r\nconst DropdownRadioItem = React.forwardRef<\r\n  React.ElementRef<typeof DropdownPrimitive.RadioItem>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownPrimitive.RadioItem>\r\n>(({ className, children, ...props }, ref) => (\r\n  <DropdownPrimitive.RadioItem\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <DropdownPrimitive.ItemIndicator>\r\n        <Circle className=\"h-2 w-2 fill-current\" />\r\n      </DropdownPrimitive.ItemIndicator>\r\n    </span>\r\n    {children}\r\n  </DropdownPrimitive.RadioItem>\r\n));\r\nDropdownRadioItem.displayName = DropdownPrimitive.RadioItem.displayName;\r\n\r\nconst DropdownLabel = React.forwardRef<\r\n  React.ElementRef<typeof DropdownPrimitive.Label>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownPrimitive.Label> & {\r\n    inset?: boolean;\r\n  }\r\n>(({ className, inset, ...props }, ref) => (\r\n  <DropdownPrimitive.Label\r\n    ref={ref}\r\n    className={cn(\r\n      \"px-2 py-1.5 text-sm font-semibold\",\r\n      inset && \"pl-8\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nDropdownLabel.displayName = DropdownPrimitive.Label.displayName;\r\n\r\nconst DropdownSeparator = React.forwardRef<\r\n  React.ElementRef<typeof DropdownPrimitive.Separator>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownPrimitive.Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <DropdownPrimitive.Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\r\n    {...props}\r\n  />\r\n));\r\nDropdownSeparator.displayName = DropdownPrimitive.Separator.displayName;\r\n\r\nconst DropdownShortcut: React.FC<React.HTMLAttributes<HTMLSpanElement>> = ({\r\n  className,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <span\r\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\nDropdownShortcut.displayName = \"DropdownShortcut\";\r\n\r\nexport {\r\n  Dropdown,\r\n  DropdownTrigger,\r\n  DropdownContent,\r\n  DropdownItem,\r\n  DropdownCheckboxItem,\r\n  DropdownRadioItem,\r\n  DropdownLabel,\r\n  DropdownSeparator,\r\n  DropdownShortcut,\r\n  DropdownGroup,\r\n  DropdownPortal,\r\n  DropdownSub,\r\n  DropdownSubContent,\r\n  DropdownSubTrigger,\r\n  DropdownRadioGroup,\r\n};\r\n",
      "type": "registry:ui",
      "target": "components/ui/dropdown.tsx"
    }
  ]
}