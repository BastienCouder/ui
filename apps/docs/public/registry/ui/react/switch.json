{
  "name": "switch",
  "type": "registry:ui",
  "files": [
    {
      "path": "ui/react/switch.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\";\nimport { cn } from \"@/lib/utils\";\nimport { tv } from \"tailwind-variants\";\n\nconst switchStyles = tv({\n  base: \"focus-visible:ring-ring focus-visible:ring-offset-background peer inline-flex items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n  variants: {\n    variant: {\n      neutral: \"data-[state=checked]:bg-foreground data-[state=unchecked]:bg-input\",\n      primary:\n        \"data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      secondary:\n        \"data-[state=checked]:bg-secondary data-[state=unchecked]:bg-input\",\n    },\n    size: {\n      sm: \"h-4 w-8\",\n      md: \"h-5 w-10\",\n      lg: \"h-6 w-12\",\n    },\n    shape: {\n      rectangle: \"rounded-md\",\n      circle: \"rounded-full\",\n      square: \"rounded-none\",\n    },\n  },\n  defaultVariants: {\n    variant: \"primary\",\n    size: \"md\",\n    shape: \"circle\",\n  },\n});\n\nconst thumbStyles = tv({\n  base: \"bg-background pointer-events-none block rounded-full shadow-lg ring-0 transition-transform\",\n  variants: {\n    size: {\n      sm: \"h-3 w-3 data-[state=checked]:translate-x-4 data-[state=unchecked]:translate-x-0\",\n      md: \"h-4 w-4 data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\",\n      lg: \"h-5 w-5 data-[state=checked]:translate-x-6 data-[state=unchecked]:translate-x-0\",\n    },\n  },\n  defaultVariants: {\n    size: \"md\",\n  },\n});\n\ntype SwitchProps = React.ComponentPropsWithoutRef<\n  typeof SwitchPrimitives.Root\n> & {\n  variant?: \"neutral\" | \"primary\" | \"secondary\";\n  size?: \"sm\" | \"md\" | \"lg\";\n  shape?: \"rectangle\" | \"circle\" | \"square\";\n};\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  SwitchProps\n>(({ className, variant, size, shape, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(switchStyles({ variant, size, shape }), className)}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb className={cn(thumbStyles({ size }))} />\n  </SwitchPrimitives.Root>\n));\n\nSwitch.displayName = SwitchPrimitives.Root.displayName;\n\nexport { Switch };\n",
      "type": "registry:ui",
      "target": "components/ui/switch.tsx"
    }
  ]
}