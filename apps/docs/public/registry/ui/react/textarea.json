{
  "name": "textarea",
  "type": "registry:ui",
  "files": [
    {
      "path": "ui/react/textarea.tsx",
      "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport * as React from \"react\";\nimport { tv, type VariantProps } from \"tailwind-variants\";\nimport { Tooltip } from \"@/registry/ui/react/tooltip\";\nimport { HelpCircle } from \"@/lib/icons\";\n\nconst textareaStyles = tv({\n  base: \"w-full rounded-md text-sm ring-offset-background transition-colors focus-visible:outline-none disabled:cursor-not-allowed disabled:opacity-50\",\n  variants: {\n    variant: {\n      default:\n        \"bg-background hover:bg-input-background-hover focus:bg-input-background-active text-input-foreground border border-input-border\",\n      primary:\n        \"bg-primary hover:bg-primary-hover focus:bg-primary-active text-primary-foreground border border-primary-border\",\n      secondary:\n        \"bg-secondary hover:bg-secondary-hover focus:bg-secondary-active text-secondary-foreground border border-secondary-border\",\n      outline:\n        \"bg-transparent border border-input-border hover:bg-input-background-hover focus:bg-input-background-active text-input-foreground\",\n      quiet: \"bg-transparent text-input-foreground\",\n    },\n    size: {\n      sm: \"text-sm px-2 py-1\",\n      md: \"text-base px-4 py-2\",\n      lg: \"text-lg px-4 py-3\",\n    },\n    shape: {\n      rectangle: \"rounded-md\",\n      square: \"rounded-none\",\n      circle: \"rounded-full\",\n    },\n    invalid: {\n      true: \"border-destructive bg-background text-destructive-foreground focus-visible:ring-destructive\",\n    },\n  },\n  defaultVariants: {\n    variant: \"default\",\n    size: \"md\",\n    shape: \"rectangle\",\n  },\n});\n\ntype TextareaProps = React.TextareaHTMLAttributes<HTMLTextAreaElement> &\n  VariantProps<typeof textareaStyles> & {\n    label?: string;\n    description?: string;\n    isInvalid?: boolean;\n    errorMessage?: string;\n    contextualHelp?: React.ReactNode;\n    textareaSize?: \"sm\" | \"md\" | \"lg\";\n  };\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  (\n    {\n      label,\n      description,\n      className,\n      isInvalid,\n      errorMessage,\n      contextualHelp,\n      size,\n      shape,\n      ...props\n    },\n    ref,\n  ) => {\n    return (\n      <div className={cn(\"w-full\", className)}>\n        {label ||\n          (contextualHelp && (\n            <label className=\"text-sm font-medium flex items-center gap-1 mb-1\">\n              {label}\n              {contextualHelp && (\n                <Tooltip content={contextualHelp} offset={5}>\n                  <HelpCircle className=\"h-4 w-4\" />\n                </Tooltip>\n              )}\n            </label>\n          ))}\n        <textarea\n          className={cn(\n            textareaStyles({ invalid: isInvalid, size, shape }),\n            className,\n          )}\n          ref={ref}\n          {...props}\n        />\n        {isInvalid && errorMessage && (\n          <p className=\"text-xs text-destructive mt-1\">{errorMessage}</p>\n        )}\n        {!isInvalid && description && (\n          <p className=\"text-xs text-muted-foreground mt-1\">{description}</p>\n        )}\n      </div>\n    );\n  },\n);\n\nTextarea.displayName = \"Textarea\";\n\nexport { Textarea };\n",
      "type": "registry:ui",
      "target": "components/ui/textarea.tsx"
    }
  ]
}