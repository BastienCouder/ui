{
  "name": "dropdown",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-dropdown-menu"
  ],
  "files": [
    {
      "path": "ui/react/dropdown.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport * as DropdownPrimitive from \"@radix-ui/react-dropdown-menu\";\nimport { Check, ChevronRight, Circle } from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\n\ninterface DropdownProps {\n  children: React.ReactNode | string;\n  content?: React.ReactNode;\n  className?: string;\n  open?: any;\n  onOpenChange?: any;\n  side?: \"top\" | \"bottom\" | \"left\" | \"right\";\n}\n\nconst Dropdown: React.FC<DropdownProps> = ({\n  children,\n  content,\n  className,\n  side = \"bottom\",\n  ...props\n}) => {\n  const wrappedChildren =\n    typeof children === \"string\" || typeof children === \"number\" ? (\n      <>{children}</>\n    ) : (\n      children\n    );\n\n  return (\n    <DropdownPrimitive.Root {...props}>\n      {content ? (\n        <>\n          <DropdownTrigger asChild>{wrappedChildren}</DropdownTrigger>\n          <DropdownContent className={className} side={side}>\n            {content}\n          </DropdownContent>\n        </>\n      ) : (\n        wrappedChildren\n      )}\n    </DropdownPrimitive.Root>\n  );\n};\n\nconst DropdownTrigger = DropdownPrimitive.Trigger;\n\nconst DropdownGroup = DropdownPrimitive.Group;\n\nconst DropdownPortal = DropdownPrimitive.Portal;\n\nconst DropdownSub = DropdownPrimitive.Sub;\n\nconst DropdownRadioGroup = DropdownPrimitive.RadioGroup;\n\nconst DropdownSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownPrimitive.SubTrigger> & {\n    inset?: boolean;\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent  gap-2 [&_svg]:pointer-events-none [&_svg]:w-4 [&_svg]:h-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className,\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </DropdownPrimitive.SubTrigger>\n));\nDropdownSubTrigger.displayName = DropdownPrimitive.SubTrigger.displayName;\n\nconst DropdownSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className,\n    )}\n    {...props}\n  />\n));\nDropdownSubContent.displayName = DropdownPrimitive.SubContent.displayName;\n\nconst DropdownContent = React.forwardRef<\n  React.ElementRef<typeof DropdownPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownPrimitive.Portal>\n    <DropdownPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className,\n      )}\n      {...props}\n    />\n  </DropdownPrimitive.Portal>\n));\nDropdownContent.displayName = DropdownPrimitive.Content.displayName;\n\nconst DropdownItem = React.forwardRef<\n  React.ElementRef<typeof DropdownPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownPrimitive.Item> & {\n    inset?: boolean;\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className,\n    )}\n    {...props}\n  />\n));\nDropdownItem.displayName = DropdownPrimitive.Item.displayName;\n\nconst DropdownCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className,\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownPrimitive.CheckboxItem>\n));\nDropdownCheckboxItem.displayName = DropdownPrimitive.CheckboxItem.displayName;\n\nconst DropdownRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className,\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownPrimitive.RadioItem>\n));\nDropdownRadioItem.displayName = DropdownPrimitive.RadioItem.displayName;\n\nconst DropdownLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownPrimitive.Label> & {\n    inset?: boolean;\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className,\n    )}\n    {...props}\n  />\n));\nDropdownLabel.displayName = DropdownPrimitive.Label.displayName;\n\nconst DropdownSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n));\nDropdownSeparator.displayName = DropdownPrimitive.Separator.displayName;\n\nconst DropdownShortcut: React.FC<React.HTMLAttributes<HTMLSpanElement>> = ({\n  className,\n  ...props\n}) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  );\n};\nDropdownShortcut.displayName = \"DropdownShortcut\";\n\nexport {\n  Dropdown,\n  DropdownTrigger,\n  DropdownContent,\n  DropdownItem,\n  DropdownCheckboxItem,\n  DropdownRadioItem,\n  DropdownLabel,\n  DropdownSeparator,\n  DropdownShortcut,\n  DropdownGroup,\n  DropdownPortal,\n  DropdownSub,\n  DropdownSubContent,\n  DropdownSubTrigger,\n  DropdownRadioGroup,\n};\n",
      "type": "registry:ui",
      "target": "components/ui/dropdown.tsx"
    }
  ]
}