{
  "name": "checkbox",
  "type": "registry:ui",
  "files": [
    {
      "path": "ui/react/checkbox.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\";\r\nimport { Check } from \"lucide-react\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { tv } from \"tailwind-variants\";\r\n\r\nconst checkedStyles = tv({\r\n  base: \"ring-offset-background focus-visible:ring-ring peer shrink-0 rounded-sm border focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\",\r\n  variants: {\r\n    variant: {\r\n      neutral:\r\n        \"border-foreground data-[state=checked]:bg-foreground data-[state=checked]:text-background\",\r\n      primary:\r\n        \"border-primary data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\r\n      secondary:\r\n        \"border-secondary data-[state=checked]:bg-secondary data-[state=checked]:text-secondary-foreground\",\r\n    },\r\n    size: {\r\n      sm: \"h-4 w-4\",\r\n      md: \"h-4 w-4\",\r\n      lg: \"h-5 w-5\",\r\n    },\r\n    shape: {\r\n      rectangle: \"rounded-sm\",\r\n      square: \"rounded-none\",\r\n      circle: \"rounded-full\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    variant: \"primary\",\r\n    size: \"md\",\r\n    shape: \"rectangle\",\r\n  },\r\n});\r\n\r\ntype CheckboxProps = React.ComponentPropsWithoutRef<\r\n  typeof CheckboxPrimitive.Root\r\n> & {\r\n  children?: React.ReactNode;\r\n  labelPosition?: \"left\" | \"right\";\r\n  description?: string;\r\n  disabled?: boolean;\r\n  card?: boolean;\r\n  cardClassName?: string;\r\n  readOnly?: boolean;\r\n  defaultChecked?: boolean;\r\n  variant?: \"neutral\" | \"primary\" | \"secondary\";\r\n  size?: \"sm\" | \"md\" | \"lg\";\r\n  shape?: \"rectangle\" | \"square\" | \"circle\";\r\n};\r\n\r\nconst Checkbox = React.forwardRef<\r\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\r\n  CheckboxProps\r\n>(\r\n  (\r\n    {\r\n      className,\r\n      children,\r\n      variant,\r\n      size,\r\n      shape,\r\n      labelPosition = \"right\",\r\n      description,\r\n      disabled = false,\r\n      card = false,\r\n      cardClassName,\r\n      readOnly = false,\r\n      defaultChecked = false,\r\n      ...props\r\n    },\r\n    ref,\r\n  ) => {\r\n    const [checked, setChecked] = React.useState(defaultChecked);\r\n\r\n    const handleCardClick = () => {\r\n      if (!disabled && !readOnly) {\r\n        setChecked(!checked);\r\n        props.onCheckedChange?.(!checked);\r\n      }\r\n    };\r\n\r\n    const content = (\r\n      <div\r\n        className={cn(\r\n          \"flex items-start\",\r\n          labelPosition === \"left\" ? \"flex-row-reverse\" : \"flex-row\",\r\n          disabled && \"opacity-50 cursor-not-allowed\",\r\n        )}\r\n      >\r\n        <CheckboxPrimitive.Root\r\n          ref={ref}\r\n          className={cn(checkedStyles({ variant, size, shape }), className)}\r\n          disabled={disabled}\r\n          checked={checked}\r\n          onCheckedChange={(checked) =>\r\n            !readOnly &&\r\n            setChecked(checked === \"indeterminate\" ? false : checked)\r\n          }\r\n          {...props}\r\n        >\r\n          <CheckboxPrimitive.Indicator\r\n            className={cn(\"flex items-center justify-center text-current\")}\r\n          >\r\n            <Check className=\"w-4 h-4\" />\r\n          </CheckboxPrimitive.Indicator>\r\n        </CheckboxPrimitive.Root>\r\n        <div className={cn(\"ml-2\", labelPosition === \"left\" ? \"mr-2\" : \"ml-2\")}>\r\n          {children && <span>{children}</span>}\r\n          {description && (\r\n            <p className=\"text-sm text-muted-foreground\">{description}</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    if (card) {\r\n      return (\r\n        <div\r\n          onClick={handleCardClick}\r\n          className={cn(\r\n            \"inline-block p-4 border rounded-lg cursor-pointer transition-colors\",\r\n            \"data-[state=checked]:bg-neutral/20\",\r\n            cardClassName,\r\n          )}\r\n          style={{ width: \"auto\" }}\r\n          data-state={checked ? \"checked\" : \"unchecked\"}\r\n        >\r\n          {content}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return content;\r\n  },\r\n);\r\n\r\nCheckbox.displayName = CheckboxPrimitive.Root.displayName;\r\n\r\nexport { Checkbox };\r\n",
      "type": "registry:ui",
      "target": "components/ui/checkbox.tsx"
    }
  ]
}