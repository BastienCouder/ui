
// This file is autogenerated by scripts/build-preview-imports.ts
// Do not edit this file directly.
import React from "react";

export const previews = {
  "demos/components/core/angular/button/default": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/button/default")),
    code: [{"title":"default.ts","code":"import { Component } from '@angular/core';\nimport { HlmButtonModule } from '@/lib/components/core/default/angular/button/hlm-button.module';\n\n@Component({\n  selector: 'button-preview',\n  standalone: true,\n  imports: [HlmButtonModule],\n  template: `<Button hlmBtn>Button</Button>`,\n})\n\nexport class ButtonPreviewComponent {\n}"}]
  },
  "demos/components/core/react/button/default": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/button/default")),
    code: [{"title":"default.tsx","code":"import { Button } from \"@/lib/components/core/default/react/buttons/button\";\n\nexport default function Demo() {\n  return <Button>Button</Button>;\n}\n"}]
  },
  "demos/components/core/react/button/variants": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/button/variants")),
    code: [{"title":"variants.tsx","code":"import { Button } from \"@/lib/components/core/default/react/buttons/button\";\n\nconst variants = [\n  \"default\",\n  \"primary\",\n  \"secondary\",\n  \"outline\",\n  \"quiet\",\n  \"success\",\n  \"warning\",\n  \"danger\",\n] as const;\n\nexport default function Demo() {\n  return (\n    <div className=\"grid grid-cols-4 gap-2\">\n      {variants.map((variant) => (\n        <Button key={variant} variant={variant}>\n          {variant}\n        </Button>\n      ))}\n    </div>\n  );\n}\n"}]
  },
  "demos/components/core/react/button/sizes": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/button/sizes")),
    code: [{"title":"sizes.tsx","code":"import { Button } from \"@/lib/components/core/default/react/buttons/button\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex w-full items-center justify-center gap-4\">\n      <Button size=\"sm\">Button</Button>\n      <Button size=\"md\">Button</Button>\n      <Button size=\"lg\">Button</Button>\n    </div>\n  );\n}\n"}]
  },
  "demos/components/core/react/button/shapes": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/button/shapes")),
    code: [{"title":"shapes.tsx","code":"import { Button } from \"@/lib/components/core/default/react/buttons/button\";\nimport { UploadIcon } from \"@/lib/icons\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex items-center justify-center gap-4\">\n      <Button size=\"sm\" shape=\"square\" aria-label=\"upload\">\n        <UploadIcon />\n      </Button>\n      <Button size=\"md\" shape=\"square\" aria-label=\"upload\">\n        <UploadIcon />\n      </Button>\n      <Button size=\"lg\" shape=\"square\" aria-label=\"upload\">\n        <UploadIcon />\n      </Button>\n      <Button size=\"sm\" shape=\"circle\" aria-label=\"upload\">\n        <UploadIcon />\n      </Button>\n      <Button size=\"md\" shape=\"circle\" aria-label=\"upload\">\n        <UploadIcon />\n      </Button>\n      <Button size=\"lg\" shape=\"circle\" aria-label=\"upload\">\n        <UploadIcon />\n      </Button>\n    </div>\n  );\n}\n"}]
  },
  "demos/components/core/react/button/prefix-and-suffix": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/button/prefix-and-suffix")),
    code: [{"title":"prefix-and-suffix.tsx","code":"import { Button } from \"@/lib/components/core/default/react/buttons/button\";\nimport { UploadIcon } from \"@/lib/icons\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex items-center gap-2\">\n      <Button prefix={<UploadIcon />}>Upload</Button>\n      <Button suffix={<UploadIcon />}>Upload</Button>\n    </div>\n  );\n}\n"}]
  },
  "demos/components/core/react/button/loading": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/button/loading")),
    code: [{"title":"loading.tsx","code":"import { Button } from \"@/lib/components/core/default/react/buttons/button\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex w-full items-center justify-center gap-2\">\n      <Button size=\"sm\" isLoading>\n        Button\n      </Button>\n      <Button size=\"md\" isLoading>\n        Button\n      </Button>\n      <Button size=\"lg\" isLoading>\n        Button\n      </Button>\n    </div>\n  );\n}\n"}]
  },
  "demos/components/core/react/button/disabled": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/button/disabled")),
    code: [{"title":"disabled.tsx","code":"import { Button } from \"@/lib/components/core/default/react/buttons/button\";\n\nexport default function Demo() {\n  return <Button isDisabled>Button</Button>;\n}\n"}]
  },
  "demos/components/core/react/button/link-button": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/button/link-button")),
    code: [{"title":"link-button.tsx","code":"import { Button } from \"@/lib/components/core/default/react/buttons/button\";\nimport { LogInIcon } from \"@/lib/icons\";\n\nexport default function Demo() {\n  return (\n    <Button href=\"/login\" prefix={<LogInIcon />} target=\"_blank\">\n      Login\n    </Button>\n  );\n}\n"}]
  },
  "demos/components/core/react/data-display/avatar/default": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/data-display/avatar/default")),
    code: [{"title":"default.tsx","code":"import { Avatar } from \"@/lib/components/core/default/react/data-display/avatar\";\n\nexport default function Demo() {\n  return <Avatar src=\"/images/profile-default.png\" alt=\"@bastiencouder\" fallback=\"B\" />;\n}"}]
  },
  "demos/components/core/react/data-display/avatar/shape": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/data-display/avatar/shape")),
    code: [{"title":"shape.tsx","code":"import { Avatar } from \"@/lib/components/core/default/react/data-display/avatar\";\n\nexport default function Demo() {\n  return (\n    <div className=\"space-x-4\">\n      <Avatar src=\"/images/profile-default.png\" alt=\"@bastiencouder\" fallback=\"B\" shape=\"square\" />\n      <Avatar src=\"/images/profile-default.png\" alt=\"@bastiencouder\" fallback=\"B\" shape=\"circle\" />\n    </div>\n  );\n}"}]
  },
  "demos/components/core/react/data-display/avatar/sizes": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/data-display/avatar/sizes")),
    code: [{"title":"sizes.tsx","code":"import { Avatar } from \"@/lib/components/core/default/react/data-display/avatar\";\n\nexport default function Demo() {\n  return (\n    <div className=\"space-x-4\">\n      {([\"sm\", \"md\", \"lg\"] as const).map((size) => (\n        <Avatar\n          key={size}\n          size={size}\n          src=\"/images/profile-default.png\" \n          alt=\"@bastiencouder\"\n          fallback=\"B\"\n        />\n      ))}\n    </div>\n  );\n}"}]
  },
  "demos/components/core/react/data-display/avatar/composition": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/data-display/avatar/composition")),
    code: [{"title":"composition.tsx","code":"import React from \"react\";\nimport { UserIcon } from \"@/lib/icons\";\nimport { AvatarFallback, AvatarImage, AvatarPlaceholder, AvatarRoot } from \"@/lib/components/core/default/react/data-display/avatar\";\n\nexport default function Demo() {\n  return (\n    <AvatarRoot>\n      <AvatarImage src=\"/images/profile-default.png\" alt=\"@bastiencouder\" />\n      <AvatarFallback>B</AvatarFallback>\n      <AvatarPlaceholder>\n        <UserIcon className=\"size-5\" />\n      </AvatarPlaceholder>\n    </AvatarRoot>\n  );\n}"}]
  },
  "demos/components/core/react/data-display/badge/default": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/data-display/badge/default")),
    code: [{"title":"default.tsx","code":"import { Badge } from \"@/lib/components/core/default/react/data-display/badge\";\n\nexport default function Demo() {\n  return <Badge>Badge</Badge>;\n}"}]
  },
  "demos/components/core/react/data-display/badge/variants": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/data-display/badge/variants")),
    code: [{"title":"variants.tsx","code":"import { Badge } from \"@/lib/components/core/default/react/data-display/badge\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col items-start gap-2\">\n      <Flex>\n        <Badge variant=\"neutral\">Neutral</Badge>\n        <Badge variant=\"outline\">Outline</Badge>\n        <Badge variant=\"primary\">Primary</Badge>\n      </Flex>\n      <Flex>\n        <Badge variant=\"success\">Success</Badge>\n        <Badge variant=\"danger\">Danger</Badge>\n        <Badge variant=\"warning\">Warning</Badge>\n        <Badge variant=\"accent\">Accent</Badge>\n      </Flex>\n    </div>\n  );\n}\n\nconst Flex = (props: React.HTMLAttributes<HTMLDivElement>) => (\n  <div {...props} className=\"flex items-center gap-2\" />\n);"}]
  },
  "demos/components/core/react/data-display/badge/sizes": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/data-display/badge/sizes")),
    code: [{"title":"sizes.tsx","code":"import { Badge } from \"@/lib/components/core/default/react/data-display/badge\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex items-center gap-2\">\n      <Badge variant=\"primary\" size=\"sm\">\n        Small\n      </Badge>\n      <Badge variant=\"primary\" size=\"md\">\n        Medium\n      </Badge>\n      <Badge variant=\"primary\" size=\"lg\">\n        Large\n      </Badge>\n    </div>\n  );\n}"}]
  },
  "demos/components/core/react/data-display/badge/icon": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/data-display/badge/icon")),
    code: [{"title":"icon.tsx","code":"\nimport { Badge } from \"@/lib/components/core/default/react/data-display/badge\";\nimport { ShieldIcon } from \"@/lib/icons\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex items-center gap-2\">\n      <Badge icon={<ShieldIcon />} size=\"sm\">\n        Badge\n      </Badge>\n      <Badge icon={<ShieldIcon />} size=\"md\">\n        Badge\n      </Badge>\n      <Badge icon={<ShieldIcon />} size=\"lg\">\n        Badge\n      </Badge>\n    </div>\n  );\n}"}]
  },
  "demos/components/core/react/data-display/card/default": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/data-display/card/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\n\nimport { Button } from '@/lib/components/core/default/react/buttons/button'\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/lib/components/core/default/react/data-display/card'\nimport { cn } from '@/lib/utils'\nimport { BellRing, Check } from 'lucide-react'\nimport { Switch } from 'react-aria-components'\n\nconst notifications = [\n   {\n      title: 'Your call has been confirmed.',\n      description: '1 hour ago',\n   },\n   {\n      title: 'You have a new message!',\n      description: '1 hour ago',\n   },\n   {\n      title: 'Your subscription is expiring soon!',\n      description: '2 hours ago',\n   },\n]\n\ntype CardProps = React.ComponentProps<typeof Card>\n\nexport default function CardDemo({ className, ...props }: CardProps) {\n   return (\n      <Card className={cn('w-[380px]', className)} {...props}>\n         <CardHeader>\n            <CardTitle>Notifications</CardTitle>\n            <CardDescription>You have 3 unread messages.</CardDescription>\n         </CardHeader>\n         <CardContent className=\"grid gap-4\">\n            <div className=\" flex items-center space-x-4 rounded-md border p-4\">\n               <BellRing />\n               <div className=\"flex-1 space-y-1\">\n                  <p className=\"text-sm font-medium leading-none\">\n                     Push Notifications\n                  </p>\n                  <p className=\"text-muted-foreground text-sm\">\n                     Send notifications to device.\n                  </p>\n               </div>\n               <Switch />\n            </div>\n            <div>\n               {notifications.map((notification, index) => (\n                  <div\n                     key={index}\n                     className=\"mb-4 grid grid-cols-[25px_1fr] items-start pb-4 last:mb-0 last:pb-0\"\n                  >\n                     <span className=\"flex size-2 translate-y-1 rounded-full bg-sky-500\" />\n                     <div className=\"space-y-1\">\n                        <p className=\"text-sm font-medium leading-none\">\n                           {notification.title}\n                        </p>\n                        <p className=\"text-muted-foreground text-sm\">\n                           {notification.description}\n                        </p>\n                     </div>\n                  </div>\n               ))}\n            </div>\n         </CardContent>\n         <CardFooter>\n            <Button className=\"w-full\">\n               <Check className=\"mr-2 size-4\" />\n               {' '}\n               Mark all as read\n            </Button>\n         </CardFooter>\n      </Card>\n   )\n}\n\n"}]
  },
  "demos/components/core/react/data-display/card/variants": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/data-display/card/variants")),
    code: [{"title":"variants.tsx","code":"import { Card, CardContent, CardHeader, CardTitle } from \"@/lib/components/core/default/react/data-display/card\";\n\nconst variants = [\n    \"default\",\n    \"outline\",\n    \"success\",\n    \"warning\",\n    \"danger\",\n] as const;\n\nexport default function Demo() {\n    return (\n        <div className=\"grid grid-cols-2 gap-2\">\n            {variants.map((variant) => (\n                <Card key={variant} variant={variant}>\n                    <CardHeader>\n                        <CardTitle>{variant}</CardTitle>\n                    </CardHeader>\n                </Card >\n            ))}\n        </div>\n    );\n}\n"}]
  },
  "demos/components/core/react/data-display/card/sizes": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/data-display/card/sizes")),
    code: [{"title":"sizes.tsx","code":"import { Card, CardContent, CardHeader, CardTitle } from \"@/lib/components/core/default/react/data-display/card\";\n\nconst sizes = [\n    \"sm\",\n    \"md\",\n    \"lg\"\n] as const;\n\nexport default function Demo() {\n    return (\n        <div className=\"grid grid-cols-2 gap-2\">\n            {sizes.map((size) => (\n                <Card key={size} size={size}>\n                    <CardHeader>\n                        <CardTitle>{size}</CardTitle>\n                    </CardHeader>\n                </Card >\n            ))}\n        </div>\n    );\n}\n"}]
  },
  "demos/components/core/react/data-display/card/sections": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/data-display/card/sections")),
    code: [{"title":"sections.tsx","code":"import { Card, CardContent, CardHeader, CardTitle } from \"@/lib/components/core/default/react/data-display/card\";\n\nconst sizes = [\n    \"sm\",\n    \"md\",\n    \"lg\"\n] as const;\n\nexport default function Demo() {\n    return (\n        <div className=\"grid grid-cols-2 gap-2\">\n            {sizes.map((size) => (\n                <Card key={size} size={size}>\n                    <CardHeader>\n                        <CardTitle>{size}</CardTitle>\n                    </CardHeader>\n                </Card >\n            ))}\n        </div>\n    );\n}\n"}]
  },
  "demos/components/core/react/data-display/separator/card": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/data-display/separator/card")),
    code: [{"title":"card.tsx","code":"import { Separator } from \"@/lib/components/core/default/react/data-display/separator\";\n\nexport default function Demo() {\n  return (\n    <div className=\"space-y-2 rounded-md border p-4\">\n      <div>\n        <h3 className=\"font-bold\">UI</h3>\n        <p className=\"text-sm text-muted-fg\">Tools for building high-quality, accessible UI.</p>\n      </div>\n      <Separator className=\"my-4\" />\n      <div className=\"flex h-5 items-center space-x-4 text-sm\">\n        <div>Docs</div>\n        <Separator orientation=\"vertical\" />\n        <div>Components</div>\n        <Separator orientation=\"vertical\" />\n        <div>Hooks</div>\n        <Separator orientation=\"vertical\" />\n        <div>Themes</div>\n      </div>\n    </div>\n  );\n}"}]
  },
  "demos/components/core/react/data-display/separator/orientation": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/data-display/separator/orientation")),
    code: [{"title":"orientation.tsx","code":"import { Separator } from \"@/lib/components/core/default/react/data-display/separator\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex items-center gap-10\">\n      <div className=\"flex h-5 items-center gap-2 text-sm\">\n        <div>Components</div>\n        <Separator orientation=\"vertical\" />\n        <div>Hooks</div>\n      </div>\n      <div className=\"flex flex-col items-center gap-2 text-sm\">\n        <div>Components</div>\n        <Separator orientation=\"horizontal\" />\n        <div>Hooks</div>\n      </div>\n    </div>\n  );\n}"}]
  },
  "demos/components/core/react/feedback/skeleton/card": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/feedback/skeleton/card")),
    code: [{"title":"card.tsx","code":"import { Skeleton } from \"@/lib/components/core/default/react/feedback/skeleton\";\n\nexport default function Demo() {\n  return (\n    <div className=\"space-y-4\">\n      <Skeleton className=\"h-44 w-64\" />\n      <div className=\"flex items-center space-x-4\">\n        <Skeleton className=\"size-10 rounded-full\" />\n        <div className=\"space-y-2\">\n          <Skeleton className=\"h-4 w-44\" />\n          <Skeleton className=\"h-4 w-36\" />\n        </div>\n      </div>\n    </div>\n  );\n}"}]
  },
  "demos/components/core/react/feedback/skeleton/children": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/feedback/skeleton/children")),
    code: [{"title":"children.tsx","code":"import { Button } from \"@/lib/components/core/default/react/buttons/button\";\nimport { Skeleton } from \"@/lib/components/core/default/react/feedback/skeleton\";\n\nexport default function Demo() {\n  return (\n    <Skeleton>\n      <Button>Button</Button>\n    </Skeleton>\n  );\n}"}]
  },
  "demos/components/core/react/feedback/skeleton/show": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/feedback/skeleton/show")),
    code: [{"title":"show.tsx","code":"import { Button } from \"@/lib/components/core/default/react/buttons/button\";\nimport { Skeleton } from \"@/lib/components/core/default/react/feedback/skeleton\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex flex-col items-center gap-4\">\n      <Skeleton>\n        <Button>Button</Button>\n      </Skeleton>\n      <Skeleton show={false}>\n        <Button>Button</Button>\n      </Skeleton>\n    </div>\n  );\n}"}]
  },
  "demos/components/core/react/feedback/skeleton/api-simulation": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/feedback/skeleton/api-simulation")),
    code: [{"title":"api-simulation.tsx","code":"\"use client\";\n\nimport { Button } from \"@/lib/components/core/default/react/buttons/button\";\nimport { Skeleton } from \"@/lib/components/core/default/react/feedback/skeleton\";\nimport React from \"react\";\n\nexport default function Demo() {\n  const [status, setStatus] = React.useState<\"idle\" | \"loading\" | \"error\" | \"success\">(\"idle\");\n  const apiCall = () => {\n    setStatus(\"loading\");\n    setTimeout(() => {\n      setStatus(\"success\");\n    }, 4000);\n  };\n  return (\n    <div className=\"flex flex-col items-center gap-4\">\n      <Button isLoading={status === \"loading\"} onClick={apiCall}>\n        Simulate API Call\n      </Button>\n      <Skeleton show={status === \"loading\"}>\n        <p>Some text loaded from API.</p>\n      </Skeleton>\n    </div>\n  );\n}"}]
  },
  "demos/components/core/react/feedback/skeleton/fixed-size-children": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/feedback/skeleton/fixed-size-children")),
    code: [{"title":"fixed-size-children.tsx","code":"import { Button } from \"@/lib/components/core/default/react/buttons/button\";\nimport { Skeleton } from \"@/lib/components/core/default/react/feedback/skeleton\";\n\nexport default function Demo() {\n  return (\n    <Skeleton className=\"size-20\">\n      <Button>Button</Button>\n    </Skeleton>\n  );\n}"}]
  },
  "demos/components/core/react/layout/aspect-ratio/default": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/layout/aspect-ratio/default")),
    code: [{"title":"default.tsx","code":"import { AspectRatio } from \"@/lib/components/core/default/react/layout/aspect-ratio\";\nimport Image from \"next/image\";\n\nexport default function Demo() {\n  return (\n    <AspectRatio ratio={16 / 9}>\n      <Image\n        src=\"https://images.unsplash.com/photo-1588345921523-c2dcdb7f1dcd?w=800&dpr=2&q=80\"\n        alt=\"Photo by Drew Beamer\"\n        fill\n        className=\"rounded-md object-cover\"\n      />\n    </AspectRatio>\n  );\n}"}]
  },
  "demos/components/core/react/layout/aspect-ratio/as-child": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/layout/aspect-ratio/as-child")),
    code: [{"title":"as-child.tsx","code":"import { AspectRatio } from \"@/lib/components/core/default/react/layout/aspect-ratio\";\nimport Image from \"next/image\";\n\nexport default function AspectRatioDemo() {\n  return (\n    <AspectRatio ratio={16 / 9} asChild>\n      <Image\n        src=\"https://images.unsplash.com/photo-1588345921523-c2dcdb7f1dcd?w=800&dpr=2&q=80\"\n        alt=\"Photo by Drew Beamer\"\n        fill\n        className=\"rounded-md object-cover\"\n      />\n    </AspectRatio>\n  );\n}"}]
  },
  "demos/components/core/react/layout/scroll-area/default": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/layout/scroll-area/default")),
    code: [{"title":"default.tsx","code":"import { ScrollArea } from \"@/lib/components/core/default/react/layout/scroll-area\";\nimport * as React from \"react\";\n\nexport default function Demo() {\n  return (\n    <div className=\"rounded-md border p-6\">\n      <ScrollArea className=\"h-72 w-full max-w-sm\" type=\"always\">\n        <div className=\"space-y-4 p-4 pr-8\">\n          <h4 className=\"text-md font-bold\">Principles of the typographic craft</h4>\n          <p>\n            Three fundamental aspects of typography are legibility, readability, and aesthetics.\n            Although in a non-technical sense “legible” and “readable” are often used synonymously,\n            typographically they are separate but related concepts.\n          </p>\n          <p>\n            Legibility describes how easily individual characters can be distinguished from one\n            another. It is described by Walter Tracy as “the quality of being decipherable and\n            recognisable”. For instance, if a “b” and an “h”, or a “3” and an “8”, are difficult to\n            distinguish at small sizes, this is a problem of legibility.\n          </p>\n          <p>\n            Typographers are concerned with legibility insofar as it is their job to select the\n            correct font to use. Brush Script is an example of a font containing many characters\n            that might be difficult to distinguish. The selection of cases influences the legibility\n            of typography because using only uppercase letters (all-caps) reduces legibility.\n          </p>\n        </div>\n      </ScrollArea>\n    </div>\n  );\n}"}]
  },
  "demos/components/core/react/layout/scroll-area/sizes": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/layout/scroll-area/sizes")),
    code: [{"title":"sizes.tsx","code":"import { ScrollArea } from \"@/lib/components/core/default/react/layout/scroll-area\";\nimport * as React from \"react\";\n\nconst sizes = [\"sm\", \"md\", \"lg\"] as const;\n\nexport default function Demo() {\n  return (\n    <div className=\"grid grid-cols-3 gap-10\">\n      {sizes.map((size) => (\n        <div key={size} className=\"rounded-md border p-3\">\n          <ScrollArea size={size} className=\"h-72\" type=\"always\">\n            <div className=\"space-y-4 p-4 pr-8\">\n              <h4 className=\"text-md font-bold\">Principles of the typographic craft</h4>\n              <p>\n                Three fundamental aspects of typography are legibility, readability, and aesthetics.\n                Although in a non-technical sense “legible” and “readable” are often used\n                synonymously, typographically they are separate but related concepts.\n              </p>\n              <p>\n                Legibility describes how easily individual characters can be distinguished from one\n                another. It is described by Walter Tracy as “the quality of being decipherable and\n                recognisable”. For instance, if a “b” and an “h”, or a “3” and an “8”, are difficult\n                to distinguish at small sizes, this is a problem of legibility.\n              </p>\n              <p>\n                Typographers are concerned with legibility insofar as it is their job to select the\n                correct font to use. Brush Script is an example of a font containing many characters\n                that might be difficult to distinguish. The selection of cases influences the\n                legibility of typography because using only uppercase letters (all-caps) reduces\n                legibility.\n              </p>\n            </div>\n          </ScrollArea>\n        </div>\n      ))}\n    </div>\n  );\n}\n"}]
  },
  "demos/components/core/react/layout/scroll-area/variants": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/layout/scroll-area/variants")),
    code: [{"title":"variants.tsx","code":"import { ScrollArea } from \"@/lib/components/core/default/react/layout/scroll-area\";\nimport * as React from \"react\";\n\nconst variants = [\"default\", \"primary\", \"secondary\"] as const;\n\nexport default function Demo() {\n  return (\n    <div className=\"grid grid-cols-3 gap-10\">\n      {variants.map((variant) => (\n        <div key={variant} className=\"rounded-md border p-3\">\n          <ScrollArea variant={variant} className=\"h-72\" type=\"always\">\n            <div className=\"space-y-4 p-4 pr-8\">\n              <h4 className=\"text-md font-bold\">Principles of the typographic craft</h4>\n              <p>\n                Three fundamental aspects of typography are legibility, readability, and aesthetics.\n                Although in a non-technical sense “legible” and “readable” are often used\n                synonymously, typographically they are separate but related concepts.\n              </p>\n              <p>\n                Legibility describes how easily individual characters can be distinguished from one\n                another. It is described by Walter Tracy as “the quality of being decipherable and\n                recognisable”. For instance, if a “b” and an “h”, or a “3” and an “8”, are difficult\n                to distinguish at small sizes, this is a problem of legibility.\n              </p>\n              <p>\n                Typographers are concerned with legibility insofar as it is their job to select the\n                correct font to use. Brush Script is an example of a font containing many characters\n                that might be difficult to distinguish. The selection of cases influences the\n                legibility of typography because using only uppercase letters (all-caps) reduces\n                legibility.\n              </p>\n            </div>\n          </ScrollArea>\n        </div>\n      ))}\n    </div>\n  );\n}"}]
  },
  "demos/components/core/react/layout/scroll-area/scrollbars": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/layout/scroll-area/scrollbars")),
    code: [{"title":"scrollbars.tsx","code":"\"use client\";\n\nimport { ScrollArea, ScrollAreaProps } from \"@/lib/components/core/default/react/layout/scroll-area\";\nimport * as React from \"react\";\n// import { Radio, RadioGroup } from \"@/lib/components/core/default/radio-group\";\n\nexport default function Demo() {\n  const [scrollbars, setScrollbars] = React.useState(\"vertical\");\n  return (\n    <div className=\"flex items-center gap-10\">\n      <div className=\"rounded-md border p-6\">\n        <ScrollArea\n          scrollbars={scrollbars as ScrollAreaProps[\"scrollbars\"]}\n          className=\"h-44 w-full max-w-sm\"\n          type=\"always\"\n        >\n          <div className=\"flex w-[500px] items-start gap-4\">\n            <div className=\"space-y-4 p-4 pr-8\">\n              <h4 className=\"text-md font-bold\">Principles of the typographic craft</h4>\n              <p>\n                Three fundamental aspects of typography are legibility, readability, and aesthetics.\n                Although in a non-technical sense “legible” and “readable” are often used\n                synonymously, typographically they are separate but related concepts.\n              </p>\n              <p>\n                Legibility describes how easily individual characters can be distinguished from one\n                another. It is described by Walter Tracy as “the quality of being decipherable and\n                recognisable”. For instance, if a “b” and an “h”, or a “3” and an “8”, are difficult\n                to distinguish at small sizes, this is a problem of legibility.\n              </p>\n              <p>\n                Typographers are concerned with legibility insofar as it is their job to select the\n                correct font to use. Brush Script is an example of a font containing many characters\n                that might be difficult to distinguish. The selection of cases influences the\n                legibility of typography because using only uppercase letters (all-caps) reduces\n                legibility.\n              </p>\n            </div>\n            <div className=\"space-y-4 p-4 pr-8\">\n              <h4 className=\"text-md font-bold\">Principles of the typographic craft</h4>\n              <p>\n                Three fundamental aspects of typography are legibility, readability, and aesthetics.\n                Although in a non-technical sense “legible” and “readable” are often used\n                synonymously, typographically they are separate but related concepts.\n              </p>\n              <p>\n                Legibility describes how easily individual characters can be distinguished from one\n                another. It is described by Walter Tracy as “the quality of being decipherable and\n                recognisable”. For instance, if a “b” and an “h”, or a “3” and an “8”, are difficult\n                to distinguish at small sizes, this is a problem of legibility.\n              </p>\n              <p>\n                Typographers are concerned with legibility insofar as it is their job to select the\n                correct font to use. Brush Script is an example of a font containing many characters\n                that might be difficult to distinguish. The selection of cases influences the\n                legibility of typography because using only uppercase letters (all-caps) reduces\n                legibility.\n              </p>\n            </div>\n          </div>\n        </ScrollArea>\n      </div>\n      {/* <RadioGroup label=\"Scrollbars\" value={scrollbars} onChange={setScrollbars}>\n        <Radio value=\"vertical\">Vertical</Radio>\n        <Radio value=\"horizontal\">Horizontal</Radio>\n        <Radio value=\"both\">Both</Radio>\n      </RadioGroup> */}\n    </div>\n  );\n}"}]
  },
  "demos/components/core/vue/button/default": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/button/default")),
    code: [{"title":"default.vue","code":"<script setup lang=\"ts\">\nimport Button from '@/lib/components/core/default/vue/button.vue';\n</script>\n\n<template>\n  <Button>Button</Button>\n</template>"}]
  },
  "demos/components/core/vue/button/variants": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/button/variants")),
    code: [{"title":"variants.vue","code":"<script setup lang=\"ts\">\nimport Button from '@/lib/components/core/default/vue/button.vue';\n\nconst variants = [\n  \"default\",\n  \"primary\",\n  \"secondary\",\n  \"outline\",\n  \"quiet\",\n  \"success\",\n  \"warning\",\n  \"danger\",\n] as const;\n</script>\n\n\n<template>\n  <div class=\"grid grid-cols-4 gap-2\">\n    <Button v-for=\"variant in variants\" :key=\"variant\" :variant=\"variant\">\n      {{ variant }}\n    </Button>\n  </div>\n</template>\n"}]
  },
  "demos/components/core/vue/button/sizes": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/button/sizes")),
    code: [{"title":"sizes.vue","code":"<script setup lang=\"ts\">\nimport Button from '@/lib/components/core/default/vue/button.vue';\n</script>\n\n<template>\n    <div className=\"flex w-full items-center justify-center gap-4\">\n      <Button size=\"sm\">Button</Button>\n      <Button size=\"md\">Button</Button>\n      <Button size=\"lg\">Button</Button>\n    </div>\n</template>"}]
  },
  "demos/components/core/vue/button/shapes": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/button/shapes")),
    code: [{"title":"shapes.vue","code":"<script setup lang=\"ts\">\nimport Button from '@/lib/components/core/default/vue/button.vue';\nimport { UploadIcon } from \"@/lib/icons\";\n</script>\n\n<template>\n  <div className=\"flex items-center justify-center gap-4\">\n    <Button size=\"sm\" shape=\"square\" aria-label=\"upload\">\n      <UploadIcon />\n    </Button>\n    <Button size=\"md\" shape=\"square\" aria-label=\"upload\">\n      <UploadIcon />\n    </Button>\n    <Button size=\"lg\" shape=\"square\" aria-label=\"upload\">\n      <UploadIcon />\n    </Button>\n    <Button size=\"sm\" shape=\"circle\" aria-label=\"upload\">\n      <UploadIcon />\n    </Button>\n    <Button size=\"md\" shape=\"circle\" aria-label=\"upload\">\n      <UploadIcon />\n    </Button>\n    <Button size=\"lg\" shape=\"circle\" aria-label=\"upload\">\n      <UploadIcon />\n    </Button>\n  </div>\n</template>"}]
  },
  "demos/components/core/vue/button/prefix-and-suffix": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/button/prefix-and-suffix")),
    code: [{"title":"prefix-and-suffix.vue","code":"<script setup lang=\"ts\">\nimport Button from '@/lib/components/core/default/vue/button.vue';\nimport { UploadIcon } from \"@/lib/icons\";\n</script>\n\n<template>\n  <div className=\"flex items-center gap-2\">\n    <Button :prefix=\"UploadIcon\">\n      Button\n    </Button>\n    <Button :suffix=\"UploadIcon\">\n      Button\n    </Button>\n  </div>\n</template>\n"}]
  },
  "demos/components/core/vue/button/loading": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/button/loading")),
    code: [{"title":"loading.vue","code":"<script setup lang=\"ts\">\nimport Button from '@/lib/components/core/default/vue/button.vue';\nimport { ref } from 'vue';\nconst someVariable = ref(5);\n</script>\n\n<template>\n  <div className=\"flex w-full items-center justify-center gap-2\">\n    <Button size=\"sm\" :isLoading=\"someVariable === 5\">\n      Button\n    </Button>\n    <Button size=\"md\" isLoading>\n      Button\n    </Button>\n    <Button size=\"lg\" isLoading>\n      Button\n    </Button>\n  </div>\n</template>\n"}]
  },
  "demos/components/core/vue/button/disabled": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/button/disabled")),
    code: [{"title":"disabled.vue","code":"<script setup lang=\"ts\">\nimport Button from '@/lib/components/core/default/vue/button.vue';\nimport { ref } from 'vue';\nconst someVariable = ref(5);\n</script>\n\n<template>\n  <Button :isDisabled=\"someVariable === 5\">Button</Button>\n</template>\n"}]
  },
  "demos/components/core/vue/button/link-button": {
    component: React.lazy(() => import("@/lib/demos/components/core/react/button/link-button")),
    code: [{"title":"link-button.vue","code":"<script setup lang=\"ts\">\nimport Button from '@/lib/components/core/default/vue/button.vue';\nimport { LinkIcon } from '@/lib/icons';\n</script>\n\n<template>\n  <Button href=\"/login\" target=\"_blank\" :prefix=\"LinkIcon\">\n    Login\n  </Button>\n</template>"}]
  },
};
