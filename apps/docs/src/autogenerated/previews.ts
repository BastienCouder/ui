
// This file is autogenerated by scripts/build-preview-imports.ts
// Do not edit this file directly.
import React from "react";

export const previews = {
  "demos/ui/react/accordion/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/accordion/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\n\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/registry/ui/react/accordion\";\n\nexport default function AccordionDemo(): JSX.Element {\n  return (\n    <Accordion type=\"single\" collapsible className=\"w-full\" gap=\"0\">\n      <AccordionItem value=\"item-1\">\n        <AccordionTrigger>Is it accessible?</AccordionTrigger>\n        <AccordionContent>\n          Yes. It adheres to the WAI-ARIA design pattern.\n        </AccordionContent>\n      </AccordionItem>\n      <AccordionItem value=\"item-2\">\n        <AccordionTrigger>Is it styled?</AccordionTrigger>\n        <AccordionContent>\n          Yes. It comes with default styles that matches the other\n          components&apos; aesthetic.\n        </AccordionContent>\n      </AccordionItem>\n      <AccordionItem value=\"item-3\">\n        <AccordionTrigger>Is it animated?</AccordionTrigger>\n        <AccordionContent>\n          Yes. It&apos;s animated by default, but you can disable it if you\n          prefer.\n        </AccordionContent>\n      </AccordionItem>\n    </Accordion>\n  );\n}\n"}]
  },
  "demos/ui/react/alert-dialog/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/alert-dialog/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\n\nimport {\n  AlertDialog,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogDescription,\n} from \"@/registry/ui/react/alert-dialog\";\nimport { Button } from \"@/registry/ui/react/button\";\n\nexport default function AlertDialogDemo(): JSX.Element {\n  const Content = () => (\n    <>\n      <AlertDialogHeader>\n        <AlertDialogTitle>Are you absolutely sure?</AlertDialogTitle>\n        <AlertDialogDescription>\n          This action cannot be undone. This will permanently delete your\n          account and remove your data from our servers.\n        </AlertDialogDescription>\n      </AlertDialogHeader>\n    </>\n  );\n\n  return (\n    <AlertDialog content={<Content />} cancelText=\"Cancel\" okText=\"Continue\">\n      <Button>Show Dialog</Button>\n    </AlertDialog>\n  );\n}\n"}]
  },
  "demos/ui/react/alert-dialog/text": {
    component: React.lazy(() => import("@/registry/demos/ui/react/alert-dialog/text")),
    code: [{"title":"text.tsx","code":"\"use client\";\n\nimport {\n  AlertDialog,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogDescription,\n} from \"@/registry/ui/react/alert-dialog\";\nimport { Button } from \"@/registry/ui/react/button\";\n\nexport default function AlertDialogDemo(): JSX.Element {\n  const Content = () => (\n    <>\n      <AlertDialogHeader>\n        <AlertDialogTitle>Are you absolutely sure?</AlertDialogTitle>\n        <AlertDialogDescription>\n          This action cannot be undone. This will permanently delete your\n          account and remove your data from our servers.\n        </AlertDialogDescription>\n      </AlertDialogHeader>\n    </>\n  );\n\n  return (\n    <AlertDialog content={<Content />} cancelText=\"No\" okText=\"Yes\">\n      <Button>Show Dialog</Button>\n    </AlertDialog>\n  );\n}\n"}]
  },
  "demos/ui/react/alert-dialog/composition": {
    component: React.lazy(() => import("@/registry/demos/ui/react/alert-dialog/composition")),
    code: [{"title":"composition.tsx","code":"\"use client\";\n\nimport {\n  AlertDialog,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogCancel,\n  AlertDialogAction,\n} from \"@/registry/ui/react/alert-dialog\";\nimport { Button } from \"@/registry/ui/react/button\";\n\nexport default function AlertDialogDemo(): JSX.Element {\n  return (\n    <AlertDialog>\n      <AlertDialogTrigger asChild>\n        <Button>Show Dialog</Button>\n      </AlertDialogTrigger>\n      <AlertDialogContent>\n        <AlertDialogHeader>\n          <AlertDialogTitle>Are you absolutely sure?</AlertDialogTitle>\n          <AlertDialogDescription>\n            This action cannot be undone. This will permanently delete your\n            account and remove your data from our servers.\n          </AlertDialogDescription>\n        </AlertDialogHeader>\n        <AlertDialogFooter>\n          <AlertDialogCancel>Cancel</AlertDialogCancel>\n          <AlertDialogAction>Continue</AlertDialogAction>\n        </AlertDialogFooter>\n      </AlertDialogContent>\n    </AlertDialog>\n  );\n}\n"}]
  },
  "demos/ui/react/alert/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/alert/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\n\nimport { Terminal } from \"lucide-react\";\n\nimport { Alert, AlertDescription, AlertTitle } from \"@/registry/ui/react/alert\";\n\nexport default function AlertDemo(): JSX.Element {\n  return (\n    <Alert>\n      <Terminal className=\"h-4 w-4\" />\n      <AlertTitle>Heads up!</AlertTitle>\n      <AlertDescription>\n        You can add components to your app using the cli.\n      </AlertDescription>\n    </Alert>\n  );\n}\n"}]
  },
  "demos/ui/react/alert/danger": {
    component: React.lazy(() => import("@/registry/demos/ui/react/alert/danger")),
    code: [{"title":"danger.tsx","code":"\"use client\";\n\nimport { Alert, AlertDescription, AlertTitle } from \"@/registry/ui/react/alert\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function AlertDemo(): JSX.Element {\n  return (\n    <Alert variant=\"danger\">\n      <AlertCircle className=\"h-4 w-4\" />\n      <AlertTitle>Error</AlertTitle>\n      <AlertDescription>\n        Your session has expired. Please log in again.\n      </AlertDescription>\n    </Alert>\n  );\n}\n"}]
  },
  "demos/ui/react/aspect-ratio/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/aspect-ratio/default")),
    code: [{"title":"default.tsx","code":"import { AspectRatio } from \"@/registry/ui/react/aspect-ratio\";\nimport Image from \"next/image\";\n\nexport default function AspectRatioDemo(): JSX.Element {\n  return (\n    <AspectRatio ratio={16 / 9}>\n      <Image\n        src=\"https://images.unsplash.com/photo-1588345921523-c2dcdb7f1dcd?w=800&dpr=2&q=80\"\n        alt=\"Photo by Drew Beamer\"\n        fill\n        className=\"rounded-md object-cover\"\n      />\n    </AspectRatio>\n  );\n}\n"}]
  },
  "demos/ui/react/aspect-ratio/as-child": {
    component: React.lazy(() => import("@/registry/demos/ui/react/aspect-ratio/as-child")),
    code: [{"title":"as-child.tsx","code":"import { AspectRatio } from \"@/registry/ui/react/aspect-ratio\";\nimport Image from \"next/image\";\n\nexport default function AspectRatioDemo(): JSX.Element {\n  return (\n    <AspectRatio ratio={16 / 9} asChild>\n      <Image\n        src=\"https://images.unsplash.com/photo-1588345921523-c2dcdb7f1dcd?w=800&dpr=2&q=80\"\n        alt=\"Photo by Drew Beamer\"\n        fill\n        className=\"rounded-md object-cover\"\n      />\n    </AspectRatio>\n  );\n}\n"}]
  },
  "demos/ui/react/avatar/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/avatar/default")),
    code: [{"title":"default.tsx","code":"import { Avatar } from \"@/registry/ui/react/avatar\";\n\nexport default function AvatarDemo(): JSX.Element {\n  return (\n    <Avatar\n      className=\"bg-white/70\"\n      src=\"/images/profile-default.png\"\n      alt=\"@bastiencouder\"\n      fallback=\"B\"\n    />\n  );\n}\n"}]
  },
  "demos/ui/react/avatar/shape": {
    component: React.lazy(() => import("@/registry/demos/ui/react/avatar/shape")),
    code: [{"title":"shape.tsx","code":"import { Avatar } from \"@/registry/ui/react/avatar\";\n\nexport default function AvatarDemo(): JSX.Element {\n  return (\n    <div className=\"space-x-4\">\n      <Avatar\n        className=\"bg-white/70\"\n        src=\"/images/profile-default.png\"\n        alt=\"@bastiencouder\"\n        fallback=\"B\"\n        shape=\"square\"\n      />\n      <Avatar\n        className=\"bg-white/70\"\n        src=\"/images/profile-default.png\"\n        alt=\"@bastiencouder\"\n        fallback=\"B\"\n        shape=\"circle\"\n      />\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/avatar/sizes": {
    component: React.lazy(() => import("@/registry/demos/ui/react/avatar/sizes")),
    code: [{"title":"sizes.tsx","code":"import { Avatar } from \"@/registry/ui/react/avatar\";\n\nexport default function AvatarDemo(): JSX.Element {\n  return (\n    <div className=\"space-x-4\">\n      {([\"sm\", \"md\", \"lg\"] as const).map((size) => (\n        <Avatar\n          key={size}\n          size={size}\n          src=\"/images/profile-default.png\"\n          alt=\"@bastiencouder\"\n          fallback=\"B\"\n          className=\"bg-white/70\"\n        />\n      ))}\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/avatar/composition": {
    component: React.lazy(() => import("@/registry/demos/ui/react/avatar/composition")),
    code: [{"title":"composition.tsx","code":"import React from \"react\";\nimport { User2 } from \"@/lib/icons\";\nimport {\n  AvatarFallback,\n  AvatarImage,\n  AvatarPlaceholder,\n  AvatarRoot,\n} from \"@/registry/ui/react/avatar\";\n\nexport default function AvatarDemo(): JSX.Element {\n  return (\n    <AvatarRoot className=\"bg-white/70\">\n      <AvatarImage src=\"/images/profile-default.png\" alt=\"@bastiencouder\" />\n      <AvatarFallback>B</AvatarFallback>\n      <AvatarPlaceholder>\n        <User2 className=\"size-5\" />\n      </AvatarPlaceholder>\n    </AvatarRoot>\n  );\n}\n"}]
  },
  "demos/ui/react/badge/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/badge/default")),
    code: [{"title":"default.tsx","code":"import { Badge } from \"@/registry/ui/react/badge\";\n\nexport default function BadgeDemo(): JSX.Element {\n  return <Badge>Badge</Badge>;\n}\n"}]
  },
  "demos/ui/react/badge/variant": {
    component: React.lazy(() => import("@/registry/demos/ui/react/badge/variant")),
    code: [{"title":"variant.tsx","code":"import { Badge } from \"@/registry/ui/react/badge\";\n\nexport default function BadgeDemo(): JSX.Element {\n  return (\n    <div className=\"flex flex-col items-start gap-2\">\n      <Flex>\n        <Badge variant=\"neutral\">Neutral</Badge>\n        <Badge variant=\"outline\">Outline</Badge>\n        <Badge variant=\"primary\">Primary</Badge>\n      </Flex>\n      <Flex>\n        <Badge variant=\"success\">Success</Badge>\n        <Badge variant=\"danger\">Danger</Badge>\n        <Badge variant=\"warning\">Warning</Badge>\n        <Badge variant=\"accent\">Accent</Badge>\n      </Flex>\n    </div>\n  );\n}\n\nconst Flex = (props: React.HTMLAttributes<HTMLDivElement>) => (\n  <div {...props} className=\"flex items-center gap-2\" />\n);\n"}]
  },
  "demos/ui/react/badge/size": {
    component: React.lazy(() => import("@/registry/demos/ui/react/badge/size")),
    code: [{"title":"size.tsx","code":"import { Badge } from \"@/registry/ui/react/badge\";\n\nexport default function BadgeDemo(): JSX.Element {\n  return (\n    <div className=\"flex items-center gap-2\">\n      <Badge variant=\"primary\" size=\"sm\">\n        Small\n      </Badge>\n      <Badge variant=\"primary\" size=\"md\">\n        Medium\n      </Badge>\n      <Badge variant=\"primary\" size=\"lg\">\n        Large\n      </Badge>\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/badge/icon": {
    component: React.lazy(() => import("@/registry/demos/ui/react/badge/icon")),
    code: [{"title":"icon.tsx","code":"import { Badge } from \"@/registry/ui/react/badge\";\nimport { Shield } from \"@/lib/icons\";\n\nexport default function BadgeDemo(): JSX.Element {\n  return (\n    <div className=\"flex items-center gap-2\">\n      <Badge icon={<Shield />} size=\"sm\">\n        Badge\n      </Badge>\n      <Badge icon={<Shield />} size=\"md\">\n        Badge\n      </Badge>\n      <Badge icon={<Shield />} size=\"lg\">\n        Badge\n      </Badge>\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/breadcrumb/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/breadcrumb/default")),
    code: [{"title":"default.tsx","code":"import { Breadcrumb, Breadcrumbs } from \"@/registry/ui/react/breadcrumb\";\n\nexport default function BreadcrumbDemo(): JSX.Element {\n  return (\n    <Breadcrumbs>\n      <Breadcrumb href=\"#\">Home</Breadcrumb>\n      <Breadcrumb href=\"#\">Components</Breadcrumb>\n      <Breadcrumb href=\"#\">Breadcrumbs</Breadcrumb>\n    </Breadcrumbs>\n  );\n}\n"}]
  },
  "demos/ui/react/breadcrumb/sizes": {
    component: React.lazy(() => import("@/registry/demos/ui/react/breadcrumb/sizes")),
    code: [{"title":"sizes.tsx","code":"import { Breadcrumb, Breadcrumbs } from \"@/registry/ui/react/breadcrumb\";\n\nexport default function BreadcrumbDemo(): JSX.Element {\n  return (\n    <div className=\"flex flex-col gap-4\">\n      <Breadcrumbs size=\"sm\">\n        <Breadcrumb href=\"#\">Home</Breadcrumb>\n        <Breadcrumb href=\"#\">Components</Breadcrumb>\n        <Breadcrumb>Breadcrumbs</Breadcrumb>\n      </Breadcrumbs>\n      <Breadcrumbs size=\"md\">\n        <Breadcrumb href=\"#\">Home</Breadcrumb>\n        <Breadcrumb href=\"#\">Components</Breadcrumb>\n        <Breadcrumb>Breadcrumbs</Breadcrumb>\n      </Breadcrumbs>\n      <Breadcrumbs size=\"lg\">\n        <Breadcrumb href=\"#\">Home</Breadcrumb>\n        <Breadcrumb href=\"#\">Components</Breadcrumb>\n        <Breadcrumb>Breadcrumbs</Breadcrumb>\n      </Breadcrumbs>\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/breadcrumb/orientation": {
    component: React.lazy(() => import("@/registry/demos/ui/react/breadcrumb/orientation")),
    code: [{"title":"orientation.tsx","code":"import { Breadcrumb, Breadcrumbs } from \"@/registry/ui/react/breadcrumb\";\n\nexport default function BreadcrumbDemo(): JSX.Element {\n  return (\n    <div className=\"flex flex-col gap-4\">\n      <Breadcrumbs orientation=\"vertical\">\n        <Breadcrumb href=\"#\">Home</Breadcrumb>\n        <Breadcrumb href=\"#\">Components</Breadcrumb>\n        <Breadcrumb>Breadcrumbs</Breadcrumb>\n      </Breadcrumbs>\n      <Breadcrumbs orientation=\"horizontal\">\n        <Breadcrumb href=\"#\">Home</Breadcrumb>\n        <Breadcrumb href=\"#\">Components</Breadcrumb>\n        <Breadcrumb>Breadcrumbs</Breadcrumb>\n      </Breadcrumbs>\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/breadcrumb/separator": {
    component: React.lazy(() => import("@/registry/demos/ui/react/breadcrumb/separator")),
    code: [{"title":"separator.tsx","code":"import { Breadcrumb, Breadcrumbs } from \"@/registry/ui/react/breadcrumb\";\nimport { X } from \"@/lib/icons\";\n\nexport default function BreadcrumbDemo(): JSX.Element {\n  return (\n    <Breadcrumbs separatorIcon={<X />}>\n      <Breadcrumb href=\"#\">Home</Breadcrumb>\n      <Breadcrumb href=\"#\">Components</Breadcrumb>\n      <Breadcrumb href=\"#\">Breadcrumbs</Breadcrumb>\n    </Breadcrumbs>\n  );\n}\n"}]
  },
  "demos/ui/react/breadcrumb/disabled": {
    component: React.lazy(() => import("@/registry/demos/ui/react/breadcrumb/disabled")),
    code: [{"title":"disabled.tsx","code":"import { Breadcrumb, Breadcrumbs } from \"@/registry/ui/react/breadcrumb\";\n\nexport default function BreadcrumbDemo(): JSX.Element {\n  return (\n    <Breadcrumbs>\n      <Breadcrumb href=\"#\">Home</Breadcrumb>\n      <Breadcrumb href=\"#\">Components</Breadcrumb>\n      <Breadcrumb disabled>Breadcrumbs</Breadcrumb>\n    </Breadcrumbs>\n  );\n}\n"}]
  },
  "demos/ui/react/breadcrumb/composition": {
    component: React.lazy(() => import("@/registry/demos/ui/react/breadcrumb/composition")),
    code: [{"title":"composition.tsx","code":"import {\n  BreadcrumbItem,\n  BreadcrumbLink,\n  Breadcrumbs,\n} from \"@/registry/ui/react/breadcrumb\";\n\nexport default function BreadcrumbDemo(): JSX.Element {\n  return (\n    <Breadcrumbs>\n      <BreadcrumbItem>\n        <BreadcrumbLink href=\"#\">Home</BreadcrumbLink>\n      </BreadcrumbItem>\n      <BreadcrumbItem>\n        <BreadcrumbLink href=\"#\">Components</BreadcrumbLink>\n      </BreadcrumbItem>\n      <BreadcrumbItem>\n        <BreadcrumbLink>Breadcrumbs</BreadcrumbLink>\n      </BreadcrumbItem>\n    </Breadcrumbs>\n  );\n}\n"}]
  },
  "demos/ui/react/button/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/button/default")),
    code: [{"title":"default.tsx","code":"import { Button } from \"@/registry/ui/react/button\";\n\nexport default function ButtonDemo(): JSX.Element {\n  return <Button>Button</Button>;\n}\n"}]
  },
  "demos/ui/react/button/variants": {
    component: React.lazy(() => import("@/registry/demos/ui/react/button/variants")),
    code: [{"title":"variants.tsx","code":"import { Button } from \"@/registry/ui/react/button\";\n\nconst variants = [\n  \"default\",\n  \"primary\",\n  \"secondary\",\n  \"outline\",\n  \"quiet\",\n  \"success\",\n  \"warning\",\n  \"danger\",\n] as const;\n\nexport default function ButtonDemo(): JSX.Element {\n  return (\n    <div className=\"grid grid-cols-4 gap-2\">\n      {variants.map((variant) => (\n        <Button key={variant} variant={variant}>\n          {variant}\n        </Button>\n      ))}\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/button/sizes": {
    component: React.lazy(() => import("@/registry/demos/ui/react/button/sizes")),
    code: [{"title":"sizes.tsx","code":"import { Button } from \"@/registry/ui/react/button\";\n\nexport default function ButtonDemo(): JSX.Element {\n  return (\n    <div className=\"flex w-full items-center justify-center gap-4\">\n      <Button size=\"sm\">Button</Button>\n      <Button size=\"md\">Button</Button>\n      <Button size=\"lg\">Button</Button>\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/button/shapes": {
    component: React.lazy(() => import("@/registry/demos/ui/react/button/shapes")),
    code: [{"title":"shapes.tsx","code":"import { Button } from \"@/registry/ui/react/button\";\nimport { Upload } from \"@/lib/icons\";\n\nexport default function ButtonDemo(): JSX.Element {\n  return (\n    <div className=\"flex items-center justify-center gap-4\">\n      <Button size=\"sm\" shape=\"square\" aria-label=\"upload\">\n        <Upload />\n      </Button>\n      <Button size=\"md\" shape=\"square\" aria-label=\"upload\">\n        <Upload />\n      </Button>\n      <Button size=\"lg\" shape=\"square\" aria-label=\"upload\">\n        <Upload />\n      </Button>\n      <Button size=\"sm\" shape=\"circle\" aria-label=\"upload\">\n        <Upload />\n      </Button>\n      <Button size=\"md\" shape=\"circle\" aria-label=\"upload\">\n        <Upload />\n      </Button>\n      <Button size=\"lg\" shape=\"circle\" aria-label=\"upload\">\n        <Upload />\n      </Button>\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/button/prefix-and-suffix": {
    component: React.lazy(() => import("@/registry/demos/ui/react/button/prefix-and-suffix")),
    code: [{"title":"prefix-and-suffix.tsx","code":"import { Button } from \"@/registry/ui/react/button\";\nimport { Upload } from \"@/lib/icons\";\n\nexport default function ButtonDemo(): JSX.Element {\n  return (\n    <div className=\"flex items-center gap-2\">\n      <Button prefix={<Upload />}>Upload</Button>\n      <Button suffix={<Upload />}>Upload</Button>\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/button/loading": {
    component: React.lazy(() => import("@/registry/demos/ui/react/button/loading")),
    code: [{"title":"loading.tsx","code":"import { Button } from \"@/registry/ui/react/button\";\n\nexport default function ButtonDemo(): JSX.Element {\n  return (\n    <div className=\"flex w-full items-center justify-center gap-2\">\n      <Button size=\"sm\" isLoading>\n        Button\n      </Button>\n      <Button size=\"md\" isLoading>\n        Button\n      </Button>\n      <Button size=\"lg\" isLoading>\n        Button\n      </Button>\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/button/disabled": {
    component: React.lazy(() => import("@/registry/demos/ui/react/button/disabled")),
    code: [{"title":"disabled.tsx","code":"import { Button } from \"@/registry/ui/react/button\";\n\nexport default function ButtonDemo(): JSX.Element {\n  return <Button isDisabled>Button</Button>;\n}\n"}]
  },
  "demos/ui/react/button/link-button": {
    component: React.lazy(() => import("@/registry/demos/ui/react/button/link-button")),
    code: [{"title":"link-button.tsx","code":"import { Button } from \"@/registry/ui/react/button\";\nimport { SignIn } from \"@/lib/icons\";\n\nexport default function ButtonDemo(): JSX.Element {\n  return (\n    <Button href=\"/login\" prefix={<SignIn />} target=\"_blank\">\n      Login\n    </Button>\n  );\n}\n"}]
  },
  "demos/ui/react/card/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/card/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\n\nimport { Button } from \"@/registry/ui/react/button\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/registry/ui/react/card\";\n\nimport { cn } from \"@/lib/utils\";\nimport { BellRing, Check } from \"@/lib/icons\";\nimport { Switch } from \"@/registry/ui/react/switch\";\n\nconst notifications = [\n  {\n    title: \"Your call has been confirmed.\",\n    description: \"1 hour ago\",\n  },\n  {\n    title: \"You have a new message!\",\n    description: \"1 hour ago\",\n  },\n  {\n    title: \"Your subscription is expiring soon!\",\n    description: \"2 hours ago\",\n  },\n];\n\ntype CardProps = React.ComponentProps<typeof Card>;\n\nexport default function CardDemo({\n  className,\n  ...props\n}: CardProps): JSX.Element {\n  return (\n    <Card className={cn(\"w-[380px]\", className)} {...props}>\n      <CardHeader>\n        <CardTitle>Notifications</CardTitle>\n        <CardDescription>You have 3 unread messages.</CardDescription>\n      </CardHeader>\n      <CardContent className=\"grid gap-4\">\n        <div className=\" flex items-center space-x-4 rounded-md border p-4\">\n          <BellRing />\n          <div className=\"flex-1 space-y-1\">\n            <p className=\"text-sm font-medium leading-none\">\n              Push Notifications\n            </p>\n            <p className=\"text-muted-foreground text-sm\">\n              Send notifications to device.\n            </p>\n          </div>\n          <Switch />\n        </div>\n        <div>\n          {notifications.map((notification, index) => (\n            <div\n              key={index}\n              className=\"mb-4 grid grid-cols-[25px_1fr] items-start pb-4 last:mb-0 last:pb-0\"\n            >\n              <span className=\"flex size-2 translate-y-1 rounded-full bg-sky-500\" />\n              <div className=\"space-y-1\">\n                <p className=\"text-sm font-medium leading-none\">\n                  {notification.title}\n                </p>\n                <p className=\"text-muted-foreground text-sm\">\n                  {notification.description}\n                </p>\n              </div>\n            </div>\n          ))}\n        </div>\n      </CardContent>\n      <CardFooter>\n        <Button className=\"w-full\">\n          <Check className=\"mr-2 size-4\" /> Mark all as read\n        </Button>\n      </CardFooter>\n    </Card>\n  );\n}\n"}]
  },
  "demos/ui/react/card/variant": {
    component: React.lazy(() => import("@/registry/demos/ui/react/card/variant")),
    code: [{"title":"variant.tsx","code":"import { Card, CardHeader, CardTitle } from \"@/registry/ui/react/card\";\n\nconst variants = [\n  \"default\",\n  \"outline\",\n  \"success\",\n  \"warning\",\n  \"danger\",\n] as const;\n\nexport default function CardDemo(): JSX.Element {\n  return (\n    <div className=\"grid grid-cols-2 gap-2\">\n      {variants.map((variant) => (\n        <Card key={variant} variant={variant}>\n          <CardHeader>\n            <CardTitle className=\"text-base\">{variant}</CardTitle>\n          </CardHeader>\n        </Card>\n      ))}\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/card/shape": {
    component: React.lazy(() => import("@/registry/demos/ui/react/card/shape")),
    code: [{"title":"shape.tsx","code":"import { Card, CardHeader, CardTitle } from \"@/registry/ui/react/card\";\n\nconst shapes = [\"rectangle\", \"square\", \"circle\"] as const;\n\nexport default function CardDemo(): JSX.Element {\n  return (\n    <div className=\"grid grid-cols-2 gap-2\">\n      {shapes.map((shape) => (\n        <Card key={shape} shape={shape}>\n          <CardHeader>\n            <CardTitle className=\"text-base\">{shape}</CardTitle>\n          </CardHeader>\n        </Card>\n      ))}\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/checkbox/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/checkbox/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\n\nimport { Checkbox } from \"@/registry/ui/react/checkbox\";\n\nexport default function CheckboxDemo(): JSX.Element {\n  return (\n    <div className=\"flex items-center space-x-2\">\n      <Checkbox id=\"terms\" />\n      <label\n        htmlFor=\"terms\"\n        className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n      >\n        Accept terms and conditions\n      </label>\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/collapsible/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/collapsible/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\n\nimport * as React from \"react\";\nimport { ChevronsUpDown } from \"lucide-react\";\n\nimport { Button } from \"@/registry/ui/react/button\";\nimport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n} from \"@/registry/ui/react/collapsible\";\n\nexport default function CollapsibleDemo(): JSX.Element {\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  return (\n    <Collapsible\n      open={isOpen}\n      onOpenChange={setIsOpen}\n      className=\"w-[350px] space-y-2\"\n    >\n      <div className=\"flex items-center justify-between space-x-4 px-4\">\n        <h4 className=\"text-sm font-semibold\">\n          @peduarte starred 3 repositories\n        </h4>\n        <CollapsibleTrigger asChild>\n          <Button variant=\"quiet\" size=\"sm\" className=\"w-9 p-0\">\n            <ChevronsUpDown className=\"h-4 w-4\" />\n            <span className=\"sr-only\">Toggle</span>\n          </Button>\n        </CollapsibleTrigger>\n      </div>\n      <div className=\"rounded-md border px-4 py-3 font-mono text-sm\">\n        @radix-ui/primitives\n      </div>\n      <CollapsibleContent className=\"space-y-2\">\n        <div className=\"rounded-md border px-4 py-3 font-mono text-sm\">\n          @radix-ui/colors\n        </div>\n        <div className=\"rounded-md border px-4 py-3 font-mono text-sm\">\n          @stitches/react\n        </div>\n      </CollapsibleContent>\n    </Collapsible>\n  );\n}\n"}]
  },
  "demos/ui/react/combobox/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/combobox/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\n\nimport * as React from \"react\";\nimport { Check, ChevronsUpDown } from \"lucide-react\";\n\nimport { Button } from \"@/registry/ui/react/button\";\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n} from \"@/registry/ui/react/command\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/registry/ui/react/popover\";\nimport { cn } from \"@/lib/utils\";\n\nconst frameworks = [\n  {\n    value: \"next.js\",\n    label: \"Next.js\",\n  },\n  {\n    value: \"sveltekit\",\n    label: \"SvelteKit\",\n  },\n  {\n    value: \"nuxt.js\",\n    label: \"Nuxt.js\",\n  },\n  {\n    value: \"remix\",\n    label: \"Remix\",\n  },\n  {\n    value: \"astro\",\n    label: \"Astro\",\n  },\n];\n\nexport default function ComboboxDemo(): JSX.Element {\n  const [open, setOpen] = React.useState(false);\n  const [value, setValue] = React.useState(\"\");\n\n  return (\n    <Popover open={open} onOpenChange={setOpen}>\n      <PopoverTrigger asChild>\n        <Button\n          variant=\"outline\"\n          role=\"combobox\"\n          aria-expanded={open}\n          className=\"w-[200px] justify-between\"\n        >\n          {value\n            ? frameworks.find((framework) => framework.value === value)?.label\n            : \"Select framework...\"}\n          <ChevronsUpDown className=\"ml-2 h-4 w-4 shrink-0 opacity-50\" />\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-[200px] p-0\">\n        <Command>\n          <CommandInput placeholder=\"Search framework...\" />\n          <CommandList>\n            <CommandEmpty>No framework found.</CommandEmpty>\n            <CommandGroup>\n              {frameworks.map((framework) => (\n                <CommandItem\n                  key={framework.value}\n                  value={framework.value}\n                  onSelect={(currentValue) => {\n                    setValue(currentValue === value ? \"\" : currentValue);\n                    setOpen(false);\n                  }}\n                >\n                  <Check\n                    className={cn(\n                      \"mr-2 h-4 w-4\",\n                      value === framework.value ? \"opacity-100\" : \"opacity-0\",\n                    )}\n                  />\n                  {framework.label}\n                </CommandItem>\n              ))}\n            </CommandGroup>\n          </CommandList>\n        </Command>\n      </PopoverContent>\n    </Popover>\n  );\n}\n"}]
  },
  "demos/ui/react/command/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/command/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\n\nimport {\n  Calculator,\n  Calendar,\n  CreditCard,\n  Settings,\n  Smile,\n  User,\n} from \"lucide-react\";\n\nimport {\n  Command,\n  CommandGroup,\n  CommandItem,\n  CommandList,\n  CommandSeparator,\n  CommandShortcut,\n  CommandEmpty,\n  CommandInput,\n} from \"@/registry/ui/react/command\";\n\nexport default function CommandDemo(): JSX.Element {\n  return (\n    <Command className=\"rounded-lg border shadow-md\">\n      <CommandInput placeholder=\"Type a command or search...\" />\n      <CommandList>\n        <CommandEmpty>No results found.</CommandEmpty>\n        <CommandGroup heading=\"Suggestions\">\n          <CommandItem>\n            <Calendar className=\"mr-2 size-4\" />\n            <span>Calendar</span>\n          </CommandItem>\n          <CommandItem>\n            <Smile className=\"mr-2 size-4\" />\n            <span>Search Emoji</span>\n          </CommandItem>\n          <CommandItem>\n            <Calculator className=\"mr-2 size-4\" />\n            <span>Calculator</span>\n          </CommandItem>\n        </CommandGroup>\n        <CommandSeparator />\n        <CommandGroup heading=\"Settings\">\n          <CommandItem>\n            <User className=\"mr-2 size-4\" />\n            <span>Profile</span>\n            <CommandShortcut>⌘P</CommandShortcut>\n          </CommandItem>\n          <CommandItem>\n            <CreditCard className=\"mr-2 size-4\" />\n            <span>Billing</span>\n            <CommandShortcut>⌘B</CommandShortcut>\n          </CommandItem>\n          <CommandItem>\n            <Settings className=\"mr-2 size-4\" />\n            <span>Settings</span>\n            <CommandShortcut>⌘S</CommandShortcut>\n          </CommandItem>\n        </CommandGroup>\n      </CommandList>\n    </Command>\n  );\n}\n"}]
  },
  "demos/ui/react/command/dialog": {
    component: React.lazy(() => import("@/registry/demos/ui/react/command/dialog")),
    code: [{"title":"dialog.tsx","code":"\"use client\";\n\nimport * as React from \"react\";\nimport {\n  Calculator,\n  Calendar,\n  CreditCard,\n  Settings,\n  Smile,\n  User,\n} from \"lucide-react\";\n\nimport {\n  CommandDialog,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n  CommandSeparator,\n  CommandShortcut,\n} from \"@/registry/ui/react/command\";\n\nexport default function CommandDialogDemo(): JSX.Element {\n  const [open, setOpen] = React.useState(false);\n\n  React.useEffect(() => {\n    const down = (e: KeyboardEvent) => {\n      if (e.key === \"j\" && (e.metaKey || e.ctrlKey)) {\n        e.preventDefault();\n        setOpen((open) => !open);\n      }\n    };\n\n    document.addEventListener(\"keydown\", down);\n    return () => document.removeEventListener(\"keydown\", down);\n  }, []);\n\n  return (\n    <>\n      <p className=\"text-muted-foreground text-sm\">\n        Press{\" \"}\n        <kbd className=\"bg-secondary text-secondary-foreground pointer-events-none inline-flex h-5 select-none items-center gap-1 rounded border px-1.5 font-mono text-[10px] font-medium opacity-100\">\n          <span className=\"text-xs\">⌘</span>J\n        </kbd>\n      </p>\n      <CommandDialog open={open} onOpenChange={setOpen}>\n        <CommandInput placeholder=\"Type a command or search...\" />\n        <CommandList>\n          <CommandEmpty>No results found.</CommandEmpty>\n          <CommandGroup heading=\"Suggestions\">\n            <CommandItem>\n              <Calendar className=\"mr-2 size-4\" />\n              <span>Calendar</span>\n            </CommandItem>\n            <CommandItem>\n              <Smile className=\"mr-2 size-4\" />\n              <span>Search Emoji</span>\n            </CommandItem>\n            <CommandItem>\n              <Calculator className=\"mr-2 size-4\" />\n              <span>Calculator</span>\n            </CommandItem>\n          </CommandGroup>\n          <CommandSeparator />\n          <CommandGroup heading=\"Settings\">\n            <CommandItem>\n              <User className=\"mr-2 size-4\" />\n              <span>Profile</span>\n              <CommandShortcut>⌘P</CommandShortcut>\n            </CommandItem>\n            <CommandItem>\n              <CreditCard className=\"mr-2 size-4\" />\n              <span>Billing</span>\n              <CommandShortcut>⌘B</CommandShortcut>\n            </CommandItem>\n            <CommandItem>\n              <Settings className=\"mr-2 size-4\" />\n              <span>Settings</span>\n              <CommandShortcut>⌘S</CommandShortcut>\n            </CommandItem>\n          </CommandGroup>\n        </CommandList>\n      </CommandDialog>\n    </>\n  );\n}\n"}]
  },
  "demos/ui/react/context-menu/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/context-menu/default")),
    code: [{"title":"default.tsx","code":"import {\n  ContextMenu,\n  ContextMenuCheckboxItem,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuLabel,\n  ContextMenuRadioGroup,\n  ContextMenuRadioItem,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuTrigger,\n} from \"@/registry/ui/react/context-menu\";\n\nexport default function ContextMenuDemo(): JSX.Element {\n  return (\n    <ContextMenu>\n      <ContextMenuTrigger className=\"flex h-[150px] w-[300px] items-center justify-center rounded-md border border-dashed text-sm\">\n        Right click here\n      </ContextMenuTrigger>\n      <ContextMenuContent className=\"w-64\">\n        <ContextMenuItem inset>\n          Back\n          <ContextMenuShortcut>⌘[</ContextMenuShortcut>\n        </ContextMenuItem>\n        <ContextMenuItem inset disabled>\n          Forward\n          <ContextMenuShortcut>⌘]</ContextMenuShortcut>\n        </ContextMenuItem>\n        <ContextMenuItem inset>\n          Reload\n          <ContextMenuShortcut>⌘R</ContextMenuShortcut>\n        </ContextMenuItem>\n        <ContextMenuSub>\n          <ContextMenuSubTrigger inset>More Tools</ContextMenuSubTrigger>\n          <ContextMenuSubContent className=\"w-48\">\n            <ContextMenuItem>\n              Save Page As...\n              <ContextMenuShortcut>⇧⌘S</ContextMenuShortcut>\n            </ContextMenuItem>\n            <ContextMenuItem>Create Shortcut...</ContextMenuItem>\n            <ContextMenuItem>Name Window...</ContextMenuItem>\n            <ContextMenuSeparator />\n            <ContextMenuItem>Developer Tools</ContextMenuItem>\n          </ContextMenuSubContent>\n        </ContextMenuSub>\n        <ContextMenuSeparator />\n        <ContextMenuCheckboxItem checked>\n          Show Bookmarks Bar\n          <ContextMenuShortcut>⌘⇧B</ContextMenuShortcut>\n        </ContextMenuCheckboxItem>\n        <ContextMenuCheckboxItem>Show Full URLs</ContextMenuCheckboxItem>\n        <ContextMenuSeparator />\n        <ContextMenuRadioGroup value=\"pedro\">\n          <ContextMenuLabel inset>People</ContextMenuLabel>\n          <ContextMenuSeparator />\n          <ContextMenuRadioItem value=\"pedro\">\n            Pedro Duarte\n          </ContextMenuRadioItem>\n          <ContextMenuRadioItem value=\"colm\">Colm Tuite</ContextMenuRadioItem>\n        </ContextMenuRadioGroup>\n      </ContextMenuContent>\n    </ContextMenu>\n  );\n}\n"}]
  },
  "demos/ui/react/dialog/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/dialog/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\n\nimport { Button } from \"@/registry/ui/react/button\";\nimport { Label } from \"@/registry/ui/react/label\";\nimport { TextField } from \"@/registry/ui/react/text-field\";\nimport {\n  Dialog,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n  DialogFooter,\n} from \"@/registry/ui/react/dialog\";\n\nexport default function DialogDemo(): JSX.Element {\n  const Content = () => (\n    <>\n      <DialogHeader>\n        <DialogTitle>Edit profile</DialogTitle>\n        <DialogDescription>\n          Make changes to your profile here. Click save when you're done.\n        </DialogDescription>\n      </DialogHeader>\n      <div className=\"grid gap-4 py-4\">\n        <div className=\"grid grid-cols-4 items-center gap-4\">\n          <Label htmlFor=\"name\" className=\"text-right\">\n            Name\n          </Label>\n          <TextField\n            id=\"name\"\n            defaultValue=\"Pedro Duarte\"\n            className=\"col-span-3\"\n          />\n        </div>\n        <div className=\"grid grid-cols-4 items-center gap-4\">\n          <Label htmlFor=\"username\" className=\"text-right\">\n            Username\n          </Label>\n          <TextField\n            id=\"username\"\n            defaultValue=\"~peduarte\"\n            className=\"col-span-3\"\n          />\n        </div>\n      </div>\n      <DialogFooter>\n        <Button type=\"submit\">Save changes</Button>\n      </DialogFooter>\n    </>\n  );\n\n  return (\n    <Dialog content={<Content />} className=\"sm:max-w-[425px]\">\n      <Button>Edit Profile</Button>\n    </Dialog>\n  );\n}\n"}]
  },
  "demos/ui/react/dialog/composition": {
    component: React.lazy(() => import("@/registry/demos/ui/react/dialog/composition")),
    code: [{"title":"composition.tsx","code":"\"use client\";\n\nimport { Button } from \"@/registry/ui/react/button\";\nimport { Label } from \"@/registry/ui/react/label\";\nimport { TextField } from \"@/registry/ui/react/text-field\";\nimport {\n  Dialog,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n  DialogFooter,\n} from \"@/registry/ui/react/dialog\";\n\nexport default function DialogDemo(): JSX.Element {\n  return (\n    <Dialog>\n      <DialogTrigger asChild>\n        <Button>Edit Profile</Button>\n      </DialogTrigger>\n      <DialogContent className=\"sm:max-w-[425px]\">\n        <DialogHeader>\n          <DialogTitle>Edit profile</DialogTitle>\n          <DialogDescription>\n            Make changes to your profile here. Click save when you're done.\n          </DialogDescription>\n        </DialogHeader>\n        <div className=\"grid gap-4 py-4\">\n          <div className=\"grid grid-cols-4 items-center gap-4\">\n            <Label htmlFor=\"name\" className=\"text-right\">\n              Name\n            </Label>\n            <TextField\n              id=\"name\"\n              defaultValue=\"Pedro Duarte\"\n              className=\"col-span-3\"\n            />\n          </div>\n          <div className=\"grid grid-cols-4 items-center gap-4\">\n            <Label htmlFor=\"username\" className=\"text-right\">\n              Username\n            </Label>\n            <TextField\n              id=\"username\"\n              defaultValue=\"~peduarte\"\n              className=\"col-span-3\"\n            />\n          </div>\n        </div>\n        <DialogFooter>\n          <Button type=\"submit\">Save changes</Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"}]
  },
  "demos/ui/react/divider/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/divider/default")),
    code: [{"title":"default.tsx","code":"import { Button } from \"@/registry/ui/react/button\";\nimport { Divider } from \"@/registry/ui/react/divider\";\n\nexport default function DividerDemo(): JSX.Element {\n  return (\n    <div className=\"w-full mx-4\">\n      <Divider className=\"gap-4\">\n        <Button>Default</Button>\n      </Divider>\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/divider/orientation": {
    component: React.lazy(() => import("@/registry/demos/ui/react/divider/orientation")),
    code: [{"title":"orientation.tsx","code":"import { Divider } from \"@/registry/ui/react/divider\";\n\nexport default function DividerDemo(): JSX.Element {\n  return (\n    <div className=\"w-full mx-4\">\n      <Divider orientation=\"vertical\" className=\"gap-4 min-h-[200px]\">\n        Vertical\n      </Divider>\n      <Divider orientation=\"horizontal\" className=\"gap-4\">\n        Horizontal\n      </Divider>\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/divider/position": {
    component: React.lazy(() => import("@/registry/demos/ui/react/divider/position")),
    code: [{"title":"position.tsx","code":"import { Divider } from \"@/registry/ui/react/divider\";\n\nexport default function DividerDemo(): JSX.Element {\n  return (\n    <div className=\"w-full mx-4\">\n      <Divider className=\"gap-4\">Gap 4</Divider>\n      <Divider position=\"after\">After</Divider>\n      <Divider position=\"before\">Before</Divider>\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/drawer/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/drawer/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\n\nimport * as React from \"react\";\nimport { Minus, Plus } from \"lucide-react\";\nimport { Bar, BarChart, ResponsiveContainer } from \"recharts\";\nimport {\n  Drawer,\n  DrawerTrigger,\n  DrawerContent,\n  DrawerHeader,\n  DrawerTitle,\n  DrawerDescription,\n  DrawerFooter,\n  DrawerClose,\n} from \"@/registry/ui/react/drawer\";\nimport { Button } from \"@/registry/ui/react/button\";\n\nconst data = [\n  {\n    goal: 400,\n  },\n  {\n    goal: 300,\n  },\n  {\n    goal: 200,\n  },\n  {\n    goal: 300,\n  },\n  {\n    goal: 200,\n  },\n  {\n    goal: 278,\n  },\n  {\n    goal: 189,\n  },\n  {\n    goal: 239,\n  },\n  {\n    goal: 300,\n  },\n  {\n    goal: 200,\n  },\n  {\n    goal: 278,\n  },\n  {\n    goal: 189,\n  },\n  {\n    goal: 349,\n  },\n];\n\nexport default function DrawerDemo(): JSX.Element {\n  const [goal, setGoal] = React.useState(350);\n\n  function onClick(adjustment: number) {\n    setGoal(Math.max(200, Math.min(400, goal + adjustment)));\n  }\n\n  return (\n    <Drawer>\n      <DrawerTrigger asChild>\n        <Button variant=\"outline\">Open Drawer</Button>\n      </DrawerTrigger>\n      <DrawerContent>\n        <div className=\"mx-auto w-full max-w-sm\">\n          <DrawerHeader>\n            <DrawerTitle>Move Goal</DrawerTitle>\n            <DrawerDescription>Set your daily activity goal.</DrawerDescription>\n          </DrawerHeader>\n          <div className=\"p-4 pb-0\">\n            <div className=\"flex items-center justify-center space-x-2\">\n              <Button\n                variant=\"outline\"\n                size=\"icon\"\n                className=\"size-8 shrink-0 rounded-full\"\n                onClick={() => onClick(-10)}\n                disabled={goal <= 200}\n              >\n                <Minus className=\"size-4\" />\n                <span className=\"sr-only\">Decrease</span>\n              </Button>\n              <div className=\"flex-1 text-center\">\n                <div className=\"text-7xl font-bold tracking-tighter\">\n                  {goal}\n                </div>\n                <div className=\"text-muted-foreground text-[0.70rem] uppercase\">\n                  Calories/day\n                </div>\n              </div>\n              <Button\n                variant=\"outline\"\n                size=\"icon\"\n                className=\"size-8 shrink-0 rounded-full\"\n                onClick={() => onClick(10)}\n                disabled={goal >= 400}\n              >\n                <Plus className=\"size-4\" />\n                <span className=\"sr-only\">Increase</span>\n              </Button>\n            </div>\n            <div className=\"mt-3 h-[120px]\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <BarChart data={data}>\n                  <Bar\n                    dataKey=\"goal\"\n                    style={\n                      {\n                        fill: \"hsl(var(--foreground))\",\n                        opacity: 0.9,\n                      } as React.CSSProperties\n                    }\n                  />\n                </BarChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n          <DrawerFooter>\n            <Button>Submit</Button>\n            <DrawerClose asChild>\n              <Button variant=\"outline\">Cancel</Button>\n            </DrawerClose>\n          </DrawerFooter>\n        </div>\n      </DrawerContent>\n    </Drawer>\n  );\n}\n"}]
  },
  "demos/ui/react/dropdown/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/dropdown/default")),
    code: [{"title":"default.tsx","code":"import {\n  Cloud,\n  CreditCard,\n  Github,\n  Keyboard,\n  LifeBuoy,\n  LogOut,\n  Mail,\n  MessageSquare,\n  Plus,\n  PlusCircle,\n  Settings,\n  User,\n  UserPlus,\n  Users,\n} from \"lucide-react\";\n\nimport { Button } from \"@/registry/ui/react/button\";\nimport {\n  Dropdown,\n  DropdownGroup,\n  DropdownItem,\n  DropdownLabel,\n  DropdownPortal,\n  DropdownSeparator,\n  DropdownShortcut,\n  DropdownSub,\n  DropdownSubContent,\n  DropdownSubTrigger,\n} from \"@/registry/ui/react/dropdown\";\n\nexport default function DropdownDemo(): JSX.Element {\n  const Content = () => (\n    <>\n      <DropdownLabel>My Account</DropdownLabel>\n      <DropdownSeparator />\n      <DropdownGroup>\n        <DropdownItem>\n          <User className=\"mr-2 size-4\" />\n          <span>Profile</span>\n          <DropdownShortcut>⇧⌘P</DropdownShortcut>\n        </DropdownItem>\n        <DropdownItem>\n          <CreditCard className=\"mr-2 size-4\" />\n          <span>Billing</span>\n          <DropdownShortcut>⌘B</DropdownShortcut>\n        </DropdownItem>\n        <DropdownItem>\n          <Settings className=\"mr-2 size-4\" />\n          <span>Settings</span>\n          <DropdownShortcut>⌘S</DropdownShortcut>\n        </DropdownItem>\n        <DropdownItem>\n          <Keyboard className=\"mr-2 size-4\" />\n          <span>Keyboard shortcuts</span>\n          <DropdownShortcut>⌘K</DropdownShortcut>\n        </DropdownItem>\n      </DropdownGroup>\n      <DropdownSeparator />\n      <DropdownGroup>\n        <DropdownItem>\n          <Users className=\"mr-2 size-4\" />\n          <span>Team</span>\n        </DropdownItem>\n        <DropdownSub>\n          <DropdownSubTrigger>\n            <UserPlus className=\"mr-2 size-4\" />\n            <span>Invite users</span>\n          </DropdownSubTrigger>\n          <DropdownPortal>\n            <DropdownSubContent>\n              <DropdownItem>\n                <Mail className=\"mr-2 size-4\" />\n                <span>Email</span>\n              </DropdownItem>\n              <DropdownItem>\n                <MessageSquare className=\"mr-2 size-4\" />\n                <span>Message</span>\n              </DropdownItem>\n              <DropdownSeparator />\n              <DropdownItem>\n                <PlusCircle className=\"mr-2 size-4\" />\n                <span>More...</span>\n              </DropdownItem>\n            </DropdownSubContent>\n          </DropdownPortal>\n        </DropdownSub>\n        <DropdownItem>\n          <Plus className=\"mr-2 size-4\" />\n          <span>New Team</span>\n          <DropdownShortcut>⌘+T</DropdownShortcut>\n        </DropdownItem>\n      </DropdownGroup>\n      <DropdownSeparator />\n      <DropdownItem>\n        <Github className=\"mr-2 size-4\" />\n        <span>GitHub</span>\n      </DropdownItem>\n      <DropdownItem>\n        <LifeBuoy className=\"mr-2 size-4\" />\n        <span>Support</span>\n      </DropdownItem>\n      <DropdownItem disabled>\n        <Cloud className=\"mr-2 size-4\" />\n        <span>API</span>\n      </DropdownItem>\n      <DropdownSeparator />\n      <DropdownItem>\n        <LogOut className=\"mr-2 size-4\" />\n        <span>Log out</span>\n        <DropdownShortcut>⇧⌘Q</DropdownShortcut>\n      </DropdownItem>\n    </>\n  );\n\n  return (\n    <Dropdown content={<Content />} className=\"w-56\">\n      <Button variant=\"outline\">Open</Button>\n    </Dropdown>\n  );\n}\n"}]
  },
  "demos/ui/react/dropdown/side": {
    component: React.lazy(() => import("@/registry/demos/ui/react/dropdown/side")),
    code: [{"title":"side.tsx","code":"\"use client\";\n\nimport {\n  Cloud,\n  CreditCard,\n  Github,\n  Keyboard,\n  LifeBuoy,\n  LogOut,\n  Mail,\n  MessageSquare,\n  Plus,\n  PlusCircle,\n  Settings,\n  User,\n  UserPlus,\n  Users,\n} from \"lucide-react\";\n\nimport { Button } from \"@/registry/ui/react/button\";\nimport {\n  Dropdown,\n  DropdownGroup,\n  DropdownItem,\n  DropdownLabel,\n  DropdownPortal,\n  DropdownSeparator,\n  DropdownShortcut,\n  DropdownSub,\n  DropdownSubContent,\n  DropdownSubTrigger,\n} from \"@/registry/ui/react/dropdown\";\n\nconst sides = [\"top\", \"right\", \"left\", \"bottom\"] as const;\n\nexport default function TooltipDemo(): JSX.Element {\n  const Content = () => (\n    <>\n      <DropdownLabel>My Account</DropdownLabel>\n      <DropdownSeparator />\n      <DropdownGroup>\n        <DropdownItem>\n          <User className=\"mr-2 size-4\" />\n          <span>Profile</span>\n          <DropdownShortcut>⇧⌘P</DropdownShortcut>\n        </DropdownItem>\n        <DropdownItem>\n          <CreditCard className=\"mr-2 size-4\" />\n          <span>Billing</span>\n          <DropdownShortcut>⌘B</DropdownShortcut>\n        </DropdownItem>\n        <DropdownItem>\n          <Settings className=\"mr-2 size-4\" />\n          <span>Settings</span>\n          <DropdownShortcut>⌘S</DropdownShortcut>\n        </DropdownItem>\n        <DropdownItem>\n          <Keyboard className=\"mr-2 size-4\" />\n          <span>Keyboard shortcuts</span>\n          <DropdownShortcut>⌘K</DropdownShortcut>\n        </DropdownItem>\n      </DropdownGroup>\n      <DropdownSeparator />\n      <DropdownGroup>\n        <DropdownItem>\n          <Users className=\"mr-2 size-4\" />\n          <span>Team</span>\n        </DropdownItem>\n        <DropdownSub>\n          <DropdownSubTrigger>\n            <UserPlus className=\"mr-2 size-4\" />\n            <span>Invite users</span>\n          </DropdownSubTrigger>\n          <DropdownPortal>\n            <DropdownSubContent>\n              <DropdownItem>\n                <Mail className=\"mr-2 size-4\" />\n                <span>Email</span>\n              </DropdownItem>\n              <DropdownItem>\n                <MessageSquare className=\"mr-2 size-4\" />\n                <span>Message</span>\n              </DropdownItem>\n              <DropdownSeparator />\n              <DropdownItem>\n                <PlusCircle className=\"mr-2 size-4\" />\n                <span>More...</span>\n              </DropdownItem>\n            </DropdownSubContent>\n          </DropdownPortal>\n        </DropdownSub>\n        <DropdownItem>\n          <Plus className=\"mr-2 size-4\" />\n          <span>New Team</span>\n          <DropdownShortcut>⌘+T</DropdownShortcut>\n        </DropdownItem>\n      </DropdownGroup>\n      <DropdownSeparator />\n      <DropdownItem>\n        <Github className=\"mr-2 size-4\" />\n        <span>GitHub</span>\n      </DropdownItem>\n      <DropdownItem>\n        <LifeBuoy className=\"mr-2 size-4\" />\n        <span>Support</span>\n      </DropdownItem>\n      <DropdownItem disabled>\n        <Cloud className=\"mr-2 size-4\" />\n        <span>API</span>\n      </DropdownItem>\n      <DropdownSeparator />\n      <DropdownItem>\n        <LogOut className=\"mr-2 size-4\" />\n        <span>Log out</span>\n        <DropdownShortcut>⇧⌘Q</DropdownShortcut>\n      </DropdownItem>\n    </>\n  );\n\n  return (\n    <div className=\"grid grid-cols-2 gap-2\">\n      {sides.map((side) => (\n        <Dropdown key={side} content={<Content />} side={side} className=\"w-56\">\n          <Button>{side}</Button>\n        </Dropdown>\n      ))}\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/dropdown/checkbox": {
    component: React.lazy(() => import("@/registry/demos/ui/react/dropdown/checkbox")),
    code: [{"title":"checkbox.tsx","code":"\"use client\";\n\nimport * as React from \"react\";\n\nimport {\n  Dropdown,\n  DropdownCheckboxItem,\n  DropdownLabel,\n  DropdownSeparator,\n} from \"@/registry/ui/react/dropdown\";\nimport { Button } from \"@/registry/ui/react/button\";\nimport { DropdownMenuCheckboxItemProps } from \"@radix-ui/react-dropdown-menu\";\n\ntype Checked = DropdownMenuCheckboxItemProps[\"checked\"];\n\nexport default function DropdownGroupDemo(): JSX.Element {\n  const [showStatusBar, setShowStatusBar] = React.useState<Checked>(true);\n  const [showActivityBar, setShowActivityBar] = React.useState<Checked>(false);\n  const [showPanel, setShowPanel] = React.useState<Checked>(false);\n\n  const Content = () => (\n    <>\n      <DropdownLabel>Appearance</DropdownLabel>\n      <DropdownSeparator />\n      <DropdownCheckboxItem\n        checked={showStatusBar}\n        onCheckedChange={setShowStatusBar}\n      >\n        Status Bar\n      </DropdownCheckboxItem>\n      <DropdownCheckboxItem\n        checked={showActivityBar}\n        onCheckedChange={setShowActivityBar}\n        disabled\n      >\n        Activity Bar\n      </DropdownCheckboxItem>\n      <DropdownCheckboxItem checked={showPanel} onCheckedChange={setShowPanel}>\n        Panel\n      </DropdownCheckboxItem>\n    </>\n  );\n\n  return (\n    <Dropdown content={<Content />} className=\"w-56\">\n      <Button variant=\"outline\">Open</Button>\n    </Dropdown>\n  );\n}\n"}]
  },
  "demos/ui/react/dropdown/radio": {
    component: React.lazy(() => import("@/registry/demos/ui/react/dropdown/radio")),
    code: [{"title":"radio.tsx","code":"\"use client\";\n\nimport * as React from \"react\";\n\nimport {\n  Dropdown,\n  DropdownLabel,\n  DropdownRadioGroup,\n  DropdownRadioItem,\n  DropdownSeparator,\n} from \"@/registry/ui/react/dropdown\";\nimport { Button } from \"@/registry/ui/react/button\";\n\nexport default function DropdownGroupDemo(): JSX.Element {\n  const [position, setPosition] = React.useState(\"bottom\");\n\n  const Content = () => (\n    <>\n      <DropdownLabel>Panel Position</DropdownLabel>\n      <DropdownSeparator />\n      <DropdownRadioGroup value={position} onValueChange={setPosition}>\n        <DropdownRadioItem value=\"top\">Top</DropdownRadioItem>\n        <DropdownRadioItem value=\"bottom\">Bottom</DropdownRadioItem>\n        <DropdownRadioItem value=\"right\">Right</DropdownRadioItem>\n      </DropdownRadioGroup>\n    </>\n  );\n\n  return (\n    <Dropdown content={<Content />} className=\"w-56\">\n      <Button variant=\"outline\">Open</Button>\n    </Dropdown>\n  );\n}\n"}]
  },
  "demos/ui/react/form/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/form/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\n\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\n\nimport { Button } from \"@/registry/ui/react/button\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/registry/ui/react/form\";\nimport { TextField } from \"@/registry/ui/react/text-field\";\n// import { toast } from '~/components/ui/use-toast'\n\nconst FormSchema = z.object({\n  username: z.string().min(2, {\n    message: \"Username must be at least 2 characters.\",\n  }),\n});\n\nexport default function FormDemo(): JSX.Element {\n  const form = useForm<z.infer<typeof FormSchema>>({\n    resolver: zodResolver(FormSchema),\n    defaultValues: {\n      username: \"\",\n    },\n  });\n\n  function onSubmit(data: z.infer<typeof FormSchema>) {\n    /* toast({\n         title: 'You submitted the following values:',\n         description: (\n            <pre className=\"mt-2 w-[340px] rounded-md bg-slate-950 p-4\">\n               <code className=\"text-white\">{JSON.stringify(data, null, 2)}</code>\n            </pre>\n         ),\n      }) */\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"w-2/3 space-y-6\">\n        <FormField\n          control={form.control}\n          name=\"username\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Username</FormLabel>\n              <FormControl>\n                <TextField placeholder=\"name...\" {...field} />\n              </FormControl>\n              <FormDescription>\n                This is your public display name.\n              </FormDescription>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <Button type=\"submit\" size=\"sm\">\n          Submit\n        </Button>\n      </form>\n    </Form>\n  );\n}\n"}]
  },
  "demos/ui/react/hover-card/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/hover-card/default")),
    code: [{"title":"default.tsx","code":"import { CalendarDays } from \"lucide-react\";\n\nimport {\n  Avatar,\n  AvatarFallback,\n  AvatarImage,\n} from \"@/registry/ui/react/avatar\";\nimport { Button } from \"@/registry/ui/react/button\";\nimport { HoverCard } from \"@/registry/ui/react/hover-card\";\n\nexport default function HoverCardDemo(): JSX.Element {\n  const Content = () => (\n    <div className=\"flex justify-between space-x-4\">\n      <Avatar>\n        <AvatarImage src=\"https://github.com/vercel.png\" />\n        <AvatarFallback>VC</AvatarFallback>\n      </Avatar>\n      <div className=\"space-y-1\">\n        <h4 className=\"text-sm font-semibold\">@nextjs</h4>\n        <p className=\"text-sm\">\n          The React Framework – created and maintained by @vercel.\n        </p>\n        <div className=\"flex items-center pt-2\">\n          <CalendarDays className=\"mr-2 h-4 w-4 opacity-70\" />{\" \"}\n          <span className=\"text-xs text-muted-foreground\">\n            Joined December 2021\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <HoverCard content={<Content />} className=\"w-80\">\n      <Button variant=\"link\">@nextjs</Button>\n    </HoverCard>\n  );\n}\n"}]
  },
  "demos/ui/react/hover-card/composition": {
    component: React.lazy(() => import("@/registry/demos/ui/react/hover-card/composition")),
    code: [{"title":"composition.tsx","code":"import { CalendarDays } from \"lucide-react\";\n\nimport {\n  Avatar,\n  AvatarFallback,\n  AvatarImage,\n} from \"@/registry/ui/react/avatar\";\nimport { Button } from \"@/registry/ui/react/button\";\nimport {\n  HoverCard,\n  HoverCardContent,\n  HoverCardTrigger,\n} from \"@/registry/ui/react/hover-card\";\n\nexport default function HoverCardDemo(): JSX.Element {\n  return (\n    <HoverCard>\n      <HoverCardTrigger asChild>\n        <Button variant=\"link\">@nextjs</Button>\n      </HoverCardTrigger>\n      <HoverCardContent className=\"w-80\">\n        <div className=\"flex justify-between space-x-4\">\n          <Avatar>\n            <AvatarImage src=\"https://github.com/vercel.png\" />\n            <AvatarFallback>VC</AvatarFallback>\n          </Avatar>\n          <div className=\"space-y-1\">\n            <h4 className=\"text-sm font-semibold\">@nextjs</h4>\n            <p className=\"text-sm\">\n              The React Framework – created and maintained by @vercel.\n            </p>\n            <div className=\"flex items-center pt-2\">\n              <CalendarDays className=\"mr-2 h-4 w-4 opacity-70\" />{\" \"}\n              <span className=\"text-xs text-muted-foreground\">\n                Joined December 2021\n              </span>\n            </div>\n          </div>\n        </div>\n      </HoverCardContent>\n    </HoverCard>\n  );\n}\n"}]
  },
  "demos/ui/react/label/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/label/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\n\nimport { Checkbox } from \"@/registry/ui/react/checkbox\";\nimport { Label } from \"@/registry/ui/react/label\";\n\nexport default function LabelDemo(): JSX.Element {\n  return (\n    <div>\n      <div className=\"flex items-center space-x-2\">\n        <Checkbox id=\"terms\" />\n        <Label htmlFor=\"terms\">Accept terms and conditions</Label>\n      </div>\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/marquee/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/marquee/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport { Marquee } from \"@/registry/ui/react/marquee\";\n\nconst reviews = [\n  {\n    name: \"Jack\",\n    username: \"@jack\",\n    body: \"I've never seen cnthing like this before. It's amazing. I love it.\",\n    img: \"https://avatar.vercel.sh/jack\",\n  },\n  {\n    name: \"Jill\",\n    username: \"@jill\",\n    body: \"I don't know what to say. I'm speechless. This is amazing.\",\n    img: \"https://avatar.vercel.sh/jill\",\n  },\n  {\n    name: \"John\",\n    username: \"@john\",\n    body: \"I'm at a loss for words. This is amazing. I love it.\",\n    img: \"https://avatar.vercel.sh/john\",\n  },\n  {\n    name: \"Jane\",\n    username: \"@jane\",\n    body: \"I'm at a loss for words. This is amazing. I love it.\",\n    img: \"https://avatar.vercel.sh/jane\",\n  },\n  {\n    name: \"Jenny\",\n    username: \"@jenny\",\n    body: \"I'm at a loss for words. This is amazing. I love it.\",\n    img: \"https://avatar.vercel.sh/jenny\",\n  },\n  {\n    name: \"James\",\n    username: \"@james\",\n    body: \"I'm at a loss for words. This is amazing. I love it.\",\n    img: \"https://avatar.vercel.sh/james\",\n  },\n];\n\nconst firstRow = reviews.slice(0, reviews.length / 2);\nconst secondRow = reviews.slice(reviews.length / 2);\n\nfunction ReviewCard({\n  img,\n  name,\n  username,\n  body,\n}: {\n  img: string;\n  name: string;\n  username: string;\n  body: string;\n}) {\n  return (\n    <figure\n      className={cn(\"relative w-64 overflow-hidden rounded-xl border p-4\")}\n    >\n      <div className=\"flex flex-row items-center gap-2\">\n        <img className=\"rounded-full\" width=\"32\" height=\"32\" alt=\"\" src={img} />\n        <div className=\"flex flex-col\">\n          <figcaption className=\"text-sm font-medium\">{name}</figcaption>\n          <p className=\"text-xs font-medium\">{username}</p>\n        </div>\n      </div>\n      <blockquote className=\"mt-2 text-sm\">{body}</blockquote>\n    </figure>\n  );\n}\n\nexport default function MarqueeDemo(): JSX.Element {\n  return (\n    <div className=\"bg-background relative flex w-full h-full flex-col items-center justify-center overflow-hidden rounded-lg md:shadow-xl\">\n      <Marquee className=\"[--duration:20s]\">\n        {firstRow.map((review) => (\n          <ReviewCard key={review.username} {...review} />\n        ))}\n      </Marquee>\n      <Marquee reverse className=\"[--duration:20s]\">\n        {secondRow.map((review) => (\n          <ReviewCard key={review.username} {...review} />\n        ))}\n      </Marquee>\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/multi-select/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/multi-select/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\n\nimport {\n  MultiSelect,\n  MultiSelectContent,\n  MultiSelectGroup,\n  MultiSelectItem,\n  MultiSelectList,\n  MultiSelectTrigger,\n  MultiSelectValue,\n} from \"@/registry/ui/react/multi-select\";\n\nexport default function MultiSelectDemo(): JSX.Element {\n  return (\n    <MultiSelect>\n      <MultiSelectTrigger className=\"w-96\">\n        <MultiSelectValue placeholder=\"Select stack\" />\n      </MultiSelectTrigger>\n      <MultiSelectContent>\n        <MultiSelectList>\n          <MultiSelectGroup heading=\"React\">\n            <MultiSelectItem value=\"react\">React</MultiSelectItem>\n            <MultiSelectItem value=\"next\">Next.js</MultiSelectItem>\n            <MultiSelectItem value=\"remix\">Remix</MultiSelectItem>\n          </MultiSelectGroup>\n          <MultiSelectGroup heading=\"Vue\">\n            <MultiSelectItem value=\"vue\">Vue</MultiSelectItem>\n            <MultiSelectItem value=\"nuxt\">Nuxt</MultiSelectItem>\n          </MultiSelectGroup>\n          <MultiSelectGroup heading=\"Others\">\n            <MultiSelectItem value=\"angular\">Angular</MultiSelectItem>\n            <MultiSelectItem value=\"svelte\">Svelte</MultiSelectItem>\n          </MultiSelectGroup>\n        </MultiSelectList>\n      </MultiSelectContent>\n    </MultiSelect>\n  );\n}\n"}]
  },
  "demos/ui/react/multi-select/with-filter": {
    component: React.lazy(() => import("@/registry/demos/ui/react/multi-select/with-filter")),
    code: [{"title":"with-filter.tsx","code":"\"use client\";\n\nimport {\n  MultiSelect,\n  MultiSelectContent,\n  MultiSelectEmpty,\n  MultiSelectGroup,\n  MultiSelectItem,\n  MultiSelectList,\n  MultiSelectSearch,\n  MultiSelectTrigger,\n  MultiSelectValue,\n} from \"@/registry/ui/react/multi-select\";\n\nexport default function MultiSelectDemo(): JSX.Element {\n  return (\n    <MultiSelect>\n      <MultiSelectTrigger className=\"w-96\">\n        <MultiSelectValue placeholder=\"Select stack\" />\n      </MultiSelectTrigger>\n      <MultiSelectContent>\n        <MultiSelectSearch placeholder=\"Input to search\" />\n        <MultiSelectList>\n          <MultiSelectGroup heading=\"React\">\n            <MultiSelectItem value=\"react\">React</MultiSelectItem>\n            <MultiSelectItem value=\"next\">Next.js</MultiSelectItem>\n            <MultiSelectItem value=\"remix\">Remix</MultiSelectItem>\n          </MultiSelectGroup>\n          <MultiSelectGroup heading=\"Vue\">\n            <MultiSelectItem value=\"vue\">Vue</MultiSelectItem>\n            <MultiSelectItem value=\"nuxt\">Nuxt</MultiSelectItem>\n          </MultiSelectGroup>\n          <MultiSelectGroup heading=\"Others\">\n            <MultiSelectItem value=\"angular\">Angular</MultiSelectItem>\n            <MultiSelectItem value=\"svelte\">Svelte</MultiSelectItem>\n          </MultiSelectGroup>\n        </MultiSelectList>\n        <MultiSelectEmpty />\n      </MultiSelectContent>\n    </MultiSelect>\n  );\n}\n"}]
  },
  "demos/ui/react/multi-select/control-search": {
    component: React.lazy(() => import("@/registry/demos/ui/react/multi-select/control-search")),
    code: [{"title":"control-search.tsx","code":"\"use client\";\n\nimport { useRef, useState } from \"react\";\nimport {\n  MultiSelect,\n  MultiSelectContent,\n  MultiSelectEmpty,\n  MultiSelectList,\n  type MultiSelectOption,\n  type MultiSelectOptionGroup,\n  MultiSelectSearch,\n  MultiSelectTrigger,\n  MultiSelectValue,\n  renderMultiSelectOptions,\n} from \"@/registry/ui/react/multi-select\";\n\nconst ALL_ITEMS = [\n  { value: \"react\", label: \"React\", group: \"React\" },\n  { value: \"next\", label: \"Next.js\", group: \"React\" },\n  { value: \"remix\", label: \"Remix\", group: \"React\" },\n  { value: \"vue\", label: \"Vue\", group: \"Vue\" },\n  { value: \"nuxt\", label: \"Nuxt.js\", group: \"Vue\" },\n  { value: \"angular\", label: \"Angular\", group: \"Others\" },\n  { value: \"svelte\", label: \"Svelte\", group: \"Others\" },\n];\n\nfunction group(\n  options: Array<(typeof ALL_ITEMS)[number]>,\n): MultiSelectOptionGroup[] {\n  return options.reduce((acc, item) => {\n    const group = acc.find((g) => g.heading === item.group);\n    if (group) group.children.push(item);\n    else acc.push({ heading: item.group, children: [item] });\n\n    return acc;\n  }, [] as MultiSelectOptionGroup[]);\n}\n\nasync function search(keyword?: string) {\n  if (!keyword) return group(ALL_ITEMS);\n  await new Promise((resolve) => setTimeout(resolve, 500));\n  const lowerKeyword = keyword.toLowerCase();\n  const filtered = ALL_ITEMS.filter((item) =>\n    item.label.toLowerCase().includes(lowerKeyword),\n  );\n  return group(filtered);\n}\n\nexport default function MultiSelectDemo(): JSX.Element {\n  const [loading, setLoading] = useState(false);\n  const [options, setOptions] = useState<MultiSelectOption[]>(() =>\n    group(ALL_ITEMS),\n  );\n\n  const indexRef = useRef(0);\n\n  const handleSearch = async (keyword?: string) => {\n    const index = ++indexRef.current;\n    setLoading(true);\n    const newOptions = await search(keyword);\n    if (indexRef.current === index) {\n      setOptions(newOptions);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <MultiSelect onSearch={handleSearch}>\n      <MultiSelectTrigger className=\"w-96\">\n        <MultiSelectValue placeholder=\"Select stack\" />\n      </MultiSelectTrigger>\n      <MultiSelectContent>\n        <MultiSelectSearch />\n        <MultiSelectList>\n          {loading ? null : renderMultiSelectOptions(options)}\n          <MultiSelectEmpty>\n            {loading ? \"Loading...\" : \"No results found\"}\n          </MultiSelectEmpty>\n        </MultiSelectList>\n      </MultiSelectContent>\n    </MultiSelect>\n  );\n}\n"}]
  },
  "demos/ui/react/multi-select/input-custom": {
    component: React.lazy(() => import("@/registry/demos/ui/react/multi-select/input-custom")),
    code: [{"title":"input-custom.tsx","code":"\"use client\";\n\nimport { useRef, useState } from \"react\";\n\nimport {\n  MultiSelect,\n  MultiSelectContent,\n  MultiSelectEmpty,\n  MultiSelectList,\n  type MultiSelectOption,\n  type MultiSelectOptionGroup,\n  MultiSelectSearch,\n  MultiSelectTrigger,\n  MultiSelectValue,\n  renderMultiSelectOptions,\n} from \"@/registry/ui/react/multi-select\";\n\nconst ALL_ITEMS = [\n  { value: \"react\", label: \"React\", group: \"React\" },\n  { value: \"next\", label: \"Next.js\", group: \"React\" },\n  { value: \"remix\", label: \"Remix\", group: \"React\" },\n  { value: \"vue\", label: \"Vue\", group: \"Vue\" },\n  { value: \"nuxt\", label: \"Nuxt.js\", group: \"Vue\" },\n  { value: \"angular\", label: \"Angular\", group: \"Others\" },\n  { value: \"svelte\", label: \"Svelte\", group: \"Others\" },\n];\n\nfunction group(\n  options: Array<(typeof ALL_ITEMS)[number]>,\n): MultiSelectOptionGroup[] {\n  return options.reduce((acc, item) => {\n    const group = acc.find((g) => g.heading === item.group);\n    if (group) group.children.push(item);\n    else acc.push({ heading: item.group, children: [item] });\n\n    return acc;\n  }, [] as MultiSelectOptionGroup[]);\n}\n\nasync function search(keyword?: string) {\n  if (!keyword) return group(ALL_ITEMS);\n  const lowerKeyword = keyword.toLowerCase();\n  const filtered = ALL_ITEMS.filter((item) =>\n    item.label.toLowerCase().includes(lowerKeyword),\n  );\n\n  if (!filtered.length) {\n    return [\n      {\n        label: keyword,\n        value: keyword,\n      },\n    ];\n  }\n\n  return group(filtered);\n}\n\nexport default function MultiSelectDemo(): JSX.Element {\n  const [loading, setLoading] = useState(false);\n  const [options, setOptions] = useState<MultiSelectOption[]>(() =>\n    group(ALL_ITEMS),\n  );\n\n  const indexRef = useRef(0);\n\n  const handleSearch = async (keyword: string) => {\n    const index = ++indexRef.current;\n    setLoading(true);\n    const newOptions = await search(keyword);\n    if (indexRef.current === index) {\n      setOptions(newOptions);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <MultiSelect onSearch={(keyword) => handleSearch(keyword ?? \"\")}>\n      <MultiSelectTrigger className=\"w-96\">\n        <MultiSelectValue placeholder=\"Select stack\" />\n      </MultiSelectTrigger>\n      <MultiSelectContent>\n        <MultiSelectSearch placeholder=\"input any...\" />\n        <MultiSelectList>\n          {loading ? null : renderMultiSelectOptions(options)}\n          <MultiSelectEmpty>\n            {loading ? \"Loading...\" : \"No results found\"}\n          </MultiSelectEmpty>\n        </MultiSelectList>\n      </MultiSelectContent>\n    </MultiSelect>\n  );\n}\n"}]
  },
  "demos/ui/react/multi-select/limit-count": {
    component: React.lazy(() => import("@/registry/demos/ui/react/multi-select/limit-count")),
    code: [{"title":"limit-count.tsx","code":"\"use client\";\n\nimport {\n  MultiSelect,\n  MultiSelectContent,\n  MultiSelectGroup,\n  MultiSelectItem,\n  MultiSelectList,\n  MultiSelectTrigger,\n  MultiSelectValue,\n} from \"@/registry/ui/react/multi-select\";\n\nexport default function MultiSelectDemo(): JSX.Element {\n  return (\n    <MultiSelect defaultValue={[\"react\", \"next\", \"remix\"]} maxCount={3}>\n      <MultiSelectTrigger className=\"w-96\">\n        <MultiSelectValue placeholder=\"Select stack\" />\n      </MultiSelectTrigger>\n      <MultiSelectContent>\n        <MultiSelectList>\n          <MultiSelectGroup heading=\"React\">\n            <MultiSelectItem value=\"react\">React</MultiSelectItem>\n            <MultiSelectItem value=\"next\">Next.js</MultiSelectItem>\n            <MultiSelectItem value=\"remix\">Remix</MultiSelectItem>\n          </MultiSelectGroup>\n          <MultiSelectGroup heading=\"Vue\">\n            <MultiSelectItem value=\"vue\">Vue</MultiSelectItem>\n            <MultiSelectItem value=\"nuxt\">Nuxt</MultiSelectItem>\n          </MultiSelectGroup>\n          <MultiSelectGroup heading=\"Others\">\n            <MultiSelectItem value=\"angular\">Angular</MultiSelectItem>\n            <MultiSelectItem value=\"svelte\">Svelte</MultiSelectItem>\n          </MultiSelectGroup>\n        </MultiSelectList>\n      </MultiSelectContent>\n    </MultiSelect>\n  );\n}\n"}]
  },
  "demos/ui/react/multi-select/limit-item": {
    component: React.lazy(() => import("@/registry/demos/ui/react/multi-select/limit-item")),
    code: [{"title":"limit-item.tsx","code":"\"use client\";\n\nimport {\n  MultiSelect,\n  MultiSelectContent,\n  MultiSelectGroup,\n  MultiSelectItem,\n  MultiSelectList,\n  MultiSelectTrigger,\n  MultiSelectValue,\n} from \"@/registry/ui/react/multi-select\";\n\nexport default function MultiSelectDemo(): JSX.Element {\n  return (\n    <MultiSelect defaultValue={[\"long\", \"react\", \"angular\", \"vue\", \"remix\"]}>\n      <MultiSelectTrigger className=\"w-96\">\n        <MultiSelectValue\n          placeholder=\"Select stack\"\n          maxDisplay={3}\n          maxItemLength={5}\n        />\n      </MultiSelectTrigger>\n      <MultiSelectContent>\n        <MultiSelectList>\n          <MultiSelectGroup heading=\"React\">\n            <MultiSelectItem value=\"react\">React</MultiSelectItem>\n            <MultiSelectItem value=\"next\">Next.js</MultiSelectItem>\n            <MultiSelectItem value=\"remix\">Remix</MultiSelectItem>\n          </MultiSelectGroup>\n          <MultiSelectGroup heading=\"Vue\">\n            <MultiSelectItem value=\"vue\">Vue</MultiSelectItem>\n            <MultiSelectItem value=\"nuxt\">Nuxt</MultiSelectItem>\n          </MultiSelectGroup>\n          <MultiSelectGroup heading=\"Others\">\n            <MultiSelectItem value=\"angular\">Angular</MultiSelectItem>\n            <MultiSelectItem value=\"svelte\">Svelte</MultiSelectItem>\n            <MultiSelectItem value=\"long\">VeryVeryLongItem</MultiSelectItem>\n          </MultiSelectGroup>\n        </MultiSelectList>\n      </MultiSelectContent>\n    </MultiSelect>\n  );\n}\n"}]
  },
  "demos/ui/react/multi-select/form": {
    component: React.lazy(() => import("@/registry/demos/ui/react/multi-select/form")),
    code: [{"title":"form.tsx","code":"\"use client\";\n\nimport { useRef, useState } from \"react\";\nimport Link from \"next/link\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\n\nimport { Button } from \"@/registry/ui/react/button\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/registry/ui/react/form\";\nimport {\n  MultiSelect,\n  MultiSelectContent,\n  MultiSelectEmpty,\n  MultiSelectList,\n  type MultiSelectOption,\n  type MultiSelectOptionGroup,\n  MultiSelectSearch,\n  MultiSelectTrigger,\n  MultiSelectValue,\n  renderMultiSelectOptions,\n} from \"@/registry/ui/react/multi-select\";\nimport { toast } from \"@/registry/ui/react/use-toast\";\n// import { toast } from '~/components/ui/use-toast'\n\nconst ALL_ITEMS = [\n  { value: \"react\", label: \"React\", group: \"React\" },\n  { value: \"next\", label: \"Next.js\", group: \"React\" },\n  { value: \"remix\", label: \"Remix\", group: \"React\" },\n  { value: \"vue\", label: \"Vue\", group: \"Vue\" },\n  { value: \"nuxt\", label: \"Nuxt.js\", group: \"Vue\" },\n  { value: \"angular\", label: \"Angular\", group: \"Others\" },\n  { value: \"svelte\", label: \"Svelte\", group: \"Others\" },\n];\n\nfunction group(\n  options: Array<(typeof ALL_ITEMS)[number]>,\n): MultiSelectOptionGroup[] {\n  return options.reduce((acc, item) => {\n    const group = acc.find((g) => g.heading === item.group);\n    if (group) group.children.push(item);\n    else acc.push({ heading: item.group, children: [item] });\n\n    return acc;\n  }, [] as MultiSelectOptionGroup[]);\n}\n\nasync function search(keyword?: string) {\n  if (!keyword) return group(ALL_ITEMS);\n  const lowerKeyword = keyword.toLowerCase();\n  const filtered = ALL_ITEMS.filter((item) =>\n    item.label.toLowerCase().includes(lowerKeyword),\n  );\n\n  if (!filtered.length) {\n    return [\n      {\n        label: keyword,\n        value: keyword,\n      },\n    ];\n  }\n\n  return group(filtered);\n}\n\nconst FormSchema = z.object({\n  frameworks: z.array(z.string(), {\n    required_error: \"Please select at least one framework.\",\n  }),\n});\n\nexport default function MultiSelectDemo(): JSX.Element {\n  const form = useForm<z.infer<typeof FormSchema>>({\n    resolver: zodResolver(FormSchema),\n  });\n\n  const [loading, setLoading] = useState(false);\n  const [options, setOptions] = useState<MultiSelectOption[]>(() =>\n    group(ALL_ITEMS),\n  );\n\n  const indexRef = useRef(0);\n\n  const handleSearch = async (keyword: string) => {\n    const index = ++indexRef.current;\n    setLoading(true);\n    const newOptions = await search(keyword);\n    if (indexRef.current === index) {\n      setOptions(newOptions);\n      setLoading(false);\n    }\n  };\n\n  const onSubmit = (data: z.infer<typeof FormSchema>) => {\n    toast({\n      title: \"You submitted the following values:\",\n      description: (\n        <pre className=\"mt-2 w-[340px] rounded-md bg-slate-950 p-4\">\n          <code className=\"text-white\">{JSON.stringify(data, null, 2)}</code>\n        </pre>\n      ),\n    });\n  };\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"w-2/3 space-y-6\">\n        <FormField\n          control={form.control}\n          name=\"frameworks\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Frameworks</FormLabel>\n              <MultiSelect\n                onValueChange={field.onChange}\n                defaultValue={field.value}\n                onSearch={(keyword) => handleSearch(keyword ?? \"\")}\n              >\n                <FormControl>\n                  <MultiSelectTrigger className=\"w-96\">\n                    <MultiSelectValue placeholder=\"Select frameworks\" />\n                  </MultiSelectTrigger>\n                </FormControl>\n                <MultiSelectContent>\n                  <MultiSelectSearch />\n                  <MultiSelectList>\n                    {loading ? null : renderMultiSelectOptions(options)}\n                    <MultiSelectEmpty>\n                      {loading ? \"Loading...\" : \"No results found\"}\n                    </MultiSelectEmpty>\n                  </MultiSelectList>\n                </MultiSelectContent>\n              </MultiSelect>\n              <FormDescription>\n                You can manage frameworks in{\" \"}\n                <Link href=\"/examples/forms\">framework settings</Link>.\n              </FormDescription>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <Button type=\"submit\">Submit</Button>\n      </form>\n    </Form>\n  );\n}\n"}]
  },
  "demos/ui/react/navigation-menu/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/navigation-menu/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\n\nimport * as React from \"react\";\nimport Link from \"next/link\";\n\nimport { cn } from \"@/lib/utils\";\nimport {\n  NavigationMenu,\n  NavigationMenuContent,\n  NavigationMenuItem,\n  NavigationMenuLink,\n  NavigationMenuList,\n  NavigationMenuTrigger,\n  navigationMenuTriggerStyle,\n} from \"@/registry/ui/react/navigation-menu\";\nimport { X } from \"lucide-react\";\n\nconst components: { title: string; href: string; description: string }[] = [\n  {\n    title: \"Alert Dialog\",\n    href: \"/docs/primitives/alert-dialog\",\n    description:\n      \"A modal dialog that interrupts the user with important content and expects a response.\",\n  },\n  {\n    title: \"Hover Card\",\n    href: \"/docs/primitives/hover-card\",\n    description:\n      \"For sighted users to preview content available behind a link.\",\n  },\n  {\n    title: \"Progress\",\n    href: \"/docs/primitives/progress\",\n    description:\n      \"Displays an indicator showing the completion progress of a task, typically displayed as a progress bar.\",\n  },\n  {\n    title: \"Scroll-area\",\n    href: \"/docs/primitives/scroll-area\",\n    description: \"Visually or semantically separates content.\",\n  },\n  {\n    title: \"Tabs\",\n    href: \"/docs/primitives/tabs\",\n    description:\n      \"A set of layered sections of content—known as tab panels—that are displayed one at a time.\",\n  },\n  {\n    title: \"Tooltip\",\n    href: \"/docs/primitives/tooltip\",\n    description:\n      \"A popup that displays information related to an element when the element receives keyboard focus or the mouse hovers over it.\",\n  },\n];\n\nexport default function NavigationMenuDemo(): JSX.Element {\n  return (\n    <NavigationMenu>\n      <NavigationMenuList>\n        <NavigationMenuItem>\n          <NavigationMenuTrigger>Getting started</NavigationMenuTrigger>\n          <NavigationMenuContent>\n            <ul className=\"grid gap-3 p-6 md:w-[400px] lg:w-[500px] lg:grid-cols-[.75fr_1fr]\">\n              <li className=\"row-span-3\">\n                <NavigationMenuLink asChild>\n                  <a\n                    className=\"from-muted/50 to-muted flex size-full select-none flex-col justify-end rounded-md bg-gradient-to-b p-6 no-underline outline-none focus:shadow-md\"\n                    href=\"/\"\n                  >\n                    <X className=\"size-6\" />\n                    <div className=\"mb-2 mt-4 text-lg font-medium\">nyxb/ui</div>\n                    <p className=\"text-muted-foreground text-sm leading-tight\">\n                      Beautifully designed components that you can copy and\n                      paste into your apps. Accessible. Customizable. Open\n                      Source.\n                    </p>\n                  </a>\n                </NavigationMenuLink>\n              </li>\n              <ListItem href=\"/docs\" title=\"Introduction\">\n                Re-usable components built using Radix UI and Tailwind CSS.\n              </ListItem>\n              <ListItem href=\"/docs/installation\" title=\"Installation\">\n                How to install dependencies and structure your app.\n              </ListItem>\n              <ListItem href=\"/docs/primitives/typography\" title=\"Typography\">\n                Styles for headings, paragraphs, lists...etc\n              </ListItem>\n            </ul>\n          </NavigationMenuContent>\n        </NavigationMenuItem>\n        <NavigationMenuItem>\n          <NavigationMenuTrigger>Components</NavigationMenuTrigger>\n          <NavigationMenuContent>\n            <ul className=\"grid w-[400px] gap-3 p-4 md:w-[500px] md:grid-cols-2 lg:w-[600px] \">\n              {components.map((component) => (\n                <ListItem\n                  key={component.title}\n                  title={component.title}\n                  href={component.href}\n                >\n                  {component.description}\n                </ListItem>\n              ))}\n            </ul>\n          </NavigationMenuContent>\n        </NavigationMenuItem>\n        <NavigationMenuItem>\n          <Link href=\"/docs\" legacyBehavior passHref>\n            <NavigationMenuLink className={navigationMenuTriggerStyle()}>\n              Documentation\n            </NavigationMenuLink>\n          </Link>\n        </NavigationMenuItem>\n      </NavigationMenuList>\n    </NavigationMenu>\n  );\n}\n\nconst ListItem = React.forwardRef<\n  React.ElementRef<\"a\">,\n  React.ComponentPropsWithoutRef<\"a\">\n>(({ className, title, children, ...props }, ref) => {\n  return (\n    <li>\n      <NavigationMenuLink asChild>\n        <a\n          ref={ref}\n          className={cn(\n            \"hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground block select-none space-y-1 rounded-md p-3 leading-none no-underline outline-none transition-colors\",\n            className,\n          )}\n          {...props}\n        >\n          <div className=\"text-sm font-medium leading-none\">{title}</div>\n          <p className=\"text-muted-foreground line-clamp-2 text-sm leading-snug\">\n            {children}\n          </p>\n        </a>\n      </NavigationMenuLink>\n    </li>\n  );\n});\nListItem.displayName = \"ListItem\";\n"}]
  },
  "demos/ui/react/pagination/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/pagination/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\n\nimport { Paginations } from \"@/registry/ui/react/pagination\";\nimport React from \"react\";\n\nconst generateFakeData = (numItems: number) => {\n  return Array.from({ length: numItems }, (_, index) => ({\n    id: index + 1,\n    name: `Item ${index + 1}`,\n  }));\n};\n\nconst ITEMS_PER_PAGE = 10;\n\nexport default function PaginationDemo(): JSX.Element {\n  const data = generateFakeData(100);\n  const [currentPage, setCurrentPage] = React.useState(1);\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <Paginations\n      totalPages={Math.ceil(data.length / ITEMS_PER_PAGE)}\n      onChange={handlePageChange}\n    />\n  );\n}\n"}]
  },
  "demos/ui/react/popover/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/popover/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\n\nimport { Label } from \"@/registry/ui/react/label\";\nimport { Button } from \"@/registry/ui/react/button\";\nimport { TextField } from \"@/registry/ui/react/text-field\";\nimport { Popover } from \"@/registry/ui/react/popover\";\n\nexport default function PopoverDemo(): JSX.Element {\n  const Content = () => (\n    <div className=\"grid gap-4\">\n      <div className=\"space-y-2\">\n        <h4 className=\"font-medium leading-none\">Dimensions</h4>\n        <p className=\"text-muted-foreground text-sm\">\n          Set the dimensions for the layer.\n        </p>\n      </div>\n      <div className=\"grid gap-2\">\n        <div className=\"grid grid-cols-3 items-center gap-4\">\n          <Label htmlFor=\"width\">Width</Label>\n          <TextField\n            id=\"width\"\n            defaultValue=\"100%\"\n            className=\"col-span-2 h-8\"\n          />\n        </div>\n        <div className=\"grid grid-cols-3 items-center gap-4\">\n          <Label htmlFor=\"maxWidth\">Max. width</Label>\n          <TextField\n            id=\"maxWidth\"\n            defaultValue=\"300px\"\n            className=\"col-span-2 h-8\"\n          />\n        </div>\n        <div className=\"grid grid-cols-3 items-center gap-4\">\n          <Label htmlFor=\"height\">Height</Label>\n          <TextField\n            id=\"height\"\n            defaultValue=\"25px\"\n            className=\"col-span-2 h-8\"\n          />\n        </div>\n        <div className=\"grid grid-cols-3 items-center gap-4\">\n          <Label htmlFor=\"maxHeight\">Max. height</Label>\n          <TextField\n            id=\"maxHeight\"\n            defaultValue=\"none\"\n            className=\"col-span-2 h-8\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <Popover content={<Content />} className=\"w-80\">\n      <Button>Open popover</Button>\n    </Popover>\n  );\n}\n"}]
  },
  "demos/ui/react/popover/placement": {
    component: React.lazy(() => import("@/registry/demos/ui/react/popover/placement")),
    code: [{"title":"placement.tsx","code":"\"use client\";\n\nimport { Label } from \"@/registry/ui/react/label\";\nimport { Button } from \"@/registry/ui/react/button\";\nimport { TextField } from \"@/registry/ui/react/text-field\";\nimport { Popover } from \"@/registry/ui/react/popover\";\n\nconst placements = [\"top\", \"right\", \"left\", \"bottom\"] as const;\n\nexport default function PopoverDemo(): JSX.Element {\n  const Content = () => (\n    <div className=\"grid gap-4\">\n      <div className=\"space-y-2\">\n        <h4 className=\"font-medium leading-none\">Dimensions</h4>\n        <p className=\"text-muted-foreground text-sm\">\n          Set the dimensions for the layer.\n        </p>\n      </div>\n      <div className=\"grid gap-2\">\n        <div className=\"grid grid-cols-3 items-center gap-4\">\n          <Label htmlFor=\"width\">Width</Label>\n          <TextField\n            id=\"width\"\n            defaultValue=\"100%\"\n            className=\"col-span-2 h-8\"\n          />\n        </div>\n        <div className=\"grid grid-cols-3 items-center gap-4\">\n          <Label htmlFor=\"maxWidth\">Max. width</Label>\n          <TextField\n            id=\"maxWidth\"\n            defaultValue=\"300px\"\n            className=\"col-span-2 h-8\"\n          />\n        </div>\n        <div className=\"grid grid-cols-3 items-center gap-4\">\n          <Label htmlFor=\"height\">Height</Label>\n          <TextField\n            id=\"height\"\n            defaultValue=\"25px\"\n            className=\"col-span-2 h-8\"\n          />\n        </div>\n        <div className=\"grid grid-cols-3 items-center gap-4\">\n          <Label htmlFor=\"maxHeight\">Max. height</Label>\n          <TextField\n            id=\"maxHeight\"\n            defaultValue=\"none\"\n            className=\"col-span-2 h-8\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"grid grid-cols-2 gap-2\">\n      {placements.map((placement) => (\n        <Popover\n          key={placement}\n          placement={placement}\n          content={<Content />}\n          className=\"w-80\"\n        >\n          <Button>{placement}</Button>\n        </Popover>\n      ))}\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/popover/offset": {
    component: React.lazy(() => import("@/registry/demos/ui/react/popover/offset")),
    code: [{"title":"offset.tsx","code":"\"use client\";\n\nimport { Label } from \"@/registry/ui/react/label\";\nimport { Button } from \"@/registry/ui/react/button\";\nimport { TextField } from \"@/registry/ui/react/text-field\";\nimport { Popover } from \"@/registry/ui/react/popover\";\n\nexport default function PopoverDemo(): JSX.Element {\n  const Content = () => (\n    <div className=\"grid gap-4\">\n      <div className=\"space-y-2\">\n        <h4 className=\"font-medium leading-none\">Dimensions</h4>\n        <p className=\"text-muted-foreground text-sm\">\n          Set the dimensions for the layer.\n        </p>\n      </div>\n      <div className=\"grid gap-2\">\n        <div className=\"grid grid-cols-3 items-center gap-4\">\n          <Label htmlFor=\"width\">Width</Label>\n          <TextField\n            id=\"width\"\n            defaultValue=\"100%\"\n            className=\"col-span-2 h-8\"\n          />\n        </div>\n        <div className=\"grid grid-cols-3 items-center gap-4\">\n          <Label htmlFor=\"maxWidth\">Max. width</Label>\n          <TextField\n            id=\"maxWidth\"\n            defaultValue=\"300px\"\n            className=\"col-span-2 h-8\"\n          />\n        </div>\n        <div className=\"grid grid-cols-3 items-center gap-4\">\n          <Label htmlFor=\"height\">Height</Label>\n          <TextField\n            id=\"height\"\n            defaultValue=\"25px\"\n            className=\"col-span-2 h-8\"\n          />\n        </div>\n        <div className=\"grid grid-cols-3 items-center gap-4\">\n          <Label htmlFor=\"maxHeight\">Max. height</Label>\n          <TextField\n            id=\"maxHeight\"\n            defaultValue=\"none\"\n            className=\"col-span-2 h-8\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <Popover content={<Content />} className=\"w-80\" offset={20}>\n      <Button>Open popover</Button>\n    </Popover>\n  );\n}\n"}]
  },
  "demos/ui/react/popover/arrow": {
    component: React.lazy(() => import("@/registry/demos/ui/react/popover/arrow")),
    code: [{"title":"arrow.tsx","code":"\"use client\";\n\nimport { Label } from \"@/registry/ui/react/label\";\nimport { Button } from \"@/registry/ui/react/button\";\nimport { TextField } from \"@/registry/ui/react/text-field\";\nimport { Popover } from \"@/registry/ui/react/popover\";\n\nexport default function PopoverDemo(): JSX.Element {\n  const Content = () => (\n    <div className=\"grid gap-4\">\n      <div className=\"space-y-2\">\n        <h4 className=\"font-medium leading-none\">Dimensions</h4>\n        <p className=\"text-muted-foreground text-sm\">\n          Set the dimensions for the layer.\n        </p>\n      </div>\n      <div className=\"grid gap-2\">\n        <div className=\"grid grid-cols-3 items-center gap-4\">\n          <Label htmlFor=\"width\">Width</Label>\n          <TextField\n            id=\"width\"\n            defaultValue=\"100%\"\n            className=\"col-span-2 h-8\"\n          />\n        </div>\n        <div className=\"grid grid-cols-3 items-center gap-4\">\n          <Label htmlFor=\"maxWidth\">Max. width</Label>\n          <TextField\n            id=\"maxWidth\"\n            defaultValue=\"300px\"\n            className=\"col-span-2 h-8\"\n          />\n        </div>\n        <div className=\"grid grid-cols-3 items-center gap-4\">\n          <Label htmlFor=\"height\">Height</Label>\n          <TextField\n            id=\"height\"\n            defaultValue=\"25px\"\n            className=\"col-span-2 h-8\"\n          />\n        </div>\n        <div className=\"grid grid-cols-3 items-center gap-4\">\n          <Label htmlFor=\"maxHeight\">Max. height</Label>\n          <TextField\n            id=\"maxHeight\"\n            defaultValue=\"none\"\n            className=\"col-span-2 h-8\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <Popover content={<Content />} className=\"w-80\" arrow>\n      <Button>Open popover</Button>\n    </Popover>\n  );\n}\n"}]
  },
  "demos/ui/react/popover/composition": {
    component: React.lazy(() => import("@/registry/demos/ui/react/popover/composition")),
    code: [{"title":"composition.tsx","code":"\"use client\";\n\nimport { Label } from \"@/registry/ui/react/label\";\nimport { Button } from \"@/registry/ui/react/button\";\nimport { TextField } from \"@/registry/ui/react/text-field\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/registry/ui/react/popover\";\n\nexport default function PopoverDemo(): JSX.Element {\n  return (\n    <Popover>\n      <PopoverTrigger asChild>\n        <Button>Open popover</Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-80\">\n        <div className=\"grid gap-4\">\n          <div className=\"space-y-2\">\n            <h4 className=\"font-medium leading-none\">Dimensions</h4>\n            <p className=\"text-muted-foreground text-sm\">\n              Set the dimensions for the layer.\n            </p>\n          </div>\n          <div className=\"grid gap-2\">\n            <div className=\"grid grid-cols-3 items-center gap-4\">\n              <Label htmlFor=\"width\">Width</Label>\n              <TextField\n                id=\"width\"\n                defaultValue=\"100%\"\n                className=\"col-span-2 h-8\"\n              />\n            </div>\n            <div className=\"grid grid-cols-3 items-center gap-4\">\n              <Label htmlFor=\"maxWidth\">Max. width</Label>\n              <TextField\n                id=\"maxWidth\"\n                defaultValue=\"300px\"\n                className=\"col-span-2 h-8\"\n              />\n            </div>\n            <div className=\"grid grid-cols-3 items-center gap-4\">\n              <Label htmlFor=\"height\">Height</Label>\n              <TextField\n                id=\"height\"\n                defaultValue=\"25px\"\n                className=\"col-span-2 h-8\"\n              />\n            </div>\n            <div className=\"grid grid-cols-3 items-center gap-4\">\n              <Label htmlFor=\"maxHeight\">Max. height</Label>\n              <TextField\n                id=\"maxHeight\"\n                defaultValue=\"none\"\n                className=\"col-span-2 h-8\"\n              />\n            </div>\n          </div>\n        </div>\n      </PopoverContent>\n    </Popover>\n  );\n}\n"}]
  },
  "demos/ui/react/radio-group/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/radio-group/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\n\nimport { RadioGroup, RadioGroupItem } from \"@/registry/ui/react/radio-group\";\nimport { Label } from \"@/registry/ui/react/label\";\n\nexport default function RadioGroupDemo(): JSX.Element {\n  return (\n    <RadioGroup defaultValue=\"comfortable\">\n      <div className=\"flex items-center space-x-2\">\n        <RadioGroupItem value=\"default\" id=\"r1\" />\n        <Label htmlFor=\"r1\">Default</Label>\n      </div>\n      <div className=\"flex items-center space-x-2\">\n        <RadioGroupItem value=\"comfortable\" id=\"r2\" />\n        <Label htmlFor=\"r2\">Comfortable</Label>\n      </div>\n      <div className=\"flex items-center space-x-2\">\n        <RadioGroupItem value=\"compact\" id=\"r3\" />\n        <Label htmlFor=\"r3\">Compact</Label>\n      </div>\n    </RadioGroup>\n  );\n}\n"}]
  },
  "demos/ui/react/radio-group/variant": {
    component: React.lazy(() => import("@/registry/demos/ui/react/radio-group/variant")),
    code: [{"title":"variant.tsx","code":"\"use client\";\n\nimport { RadioGroup, RadioGroupItem } from \"@/registry/ui/react/radio-group\";\nimport { Label } from \"@/registry/ui/react/label\";\n\nexport default function RadioGroupDemo(): JSX.Element {\n  return (\n    <RadioGroup defaultValue=\"default\">\n      <div className=\"flex items-center space-x-2\">\n        <RadioGroupItem value=\"default\" id=\"r1\" variant=\"neutral\" />\n        <Label htmlFor=\"r1\">Neutral</Label>\n      </div>\n      <div className=\"flex items-center space-x-2\">\n        <RadioGroupItem value=\"primary\" id=\"r2\" variant=\"primary\" />\n        <Label htmlFor=\"r2\">Primary</Label>\n      </div>\n      <div className=\"flex items-center space-x-2\">\n        <RadioGroupItem value=\"secondary\" id=\"r3\" variant=\"secondary\" />\n        <Label htmlFor=\"r3\">Secondary</Label>\n      </div>\n    </RadioGroup>\n  );\n}\n"}]
  },
  "demos/ui/react/radio-group/size": {
    component: React.lazy(() => import("@/registry/demos/ui/react/radio-group/size")),
    code: [{"title":"size.tsx","code":"\"use client\";\n\nimport { RadioGroup, RadioGroupItem } from \"@/registry/ui/react/radio-group\";\nimport { Label } from \"@/registry/ui/react/label\";\n\nexport default function RadioGroupDemo(): JSX.Element {\n  return (\n    <RadioGroup defaultValue=\"small\">\n      <div className=\"flex items-center space-x-2\">\n        <RadioGroupItem value=\"small\" id=\"r1\" size=\"sm\" />\n        <Label htmlFor=\"r1\">Small</Label>\n      </div>\n      <div className=\"flex items-center space-x-2\">\n        <RadioGroupItem value=\"medium\" id=\"r2\" size=\"md\" />\n        <Label htmlFor=\"r2\">Medium</Label>\n      </div>\n      <div className=\"flex items-center space-x-2\">\n        <RadioGroupItem value=\"large\" id=\"r3\" size=\"lg\" />\n        <Label htmlFor=\"r3\">Large</Label>\n      </div>\n    </RadioGroup>\n  );\n}\n"}]
  },
  "demos/ui/react/radio-group/shape": {
    component: React.lazy(() => import("@/registry/demos/ui/react/radio-group/shape")),
    code: [{"title":"shape.tsx","code":"\"use client\";\n\nimport { RadioGroup, RadioGroupItem } from \"@/registry/ui/react/radio-group\";\nimport { Label } from \"@/registry/ui/react/label\";\n\nexport default function RadioGroupDemo(): JSX.Element {\n  return (\n    <RadioGroup defaultValue=\"circle\">\n      <div className=\"flex items-center space-x-2\">\n        <RadioGroupItem value=\"rectangle\" id=\"r1\" shape=\"rectangle\" />\n        <Label htmlFor=\"r1\">Rectangle</Label>\n      </div>\n      <div className=\"flex items-center space-x-2\">\n        <RadioGroupItem value=\"square\" id=\"r2\" shape=\"square\" />\n        <Label htmlFor=\"r2\">Square</Label>\n      </div>\n      <div className=\"flex items-center space-x-2\">\n        <RadioGroupItem value=\"circle\" id=\"r3\" shape=\"circle\" />\n        <Label htmlFor=\"r3\">Circle</Label>\n      </div>\n    </RadioGroup>\n  );\n}\n"}]
  },
  "demos/ui/react/radio-group/disabled": {
    component: React.lazy(() => import("@/registry/demos/ui/react/radio-group/disabled")),
    code: [{"title":"disabled.tsx","code":"\"use client\";\n\nimport { RadioGroup, RadioGroupItem } from \"@/registry/ui/react/radio-group\";\nimport { Label } from \"@/registry/ui/react/label\";\n\nexport default function RadioGroupDemo(): JSX.Element {\n  return (\n    <RadioGroup defaultValue=\"default\">\n      <div className=\"flex items-center space-x-2\">\n        <RadioGroupItem value=\"default\" id=\"r1\" disabled />\n        <Label htmlFor=\"r1\">Default (disabled)</Label>\n      </div>\n      <div className=\"flex items-center space-x-2\">\n        <RadioGroupItem value=\"comfortable\" id=\"r2\" />\n        <Label htmlFor=\"r2\">Comfortable</Label>\n      </div>\n    </RadioGroup>\n  );\n}\n"}]
  },
  "demos/ui/react/resizable/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/resizable/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\n\nimport {\n  ResizableHandle,\n  ResizablePanel,\n  ResizablePanelGroup,\n} from \"@/registry/ui/react/resizable\";\n\nexport default function ResizableDemo(): JSX.Element {\n  return (\n    <ResizablePanelGroup\n      direction=\"horizontal\"\n      className=\"max-w-md rounded-lg border\"\n    >\n      <ResizablePanel defaultSize={50}>\n        <div className=\"flex h-[200px] items-center justify-center p-6\">\n          <span className=\"font-semibold\">One</span>\n        </div>\n      </ResizablePanel>\n      <ResizableHandle />\n      <ResizablePanel defaultSize={50}>\n        <ResizablePanelGroup direction=\"vertical\">\n          <ResizablePanel defaultSize={25}>\n            <div className=\"flex h-full items-center justify-center p-6\">\n              <span className=\"font-semibold\">Two</span>\n            </div>\n          </ResizablePanel>\n          <ResizableHandle />\n          <ResizablePanel defaultSize={75}>\n            <div className=\"flex h-full items-center justify-center p-6\">\n              <span className=\"font-semibold\">Three</span>\n            </div>\n          </ResizablePanel>\n        </ResizablePanelGroup>\n      </ResizablePanel>\n    </ResizablePanelGroup>\n  );\n}\n"}]
  },
  "demos/ui/react/resizable/direction": {
    component: React.lazy(() => import("@/registry/demos/ui/react/resizable/direction")),
    code: [{"title":"direction.tsx","code":"import {\n  ResizableHandle,\n  ResizablePanel,\n  ResizablePanelGroup,\n} from \"@/registry/ui/react/resizable\";\n\nexport default function ResizableDemo(): JSX.Element {\n  return (\n    <ResizablePanelGroup\n      direction=\"vertical\"\n      className=\"min-h-[200px] max-w-md rounded-lg border\"\n    >\n      <ResizablePanel defaultSize={25}>\n        <div className=\"flex h-full items-center justify-center p-6\">\n          <span className=\"font-semibold\">Header</span>\n        </div>\n      </ResizablePanel>\n      <ResizableHandle />\n      <ResizablePanel defaultSize={75}>\n        <div className=\"flex h-full items-center justify-center p-6\">\n          <span className=\"font-semibold\">Content</span>\n        </div>\n      </ResizablePanel>\n    </ResizablePanelGroup>\n  );\n}\n"}]
  },
  "demos/ui/react/resizable/handle": {
    component: React.lazy(() => import("@/registry/demos/ui/react/resizable/handle")),
    code: [{"title":"handle.tsx","code":"import {\n  ResizableHandle,\n  ResizablePanel,\n  ResizablePanelGroup,\n} from \"@/registry/ui/react/resizable\";\n\nexport default function ResizableDemo(): JSX.Element {\n  return (\n    <ResizablePanelGroup\n      direction=\"horizontal\"\n      className=\"min-h-[200px] max-w-md rounded-lg border\"\n    >\n      <ResizablePanel defaultSize={25}>\n        <div className=\"flex h-full items-center justify-center p-6\">\n          <span className=\"font-semibold\">Sidebar</span>\n        </div>\n      </ResizablePanel>\n      <ResizableHandle withHandle />\n      <ResizablePanel defaultSize={75}>\n        <div className=\"flex h-full items-center justify-center p-6\">\n          <span className=\"font-semibold\">Content</span>\n        </div>\n      </ResizablePanel>\n    </ResizablePanelGroup>\n  );\n}\n"}]
  },
  "demos/ui/react/scroll-area/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/scroll-area/default")),
    code: [{"title":"default.tsx","code":"import { ScrollArea } from \"@/registry/ui/react/scroll-area\";\nimport * as React from \"react\";\n\nexport default function ScrollAreaDemo(): JSX.Element {\n  return (\n    <div className=\"rounded-md border p-6\">\n      <ScrollArea className=\"h-72 w-full max-w-sm\" type=\"always\">\n        <div className=\"space-y-4 p-4 pr-8\">\n          <h4 className=\"text-md font-bold\">\n            Principles of the typographic craft\n          </h4>\n          <p>\n            Three fundamental aspects of typography are legibility, readability,\n            and aesthetics. Although in a non-technical sense “legible” and\n            “readable” are often used synonymously, typographically they are\n            separate but related concepts.\n          </p>\n          <p>\n            Legibility describes how easily individual characters can be\n            distinguished from one another. It is described by Walter Tracy as\n            “the quality of being decipherable and recognisable”. For instance,\n            if a “b” and an “h”, or a “3” and an “8”, are difficult to\n            distinguish at small sizes, this is a problem of legibility.\n          </p>\n          <p>\n            Typographers are concerned with legibility insofar as it is their\n            job to select the correct font to use. Brush Script is an example of\n            a font containing many characters that might be difficult to\n            distinguish. The selection of cases influences the legibility of\n            typography because using only uppercase letters (all-caps) reduces\n            legibility.\n          </p>\n        </div>\n      </ScrollArea>\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/scroll-area/sizes": {
    component: React.lazy(() => import("@/registry/demos/ui/react/scroll-area/sizes")),
    code: [{"title":"sizes.tsx","code":"import { ScrollArea } from \"@/registry/ui/react/scroll-area\";\nimport * as React from \"react\";\n\nconst sizes = [\"sm\", \"md\", \"lg\"] as const;\n\nexport default function ScrollAreaDemo(): JSX.Element {\n  return (\n    <div className=\"grid grid-cols-3 gap-10\">\n      {sizes.map((size) => (\n        <div key={size} className=\"rounded-md border p-3\">\n          <ScrollArea size={size} className=\"h-72\" type=\"always\">\n            <div className=\"space-y-4 p-4 pr-8\">\n              <h4 className=\"text-md font-bold\">\n                Principles of the typographic craft\n              </h4>\n              <p>\n                Three fundamental aspects of typography are legibility,\n                readability, and aesthetics. Although in a non-technical sense\n                “legible” and “readable” are often used synonymously,\n                typographically they are separate but related concepts.\n              </p>\n              <p>\n                Legibility describes how easily individual characters can be\n                distinguished from one another. It is described by Walter Tracy\n                as “the quality of being decipherable and recognisable”. For\n                instance, if a “b” and an “h”, or a “3” and an “8”, are\n                difficult to distinguish at small sizes, this is a problem of\n                legibility.\n              </p>\n              <p>\n                Typographers are concerned with legibility insofar as it is\n                their job to select the correct font to use. Brush Script is an\n                example of a font containing many characters that might be\n                difficult to distinguish. The selection of cases influences the\n                legibility of typography because using only uppercase letters\n                (all-caps) reduces legibility.\n              </p>\n            </div>\n          </ScrollArea>\n        </div>\n      ))}\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/scroll-area/variants": {
    component: React.lazy(() => import("@/registry/demos/ui/react/scroll-area/variants")),
    code: [{"title":"variants.tsx","code":"import { ScrollArea } from \"@/registry/ui/react/scroll-area\";\nimport * as React from \"react\";\n\nconst variants = [\"default\", \"primary\", \"secondary\", \"transparent\"] as const;\n\nexport default function ScrollAreaDemo(): JSX.Element {\n  return (\n    <div className=\"grid grid-cols-3 gap-10\">\n      {variants.map((variant) => (\n        <div key={variant} className=\"rounded-md border p-3\">\n          <ScrollArea variant={variant} className=\"h-72\" type=\"always\">\n            <div className=\"space-y-4 p-4 pr-8\">\n              <h4 className=\"text-md font-bold\">\n                Principles of the typographic craft\n              </h4>\n              <p>\n                Three fundamental aspects of typography are legibility,\n                readability, and aesthetics. Although in a non-technical sense\n                “legible” and “readable” are often used synonymously,\n                typographically they are separate but related concepts.\n              </p>\n              <p>\n                Legibility describes how easily individual characters can be\n                distinguished from one another. It is described by Walter Tracy\n                as “the quality of being decipherable and recognisable”. For\n                instance, if a “b” and an “h”, or a “3” and an “8”, are\n                difficult to distinguish at small sizes, this is a problem of\n                legibility.\n              </p>\n              <p>\n                Typographers are concerned with legibility insofar as it is\n                their job to select the correct font to use. Brush Script is an\n                example of a font containing many characters that might be\n                difficult to distinguish. The selection of cases influences the\n                legibility of typography because using only uppercase letters\n                (all-caps) reduces legibility.\n              </p>\n            </div>\n          </ScrollArea>\n        </div>\n      ))}\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/scroll-area/scrollbars": {
    component: React.lazy(() => import("@/registry/demos/ui/react/scroll-area/scrollbars")),
    code: [{"title":"scrollbars.tsx","code":"\"use client\";\n\nimport { ScrollArea, ScrollAreaProps } from \"@/registry/ui/react/scroll-area\";\nimport * as React from \"react\";\nimport { RadioGroup, RadioGroupItem } from \"@/registry/ui/react/radio-group\";\nimport { Label } from \"@/registry/ui/react/label\";\n\nexport default function ScrollAreaDemo(): JSX.Element {\n  const [scrollbars, setScrollbars] = React.useState(\"vertical\");\n  return (\n    <div className=\"flex items-center gap-10\">\n      <div className=\"rounded-md border p-6\">\n        <ScrollArea\n          scrollbars={scrollbars as ScrollAreaProps[\"scrollbars\"]}\n          className=\"h-44 w-full max-w-sm\"\n          type=\"always\"\n        >\n          <div className=\"flex w-[500px] items-start gap-4\">\n            <div className=\"space-y-4 p-4 pr-8\">\n              <h4 className=\"text-md font-bold\">\n                Principles of the typographic craft\n              </h4>\n              <p>\n                Three fundamental aspects of typography are legibility,\n                readability, and aesthetics. Although in a non-technical sense\n                “legible” and “readable” are often used synonymously,\n                typographically they are separate but related concepts.\n              </p>\n              <p>\n                Legibility describes how easily individual characters can be\n                distinguished from one another. It is described by Walter Tracy\n                as “the quality of being decipherable and recognisable”. For\n                instance, if a “b” and an “h”, or a “3” and an “8”, are\n                difficult to distinguish at small sizes, this is a problem of\n                legibility.\n              </p>\n              <p>\n                Typographers are concerned with legibility insofar as it is\n                their job to select the correct font to use. Brush Script is an\n                example of a font containing many characters that might be\n                difficult to distinguish. The selection of cases influences the\n                legibility of typography because using only uppercase letters\n                (all-caps) reduces legibility.\n              </p>\n            </div>\n            <div className=\"space-y-4 p-4 pr-8\">\n              <h4 className=\"text-md font-bold\">\n                Principles of the typographic craft\n              </h4>\n              <p>\n                Three fundamental aspects of typography are legibility,\n                readability, and aesthetics. Although in a non-technical sense\n                “legible” and “readable” are often used synonymously,\n                typographically they are separate but related concepts.\n              </p>\n              <p>\n                Legibility describes how easily individual characters can be\n                distinguished from one another. It is described by Walter Tracy\n                as “the quality of being decipherable and recognisable”. For\n                instance, if a “b” and an “h”, or a “3” and an “8”, are\n                difficult to distinguish at small sizes, this is a problem of\n                legibility.\n              </p>\n              <p>\n                Typographers are concerned with legibility insofar as it is\n                their job to select the correct font to use. Brush Script is an\n                example of a font containing many characters that might be\n                difficult to distinguish. The selection of cases influences the\n                legibility of typography because using only uppercase letters\n                (all-caps) reduces legibility.\n              </p>\n            </div>\n          </div>\n        </ScrollArea>\n      </div>\n\n      <RadioGroup\n        defaultValue=\"vertical\"\n        value={scrollbars}\n        onValueChange={setScrollbars}\n      >\n        <Label className=\"mb-2\">Scrollbars</Label>\n        <div className=\"flex items-center space-x-2\">\n          <RadioGroupItem value=\"vertical\" id=\"r1\" />\n          <Label htmlFor=\"r1\">Vertical</Label>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <RadioGroupItem value=\"horizontal\" id=\"r2\" />\n          <Label htmlFor=\"r2\">Horizontal</Label>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <RadioGroupItem value=\"both\" id=\"r3\" />\n          <Label htmlFor=\"r3\">Both</Label>\n        </div>\n      </RadioGroup>\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/select/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/select/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\n\nimport * as React from \"react\";\n\nimport { Select } from \"@/registry/ui/react/select\";\n\nexport default function SelectDemo(): JSX.Element {\n  return (\n    <Select\n      className=\"w-[180px]\"\n      label=\"Fruits\"\n      options={[\n        { label: \"Apple\", value: \"apple\" },\n        { label: \"Banana\", value: \"banana\" },\n        { label: \"Blueberry\", value: \"blueberry\" },\n        { label: \"Grapes\", value: \"grapes\" },\n        { label: \"Pineapple\", value: \"pineapple\" },\n      ]}\n    >\n      Select a fruit\n    </Select>\n  );\n}\n"}]
  },
  "demos/ui/react/select/variant": {
    component: React.lazy(() => import("@/registry/demos/ui/react/select/variant")),
    code: [{"title":"variant.tsx","code":"\"use client\";\n\nimport { Select } from \"@/registry/ui/react/select\";\n\nconst variants = [\"primary\", \"secondary\", \"outline\", \"neutral\"] as const;\n\nexport default function SelectDemo(): JSX.Element {\n  return (\n    <div className=\"grid grid-cols-2 gap-2\">\n      {variants.map((variant) => (\n        <Select\n          className=\"w-[180px]\"\n          label=\"Fruits\"\n          key={variant}\n          options={[\n            { label: \"Apple\", value: \"apple\" },\n            { label: \"Banana\", value: \"banana\" },\n            { label: \"Blueberry\", value: \"blueberry\" },\n            { label: \"Grapes\", value: \"grapes\" },\n            { label: \"Pineapple\", value: \"pineapple\" },\n          ]}\n          variant={variant}\n        >\n          {variant}\n        </Select>\n      ))}\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/select/size": {
    component: React.lazy(() => import("@/registry/demos/ui/react/select/size")),
    code: [{"title":"size.tsx","code":"\"use client\";\n\nimport { Select } from \"@/registry/ui/react/select\";\n\nconst sizes = [\"sm\", \"md\", \"lg\"] as const;\n\nexport default function SelectDemo(): JSX.Element {\n  return (\n    <div className=\"grid grid-cols-2 gap-2\">\n      {sizes.map((size) => (\n        <Select\n          className=\"w-[180px]\"\n          label=\"Fruits\"\n          key={size}\n          options={[\n            { label: \"Apple\", value: \"apple\" },\n            { label: \"Banana\", value: \"banana\" },\n            { label: \"Blueberry\", value: \"blueberry\" },\n            { label: \"Grapes\", value: \"grapes\" },\n            { label: \"Pineapple\", value: \"pineapple\" },\n          ]}\n          size={size}\n        >\n          {size}\n        </Select>\n      ))}\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/select/shape": {
    component: React.lazy(() => import("@/registry/demos/ui/react/select/shape")),
    code: [{"title":"shape.tsx","code":"\"use client\";\n\nimport { Select } from \"@/registry/ui/react/select\";\n\nconst shapes = [\"rounded\", \"square\", \"circle\"] as const;\n\nexport default function SelectDemo(): JSX.Element {\n  return (\n    <div className=\"grid grid-cols-2 gap-2\">\n      {shapes.map((shape) => (\n        <Select\n          className=\"w-[180px]\"\n          label=\"Fruits\"\n          key={shape}\n          options={[\n            { label: \"Apple\", value: \"apple\" },\n            { label: \"Banana\", value: \"banana\" },\n            { label: \"Blueberry\", value: \"blueberry\" },\n            { label: \"Grapes\", value: \"grapes\" },\n            { label: \"Pineapple\", value: \"pineapple\" },\n          ]}\n          shape={shape}\n        >\n          {shape}\n        </Select>\n      ))}\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/select/getData": {
    component: React.lazy(() => import("@/registry/demos/ui/react/select/getData")),
    code: [{"title":"getData.tsx","code":"\"use client\";\n\nimport * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Select } from \"@/registry/ui/react/select\";\n\nexport default function SelectDemo(): JSX.Element {\n  const [options, setOptions] = useState<{ label: string; value: string }[]>(\n    [],\n  );\n\n  const fetchFruitsData = async () => {\n    const fruitsData = [\n      { name: \"Apple\", id: 1 },\n      { name: \"Banana\", id: 2 },\n      { name: \"Blueberry\", id: 3 },\n      { name: \"Grapes\", id: 4 },\n      { name: \"Pineapple\", id: 5 },\n    ];\n\n    const formattedOptions = fruitsData.map((fruit) => ({\n      label: fruit.name,\n      value: fruit.id.toString(),\n    }));\n\n    setOptions(formattedOptions);\n  };\n\n  useEffect(() => {\n    fetchFruitsData();\n  }, []);\n\n  return (\n    <Select className=\"w-[180px]\" label=\"Fruits\" options={options}>\n      Select a fruit\n    </Select>\n  );\n}\n"}]
  },
  "demos/ui/react/select/composition": {
    component: React.lazy(() => import("@/registry/demos/ui/react/select/composition")),
    code: [{"title":"composition.tsx","code":"\"use client\";\n\nimport * as React from \"react\";\n\nimport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectTrigger,\n  SelectValue,\n} from \"@/registry/ui/react/select\";\n\nexport default function SelectDemo(): JSX.Element {\n  return (\n    <Select>\n      <SelectTrigger className=\"w-[180px]\">\n        <SelectValue placeholder=\"Select a fruit\" />\n      </SelectTrigger>\n      <SelectContent>\n        <SelectGroup>\n          <SelectLabel>Fruits</SelectLabel>\n          <SelectItem value=\"apple\">Apple</SelectItem>\n          <SelectItem value=\"banana\">Banana</SelectItem>\n          <SelectItem value=\"blueberry\">Blueberry</SelectItem>\n          <SelectItem value=\"grapes\">Grapes</SelectItem>\n          <SelectItem value=\"pineapple\">Pineapple</SelectItem>\n        </SelectGroup>\n      </SelectContent>\n    </Select>\n  );\n}\n"}]
  },
  "demos/ui/react/separator/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/separator/default")),
    code: [{"title":"default.tsx","code":"import { Separator } from \"@/registry/ui/react/separator\";\n\nexport default function SeparatorDemo(): JSX.Element {\n  return (\n    <div className=\"space-y-2 rounded-md border p-4\">\n      <div>\n        <h3 className=\"font-bold\">UI</h3>\n        <p className=\"text-sm text-muted-foreground\">\n          Tools for building high-quality, accessible UI.\n        </p>\n      </div>\n      <Separator className=\"my-4\" />\n      <div className=\"flex h-5 items-center space-x-4 text-sm\">\n        <div>Docs</div>\n        <Separator orientation=\"vertical\" />\n        <div>Components</div>\n        <Separator orientation=\"vertical\" />\n        <div>Hooks</div>\n        <Separator orientation=\"vertical\" />\n        <div>Themes</div>\n      </div>\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/separator/orientation": {
    component: React.lazy(() => import("@/registry/demos/ui/react/separator/orientation")),
    code: [{"title":"orientation.tsx","code":"import { Separator } from \"@/registry/ui/react/separator\";\n\nexport default function SeparatorDemo(): JSX.Element {\n  return (\n    <div className=\"flex items-center gap-10\">\n      <div className=\"flex h-5 items-center gap-2 text-sm\">\n        <div>Components</div>\n        <Separator orientation=\"vertical\" />\n        <div>Hooks</div>\n      </div>\n      <div className=\"flex flex-col items-center gap-2 text-sm\">\n        <div>Components</div>\n        <Separator orientation=\"horizontal\" />\n        <div>Hooks</div>\n      </div>\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/sheet/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/sheet/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\n\nimport { Label } from \"@/registry/ui/react/label\";\nimport { TextField } from \"@/registry/ui/react/text-field\";\nimport { Button } from \"@/registry/ui/react/button\";\nimport {\n  Sheet,\n  SheetHeader,\n  SheetTitle,\n  SheetDescription,\n  SheetFooter,\n} from \"@/registry/ui/react/sheet\";\n\nexport default function SheetDemo(): JSX.Element {\n  const Content = () => (\n    <>\n      <SheetHeader>\n        <SheetTitle>Edit profile</SheetTitle>\n        <SheetDescription>\n          Make changes to your profile here. Click save when you're done.\n        </SheetDescription>\n      </SheetHeader>\n      <div className=\"grid gap-4 py-4\">\n        <div className=\"grid grid-cols-4 items-center gap-4\">\n          <Label htmlFor=\"name\" className=\"text-right\">\n            Name\n          </Label>\n          <TextField\n            id=\"name\"\n            defaultValue=\"Pedro Duarte\"\n            className=\"col-span-3\"\n          />\n        </div>\n        <div className=\"grid grid-cols-4 items-center gap-4\">\n          <Label htmlFor=\"username\" className=\"text-right\">\n            Username\n          </Label>\n          <TextField\n            id=\"username\"\n            defaultValue=\"~peduarte\"\n            className=\"col-span-3\"\n          />\n        </div>\n      </div>\n      <SheetFooter>\n        <Button type=\"submit\">Save changes</Button>\n      </SheetFooter>\n    </>\n  );\n\n  return (\n    <Sheet content={<Content />}>\n      <Button>Open</Button>\n    </Sheet>\n  );\n}\n"}]
  },
  "demos/ui/react/sheet/side": {
    component: React.lazy(() => import("@/registry/demos/ui/react/sheet/side")),
    code: [{"title":"side.tsx","code":"\"use client\";\n\nimport { Label } from \"@/registry/ui/react/label\";\nimport { TextField } from \"@/registry/ui/react/text-field\";\nimport { Button } from \"@/registry/ui/react/button\";\nimport {\n  Sheet,\n  SheetHeader,\n  SheetTitle,\n  SheetDescription,\n  SheetFooter,\n} from \"@/registry/ui/react/sheet\";\n\nconst sides = [\"top\", \"right\", \"left\", \"bottom\"] as const;\n\nexport default function SheetDemo(): JSX.Element {\n  const Content = () => (\n    <>\n      <SheetHeader>\n        <SheetTitle>Edit profile</SheetTitle>\n        <SheetDescription>\n          Make changes to your profile here. Click save when you're done.\n        </SheetDescription>\n      </SheetHeader>\n      <div className=\"grid gap-4 py-4\">\n        <div className=\"grid grid-cols-4 items-center gap-4\">\n          <Label htmlFor=\"name\" className=\"text-right\">\n            Name\n          </Label>\n          <TextField\n            id=\"name\"\n            defaultValue=\"Pedro Duarte\"\n            className=\"col-span-3\"\n          />\n        </div>\n        <div className=\"grid grid-cols-4 items-center gap-4\">\n          <Label htmlFor=\"username\" className=\"text-right\">\n            Username\n          </Label>\n          <TextField\n            id=\"username\"\n            defaultValue=\"~peduarte\"\n            className=\"col-span-3\"\n          />\n        </div>\n      </div>\n      <SheetFooter>\n        <Button type=\"submit\">Save changes</Button>\n      </SheetFooter>\n    </>\n  );\n\n  return (\n    <div className=\"grid grid-cols-2 gap-2\">\n      {sides.map((side) => (\n        <Sheet key={side} content={<Content />} side={side}>\n          <Button>{side}</Button>\n        </Sheet>\n      ))}\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/sheet/composition": {
    component: React.lazy(() => import("@/registry/demos/ui/react/sheet/composition")),
    code: [{"title":"composition.tsx","code":"\"use client\";\n\nimport { Label } from \"@/registry/ui/react/label\";\nimport { TextField } from \"@/registry/ui/react/text-field\";\nimport { Button } from \"@/registry/ui/react/button\";\nimport {\n  Sheet,\n  SheetTrigger,\n  SheetContent,\n  SheetHeader,\n  SheetTitle,\n  SheetDescription,\n  SheetFooter,\n  SheetClose,\n} from \"@/registry/ui/react/sheet\";\n\nexport default function SheetDemo(): JSX.Element {\n  return (\n    <Sheet>\n      <SheetTrigger asChild>\n        <Button>Open</Button>\n      </SheetTrigger>\n      <SheetContent>\n        <SheetHeader>\n          <SheetTitle>Edit profile</SheetTitle>\n          <SheetDescription>\n            Make changes to your profile here. Click save when you're done.\n          </SheetDescription>\n        </SheetHeader>\n        <div className=\"grid gap-4 py-4\">\n          <div className=\"grid grid-cols-4 items-center gap-4\">\n            <Label htmlFor=\"name\" className=\"text-right\">\n              Name\n            </Label>\n            <TextField id=\"name\" value=\"Pedro Duarte\" className=\"col-span-3\" />\n          </div>\n          <div className=\"grid grid-cols-4 items-center gap-4\">\n            <Label htmlFor=\"username\" className=\"text-right\">\n              Username\n            </Label>\n            <TextField id=\"username\" value=\"~peduarte\" className=\"col-span-3\" />\n          </div>\n        </div>\n        <SheetFooter>\n          <SheetClose asChild>\n            <Button type=\"submit\">Save changes</Button>\n          </SheetClose>\n        </SheetFooter>\n      </SheetContent>\n    </Sheet>\n  );\n}\n"}]
  },
  "demos/ui/react/skeleton/card": {
    component: React.lazy(() => import("@/registry/demos/ui/react/skeleton/card")),
    code: [{"title":"card.tsx","code":"import { Skeleton } from \"@/registry/ui/react/skeleton\";\n\nexport default function SkeletonDemo(): JSX.Element {\n  return (\n    <div className=\"space-y-4\">\n      <Skeleton className=\"h-44 w-64\" />\n      <div className=\"flex items-center space-x-4\">\n        <Skeleton className=\"size-10 rounded-full\" />\n        <div className=\"space-y-2\">\n          <Skeleton className=\"h-4 w-44\" />\n          <Skeleton className=\"h-4 w-36\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/skeleton/children": {
    component: React.lazy(() => import("@/registry/demos/ui/react/skeleton/children")),
    code: [{"title":"children.tsx","code":"import { Button } from \"@/registry/ui/react/button\";\nimport { Skeleton } from \"@/registry/ui/react/skeleton\";\n\nexport default function SkeletonDemo(): JSX.Element {\n  return (\n    <Skeleton>\n      <Button>Button</Button>\n    </Skeleton>\n  );\n}\n"}]
  },
  "demos/ui/react/skeleton/show": {
    component: React.lazy(() => import("@/registry/demos/ui/react/skeleton/show")),
    code: [{"title":"show.tsx","code":"import { Button } from \"@/registry/ui/react/button\";\nimport { Skeleton } from \"@/registry/ui/react/skeleton\";\n\nexport default function SkeletonDemo(): JSX.Element {\n  return (\n    <div className=\"flex flex-col items-center gap-4\">\n      <Skeleton>\n        <Button>Button</Button>\n      </Skeleton>\n      <Skeleton show={false}>\n        <Button>Button</Button>\n      </Skeleton>\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/skeleton/api-simulation": {
    component: React.lazy(() => import("@/registry/demos/ui/react/skeleton/api-simulation")),
    code: [{"title":"api-simulation.tsx","code":"\"use client\";\n\nimport { Button } from \"@/registry/ui/react/button\";\nimport { Skeleton } from \"@/registry/ui/react/skeleton\";\nimport React from \"react\";\n\nexport default function SkeletonDemo(): JSX.Element {\n  const [status, setStatus] = React.useState<\n    \"idle\" | \"loading\" | \"error\" | \"success\"\n  >(\"idle\");\n  const apiCall = () => {\n    setStatus(\"loading\");\n    setTimeout(() => {\n      setStatus(\"success\");\n    }, 4000);\n  };\n  return (\n    <div className=\"flex flex-col items-center gap-4\">\n      <Button isLoading={status === \"loading\"} onClick={apiCall}>\n        Simulate API Call\n      </Button>\n      <Skeleton show={status === \"loading\"}>\n        <p>Some text loaded from API.</p>\n      </Skeleton>\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/skeleton/fixed-size-children": {
    component: React.lazy(() => import("@/registry/demos/ui/react/skeleton/fixed-size-children")),
    code: [{"title":"fixed-size-children.tsx","code":"import { Button } from \"@/registry/ui/react/button\";\nimport { Skeleton } from \"@/registry/ui/react/skeleton\";\n\nexport default function SkeletonDemo(): JSX.Element {\n  return (\n    <Skeleton className=\"size-20\">\n      <Button>Button</Button>\n    </Skeleton>\n  );\n}\n"}]
  },
  "demos/ui/react/slider/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/slider/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\n\nimport { Slider } from \"@/registry/ui/react/slider\";\n\nexport default function SliderDemo(): JSX.Element {\n  return <Slider defaultValue={[50]} max={100} step={1} className=\"w-3/5\" />;\n}\n"}]
  },
  "demos/ui/react/slider/disabled": {
    component: React.lazy(() => import("@/registry/demos/ui/react/slider/disabled")),
    code: [{"title":"disabled.tsx","code":"\"use client\";\n\nimport { Slider } from \"@/registry/ui/react/slider\";\n\nexport default function SliderDemo(): JSX.Element {\n  return (\n    <Slider defaultValue={[50]} max={100} step={1} className=\"w-3/5\" disabled />\n  );\n}\n"}]
  },
  "demos/ui/react/slider/inverted": {
    component: React.lazy(() => import("@/registry/demos/ui/react/slider/inverted")),
    code: [{"title":"inverted.tsx","code":"\"use client\";\n\nimport { Slider } from \"@/registry/ui/react/slider\";\n\nexport default function SliderDemo(): JSX.Element {\n  return (\n    <Slider defaultValue={[50]} max={100} step={1} className=\"w-3/5\" inverted />\n  );\n}\n"}]
  },
  "demos/ui/react/slider/orientation": {
    component: React.lazy(() => import("@/registry/demos/ui/react/slider/orientation")),
    code: [{"title":"orientation.tsx","code":"\"use client\";\n\nimport { Slider } from \"@/registry/ui/react/slider\";\n\nexport default function SliderDemo(): JSX.Element {\n  return (\n    <div className=\"h-64\">\n      <Slider\n        defaultValue={[50]}\n        max={100}\n        step={1}\n        className=\"w-3/5\"\n        orientation=\"vertical\"\n      />\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/slider/range": {
    component: React.lazy(() => import("@/registry/demos/ui/react/slider/range")),
    code: [{"title":"range.tsx","code":"\"use client\";\n\nimport { Slider } from \"@/registry/ui/react/slider\";\n\nexport default function SliderDemo(): JSX.Element {\n  return (\n    <Slider defaultValue={[25, 75]} max={100} step={1} className=\"w-3/5\" />\n  );\n}\n"}]
  },
  "demos/ui/react/slider/half-tick-marks": {
    component: React.lazy(() => import("@/registry/demos/ui/react/slider/half-tick-marks")),
    code: [{"title":"half-tick-marks.tsx","code":"\"use client\";\n\nimport { Slider } from \"@/registry/ui/react/slider\";\n\nexport default function SliderDemo(): JSX.Element {\n  return (\n    <Slider\n      defaultValue={[2]}\n      max={5}\n      step={1}\n      className=\"w-3/5\"\n      showSteps=\"half\"\n    />\n  );\n}\n"}]
  },
  "demos/ui/react/slider/full-tick-marks": {
    component: React.lazy(() => import("@/registry/demos/ui/react/slider/full-tick-marks")),
    code: [{"title":"full-tick-marks.tsx","code":"\"use client\";\n\nimport { Slider } from \"@/registry/ui/react/slider\";\n\nexport default function SliderDemo(): JSX.Element {\n  return (\n    <Slider\n      defaultValue={[2]}\n      max={5}\n      step={1}\n      className=\"w-3/5\"\n      showSteps=\"full\"\n    />\n  );\n}\n"}]
  },
  "demos/ui/react/slider/format-label": {
    component: React.lazy(() => import("@/registry/demos/ui/react/slider/format-label")),
    code: [{"title":"format-label.tsx","code":"\"use client\";\n\nimport { Slider } from \"@/registry/ui/react/slider\";\n\nexport default function SliderDemo(): JSX.Element {\n  return (\n    <Slider\n      defaultValue={[2]}\n      max={100}\n      step={1}\n      className=\"w-3/5\"\n      formatLabel={(value) => `${value} points`}\n    />\n  );\n}\n"}]
  },
  "demos/ui/react/slider/format-label-side": {
    component: React.lazy(() => import("@/registry/demos/ui/react/slider/format-label-side")),
    code: [{"title":"format-label-side.tsx","code":"\"use client\";\n\nimport { Slider } from \"@/registry/ui/react/slider\";\n\nexport default function SliderDemo(): JSX.Element {\n  return (\n    <Slider\n      defaultValue={[2]}\n      max={100}\n      step={1}\n      className=\"w-3/5\"\n      formatLabel={(value) => `${value} points`}\n      formatLabelSide=\"left\"\n    />\n  );\n}\n"}]
  },
  "demos/ui/react/star-rating/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/star-rating/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { StarRating } from \"@/registry/ui/react/star-rating\";\n\nexport default function StarRatingDemo(): JSX.Element {\n  return <StarRating defaultValue={3} />;\n}\n"}]
  },
  "demos/ui/react/star-rating/color": {
    component: React.lazy(() => import("@/registry/demos/ui/react/star-rating/color")),
    code: [{"title":"color.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { StarRating } from \"@/registry/ui/react/star-rating\";\n\nexport default function StarRatingDemo(): JSX.Element {\n  return (\n    <StarRating\n      defaultValue={3}\n      iconProps={{ className: \"fill-red-500 stroke-red-500\" }}\n    />\n  );\n}\n"}]
  },
  "demos/ui/react/star-rating/icon": {
    component: React.lazy(() => import("@/registry/demos/ui/react/star-rating/icon")),
    code: [{"title":"icon.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { StarRating } from \"@/registry/ui/react/star-rating\";\nimport { Heart } from \"lucide-react\";\n\nexport default function StarRatingDemo(): JSX.Element {\n  return <StarRating defaultValue={3} icon={Heart} />;\n}\n"}]
  },
  "demos/ui/react/star-rating/disabled": {
    component: React.lazy(() => import("@/registry/demos/ui/react/star-rating/disabled")),
    code: [{"title":"disabled.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { StarRating } from \"@/registry/ui/react/star-rating\";\n\nexport default function StarRatingDemo(): JSX.Element {\n  return <StarRating defaultValue={3} disabled />;\n}\n"}]
  },
  "demos/ui/react/star-rating/decimal-point": {
    component: React.lazy(() => import("@/registry/demos/ui/react/star-rating/decimal-point")),
    code: [{"title":"decimal-point.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { StarRating } from \"@/registry/ui/react/star-rating\";\n\nexport default function StarRatingDemo(): JSX.Element {\n  return <StarRating defaultValue={3.68} disabled />;\n}\n"}]
  },
  "demos/ui/react/stepper/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/stepper/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\n\nimport {\n  Stepper,\n  Step,\n  useStepper,\n  StepItem,\n} from \"@/registry/ui/react/stepper\";\nimport { Button } from \"@/registry/ui/react/button\";\n\nconst steps = [\n  { label: \"Step 1\" },\n  { label: \"Step 2\" },\n  { label: \"Step 3\" },\n] satisfies StepItem[];\n\nexport default function StepperDemo(): JSX.Element {\n  return (\n    <div className=\"flex w-full flex-col gap-4\">\n      <Stepper initialStep={0} steps={steps}>\n        {steps.map((stepProps, index) => {\n          return (\n            <Step key={stepProps.label} {...stepProps}>\n              <div className=\"bg-background text-primary my-2 flex h-40 items-center justify-center rounded-md border\">\n                <h1 className=\"text-xl\">\n                  Step\n                  {index + 1}\n                </h1>\n              </div>\n            </Step>\n          );\n        })}\n        <Footer />\n      </Stepper>\n    </div>\n  );\n}\n\nfunction Footer() {\n  const {\n    nextStep,\n    prevStep,\n    resetSteps,\n    hasCompletedAllSteps,\n    isLastStep,\n    isOptionalStep,\n    isDisabledStep,\n  } = useStepper();\n  return (\n    <>\n      {hasCompletedAllSteps && (\n        <div className=\"bg-background text-primary my-2 flex h-40 items-center justify-center rounded-md border\">\n          <h1 className=\"text-xl\">Woohoo! All steps completed! 🎉</h1>\n        </div>\n      )}\n      <div className=\"flex w-full justify-end gap-2\">\n        {hasCompletedAllSteps ? (\n          <Button size=\"sm\" onClick={resetSteps}>\n            Reset\n          </Button>\n        ) : (\n          <>\n            <Button\n              disabled={isDisabledStep}\n              onClick={prevStep}\n              size=\"sm\"\n              variant=\"secondary\"\n            >\n              Prev\n            </Button>\n            <Button size=\"sm\" onClick={nextStep}>\n              {isLastStep ? \"Finish\" : isOptionalStep ? \"Skip\" : \"Next\"}\n            </Button>\n          </>\n        )}\n      </div>\n    </>\n  );\n}\n"}]
  },
  "demos/ui/react/stepper/orientation": {
    component: React.lazy(() => import("@/registry/demos/ui/react/stepper/orientation")),
    code: [{"title":"orientation.tsx","code":"\"use client\";\n\nimport * as React from \"react\";\n\nimport { Button } from \"@/registry/ui/react/button\";\nimport { Label } from \"@/registry/ui/react/label\";\nimport { RadioGroup, RadioGroupItem } from \"@/registry/ui/react/radio-group\";\nimport type { StepItem, StepperProps } from \"@/registry/ui/react/stepper\";\nimport { Step, Stepper, useStepper } from \"@/registry/ui/react/stepper\";\n\nconst steps = [\n  { label: \"Step 1\" },\n  { label: \"Step 2\" },\n  { label: \"Step 3\" },\n] satisfies StepItem[];\n\nexport default function StepperOrientation(): JSX.Element {\n  const [orientation, setOrientation] =\n    React.useState<StepperProps[\"orientation\"]>(\"vertical\");\n\n  return (\n    <div className=\"flex w-full flex-col gap-4\">\n      <RadioGroup\n        className=\"mb-2 flex\"\n        value={orientation}\n        onValueChange={(value) =>\n          setOrientation(value as StepperProps[\"orientation\"])\n        }\n      >\n        <Label\n          htmlFor=\"horizontal\"\n          className=\"bg-background hover:bg-gray-3 [&:has([data-state=checked])]:border-primary flex w-fit flex-col gap-3 rounded-md border px-2 py-1\"\n        >\n          <RadioGroupItem\n            value=\"horizontal\"\n            id=\"horizontal\"\n            className=\"sr-only\"\n          />\n          <h2 className=\"font-medium\">Horizontal</h2>\n        </Label>\n        <Label\n          htmlFor=\"vertical\"\n          className=\"bg-background hover:bg-gray-3 [&:has([data-state=checked])]:border-primary flex w-fit flex-col gap-3 rounded-md border px-2 py-1\"\n        >\n          <RadioGroupItem value=\"vertical\" id=\"vertical\" className=\"sr-only\" />\n          <h2 className=\"font-medium\">Vertical</h2>\n        </Label>\n      </RadioGroup>\n      <Stepper orientation={orientation} initialStep={0} steps={steps}>\n        {steps.map((stepProps, index) => {\n          return (\n            <Step key={stepProps.label} {...stepProps}>\n              <div className=\"bg-background text-primary my-4 flex h-40 items-center justify-center rounded-md border\">\n                <h1 className=\"text-xl\">\n                  Step\n                  {index + 1}\n                </h1>\n              </div>\n            </Step>\n          );\n        })}\n        <Footer />\n      </Stepper>\n    </div>\n  );\n}\n\nfunction Footer() {\n  const {\n    nextStep,\n    prevStep,\n    resetSteps,\n    isDisabledStep,\n    hasCompletedAllSteps,\n    isLastStep,\n    isOptionalStep,\n  } = useStepper();\n  return (\n    <>\n      {hasCompletedAllSteps && (\n        <div className=\"bg-background text-primary flex h-40 items-center justify-center rounded-md border\">\n          <h1 className=\"text-xl\">Woohoo! All steps completed! 🎉</h1>\n        </div>\n      )}\n      <div className=\"flex w-full justify-end gap-2\">\n        {hasCompletedAllSteps ? (\n          <Button size=\"sm\" onClick={resetSteps}>\n            Reset\n          </Button>\n        ) : (\n          <>\n            <Button\n              disabled={isDisabledStep}\n              onClick={prevStep}\n              size=\"sm\"\n              variant=\"secondary\"\n            >\n              Prev\n            </Button>\n            <Button size=\"sm\" onClick={nextStep}>\n              {isLastStep ? \"Finish\" : isOptionalStep ? \"Skip\" : \"Next\"}\n            </Button>\n          </>\n        )}\n      </div>\n    </>\n  );\n}\n"}]
  },
  "demos/ui/react/stepper/optional": {
    component: React.lazy(() => import("@/registry/demos/ui/react/stepper/optional")),
    code: [{"title":"optional.tsx","code":"\"use client\";\n\nimport { Button } from \"@/registry/ui/react/button\";\nimport type { StepItem } from \"@/registry/ui/react/stepper\";\nimport { Step, Stepper, useStepper } from \"@/registry/ui/react/stepper\";\n\nconst steps = [\n  { label: \"Step 1\" },\n  { label: \"Step 2\", optional: true },\n  { label: \"Step 3\" },\n] satisfies StepItem[];\n\nexport default function StepperDemo(): JSX.Element {\n  return (\n    <div className=\"flex w-full flex-col gap-4\">\n      <Stepper initialStep={0} steps={steps}>\n        {steps.map((stepProps, index) => {\n          return (\n            <Step key={stepProps.label} {...stepProps}>\n              <div className=\"bg-background text-primary my-2 flex h-40 items-center justify-center rounded-md border\">\n                <h1 className=\"text-xl\">\n                  Step\n                  {index + 1}\n                </h1>\n              </div>\n            </Step>\n          );\n        })}\n        <Footer />\n      </Stepper>\n    </div>\n  );\n}\n\nfunction Footer() {\n  const {\n    nextStep,\n    prevStep,\n    resetSteps,\n    isDisabledStep,\n    hasCompletedAllSteps,\n    isLastStep,\n    isOptionalStep,\n  } = useStepper();\n  return (\n    <>\n      {hasCompletedAllSteps && (\n        <div className=\"bg-background text-primary my-2 flex h-40 items-center justify-center rounded-md border\">\n          <h1 className=\"text-xl\">Woohoo! All steps completed! 🎉</h1>\n        </div>\n      )}\n      <div className=\"flex w-full justify-end gap-2\">\n        {hasCompletedAllSteps ? (\n          <Button size=\"sm\" onClick={resetSteps}>\n            Reset\n          </Button>\n        ) : (\n          <>\n            <Button\n              disabled={isDisabledStep}\n              onClick={prevStep}\n              size=\"sm\"\n              variant=\"secondary\"\n            >\n              Prev\n            </Button>\n            <Button size=\"sm\" onClick={nextStep}>\n              {isLastStep ? \"Finish\" : isOptionalStep ? \"Skip\" : \"Next\"}\n            </Button>\n          </>\n        )}\n      </div>\n    </>\n  );\n}\n"}]
  },
  "demos/ui/react/stepper/variant": {
    component: React.lazy(() => import("@/registry/demos/ui/react/stepper/variant")),
    code: [{"title":"variant.tsx","code":"\"use client\";\n\nimport * as React from \"react\";\n\nimport { Button } from \"@/registry/ui/react/button\";\nimport { Label } from \"@/registry/ui/react/label\";\nimport { RadioGroup, RadioGroupItem } from \"@/registry/ui/react/radio-group\";\nimport type { StepItem, StepperProps } from \"@/registry/ui/react/stepper\";\nimport { Step, Stepper, useStepper } from \"@/registry/ui/react/stepper\";\n\nconst steps = [\n  { label: \"Step 1\" },\n  { label: \"Step 2\" },\n  { label: \"Step 3\" },\n] satisfies StepItem[];\n\nexport default function StepperDemo(): JSX.Element {\n  const [variant, setVariant] =\n    React.useState<StepperProps[\"variant\"]>(\"circle\");\n\n  return (\n    <div className=\"flex w-full flex-col gap-4\">\n      <RadioGroup\n        className=\"mb-2 flex\"\n        value={variant}\n        onValueChange={(value) => setVariant(value as StepperProps[\"variant\"])}\n      >\n        <Label\n          htmlFor=\"circle\"\n          className=\"bg-background hover:bg-gray-3 [&:has([data-state=checked])]:border-primary flex w-fit flex-col gap-3 rounded-md border px-2 py-1\"\n        >\n          <RadioGroupItem value=\"circle\" id=\"circle\" className=\"sr-only\" />\n          <h2 className=\"font-medium\">circle</h2>\n        </Label>\n        <Label\n          htmlFor=\"circle-alt\"\n          className=\"bg-background hover:bg-gray-3 [&:has([data-state=checked])]:border-primary flex w-fit flex-col gap-3 rounded-md border px-2 py-1\"\n        >\n          <RadioGroupItem\n            value=\"circle-alt\"\n            id=\"circle-alt\"\n            className=\"sr-only\"\n          />\n          <h2 className=\"font-medium\">circle-alt</h2>\n        </Label>\n        <Label\n          htmlFor=\"line\"\n          className=\"bg-background hover:bg-gray-3 [&:has([data-state=checked])]:border-primary flex w-fit flex-col gap-3 rounded-md border px-2 py-1\"\n        >\n          <RadioGroupItem value=\"line\" id=\"line\" className=\"sr-only\" />\n          <h2 className=\"font-medium\">line</h2>\n        </Label>\n      </RadioGroup>\n      <Stepper variant={variant} initialStep={0} steps={steps}>\n        {steps.map((stepProps, index) => {\n          return (\n            <Step key={stepProps.label} {...stepProps}>\n              <div className=\"bg-background text-primary my-2 flex h-40 items-center justify-center rounded-md border\">\n                <h1 className=\"text-xl\">\n                  Step\n                  {index + 1}\n                </h1>\n              </div>\n            </Step>\n          );\n        })}\n        <Footer />\n      </Stepper>\n    </div>\n  );\n}\n\nfunction Footer() {\n  const {\n    nextStep,\n    prevStep,\n    resetSteps,\n    isDisabledStep,\n    hasCompletedAllSteps,\n    isLastStep,\n    isOptionalStep,\n  } = useStepper();\n  return (\n    <>\n      {hasCompletedAllSteps && (\n        <div className=\"bg-background text-primary my-2 flex h-40 items-center justify-center rounded-md border\">\n          <h1 className=\"text-xl\">Woohoo! All steps completed! 🎉</h1>\n        </div>\n      )}\n      <div className=\"flex w-full justify-end gap-2\">\n        {hasCompletedAllSteps ? (\n          <Button size=\"sm\" onClick={resetSteps}>\n            Reset\n          </Button>\n        ) : (\n          <>\n            <Button\n              disabled={isDisabledStep}\n              onClick={prevStep}\n              size=\"sm\"\n              variant=\"secondary\"\n            >\n              Prev\n            </Button>\n            <Button size=\"sm\" onClick={nextStep}>\n              {isLastStep ? \"Finish\" : isOptionalStep ? \"Skip\" : \"Next\"}\n            </Button>\n          </>\n        )}\n      </div>\n    </>\n  );\n}\n"}]
  },
  "demos/ui/react/stepper/size": {
    component: React.lazy(() => import("@/registry/demos/ui/react/stepper/size")),
    code: [{"title":"size.tsx","code":"\"use client\";\n\nimport * as React from \"react\";\n\nimport { Button } from \"@/registry/ui/react/button\";\nimport { Label } from \"@/registry/ui/react/label\";\nimport { RadioGroup, RadioGroupItem } from \"@/registry/ui/react/radio-group\";\nimport type { StepItem, StepperProps } from \"@/registry/ui/react/stepper\";\nimport { Step, Stepper, useStepper } from \"@/registry/ui/react/stepper\";\n\nconst steps = [\n  { label: \"Step 1\" },\n  { label: \"Step 2\" },\n  { label: \"Step 3\" },\n] satisfies StepItem[];\n\nexport default function StepperDemo(): JSX.Element {\n  const [size, setSize] = React.useState<StepperProps[\"size\"]>(\"md\");\n\n  return (\n    <div className=\"flex w-full flex-col gap-4\">\n      <RadioGroup\n        className=\"mb-2 flex\"\n        value={size}\n        onValueChange={(value) => setSize(value as StepperProps[\"size\"])}\n      >\n        <Label\n          htmlFor=\"sm\"\n          className=\"bg-background hover:bg-gray-3 [&:has([data-state=checked])]:border-primary flex w-fit flex-col gap-3 rounded-md border px-2 py-1\"\n        >\n          <RadioGroupItem value=\"sm\" id=\"sm\" className=\"sr-only\" />\n          <h2 className=\"font-medium\">sm</h2>\n        </Label>\n        <Label\n          htmlFor=\"md\"\n          className=\"bg-background hover:bg-gray-3 [&:has([data-state=checked])]:border-primary flex w-fit flex-col gap-3 rounded-md border px-2 py-1\"\n        >\n          <RadioGroupItem value=\"md\" id=\"md\" className=\"sr-only\" />\n          <h2 className=\"font-medium\">md</h2>\n        </Label>\n        <Label\n          htmlFor=\"lg\"\n          className=\"bg-background hover:bg-gray-3 [&:has([data-state=checked])]:border-primary flex w-fit flex-col gap-3 rounded-md border px-2 py-1\"\n        >\n          <RadioGroupItem value=\"lg\" id=\"lg\" className=\"sr-only\" />\n          <h2 className=\"font-medium\">lg</h2>\n        </Label>\n      </RadioGroup>\n      <Stepper size={size} initialStep={0} steps={steps}>\n        {steps.map((stepProps, index) => {\n          return (\n            <Step key={stepProps.label} {...stepProps}>\n              <div className=\"bg-background text-primary my-2 flex h-40 items-center justify-center rounded-md border\">\n                <h1 className=\"text-xl\">\n                  Step\n                  {index + 1}\n                </h1>\n              </div>\n            </Step>\n          );\n        })}\n        <Footer />\n      </Stepper>\n    </div>\n  );\n}\n\nfunction Footer() {\n  const {\n    nextStep,\n    prevStep,\n    resetSteps,\n    isDisabledStep,\n    hasCompletedAllSteps,\n    isLastStep,\n    isOptionalStep,\n  } = useStepper();\n  return (\n    <>\n      {hasCompletedAllSteps && (\n        <div className=\"bg-background text-primary my-2 flex h-40 items-center justify-center rounded-md border\">\n          <h1 className=\"text-xl\">Woohoo! All steps completed! 🎉</h1>\n        </div>\n      )}\n      <div className=\"flex w-full justify-end gap-2\">\n        {hasCompletedAllSteps ? (\n          <Button size=\"sm\" onClick={resetSteps}>\n            Reset\n          </Button>\n        ) : (\n          <>\n            <Button\n              disabled={isDisabledStep}\n              onClick={prevStep}\n              size=\"sm\"\n              variant=\"secondary\"\n            >\n              Prev\n            </Button>\n            <Button size=\"sm\" onClick={nextStep}>\n              {isLastStep ? \"Finish\" : isOptionalStep ? \"Skip\" : \"Next\"}\n            </Button>\n          </>\n        )}\n      </div>\n    </>\n  );\n}\n"}]
  },
  "demos/ui/react/switch/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/switch/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\n\nimport { Label } from \"@/registry/ui/react/label\";\nimport { Switch } from \"@/registry/ui/react/switch\";\n\nexport default function SwitchDemo(): JSX.Element {\n  return (\n    <div className=\"flex items-center space-x-2\">\n      <Switch id=\"airplane-mode\" />\n      <Label htmlFor=\"airplane-mode\">Airplane Mode</Label>\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/switch/variant": {
    component: React.lazy(() => import("@/registry/demos/ui/react/switch/variant")),
    code: [{"title":"variant.tsx","code":"\"use client\";\n\nimport { Label } from \"@/registry/ui/react/label\";\nimport { Switch } from \"@/registry/ui/react/switch\";\n\nexport default function SwitchDemo(): JSX.Element {\n  return (\n    <div className=\"flex items-center gap-2\">\n      <div className=\"flex items-center space-x-2\">\n        <Switch variant=\"neutral\" id=\"neutral-switch\" />\n        <Label htmlFor=\"neutral-switch\">Neutral</Label>\n      </div>\n      <div className=\"flex items-center space-x-2\">\n        <Switch variant=\"primary\" id=\"primary-switch\" />\n        <Label htmlFor=\"primary-switch\">Primary</Label>\n      </div>\n      <div className=\"flex items-center space-x-2\">\n        <Switch variant=\"secondary\" id=\"secondary-switch\" />\n        <Label htmlFor=\"secondary-switch\">Secondary</Label>\n      </div>\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/switch/size": {
    component: React.lazy(() => import("@/registry/demos/ui/react/switch/size")),
    code: [{"title":"size.tsx","code":"\"use client\";\n\nimport { Label } from \"@/registry/ui/react/label\";\nimport { Switch } from \"@/registry/ui/react/switch\";\n\nexport default function SwitchDemo(): JSX.Element {\n  return (\n    <div className=\"flex items-center gap-2\">\n      <div className=\"flex items-center space-x-2\">\n        <Switch size=\"sm\" id=\"small-switch\" />\n        <Label htmlFor=\"small-switch\">Small</Label>\n      </div>\n      <div className=\"flex items-center space-x-2\">\n        <Switch size=\"md\" id=\"medium-switch\" />\n        <Label htmlFor=\"medium-switch\">Medium</Label>\n      </div>\n      <div className=\"flex items-center space-x-2\">\n        <Switch size=\"lg\" id=\"large-switch\" />\n        <Label htmlFor=\"large-switch\">Large</Label>\n      </div>\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/switch/shape": {
    component: React.lazy(() => import("@/registry/demos/ui/react/switch/shape")),
    code: [{"title":"shape.tsx","code":"\"use client\";\n\nimport { Label } from \"@/registry/ui/react/label\";\nimport { Switch } from \"@/registry/ui/react/switch\";\n\nexport default function SwitchDemo(): JSX.Element {\n  return (\n    <div className=\"flex items-center gap-2\">\n      <div className=\"flex items-center space-x-2\">\n        <Switch shape=\"rectangle\" id=\"rectangle-switch\" />\n        <Label htmlFor=\"rectangle-switch\">Rectangle</Label>\n      </div>\n      <div className=\"flex items-center space-x-2\">\n        <Switch shape=\"circle\" id=\"circle-switch\" />\n        <Label htmlFor=\"circle-switch\">Circle</Label>\n      </div>\n      <div className=\"flex items-center space-x-2\">\n        <Switch shape=\"square\" id=\"square-switch\" />\n        <Label htmlFor=\"square-switch\">Square</Label>\n      </div>\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/switch/disabled": {
    component: React.lazy(() => import("@/registry/demos/ui/react/switch/disabled")),
    code: [{"title":"disabled.tsx","code":"\"use client\";\n\nimport { Label } from \"@/registry/ui/react/label\";\nimport { Switch } from \"@/registry/ui/react/switch\";\n\nexport default function SwitchDemo(): JSX.Element {\n  return (\n    <div className=\"flex items-center space-x-2\">\n      <Switch disabled id=\"disabled-switch\" />\n      <Label htmlFor=\"disabled-switch\">Disabled</Label>\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/table/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/table/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\n\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableCaption,\n  TableCell,\n  TableFooter,\n  TableHead,\n  TableRow,\n} from \"@/registry/ui/react/table\";\n\nconst invoices = [\n  {\n    invoice: \"INV001\",\n    paymentStatus: \"Paid\",\n    totalAmount: \"$250.00\",\n    paymentMethod: \"Credit Card\",\n  },\n  {\n    invoice: \"INV002\",\n    paymentStatus: \"Pending\",\n    totalAmount: \"$150.00\",\n    paymentMethod: \"PayPal\",\n  },\n  {\n    invoice: \"INV003\",\n    paymentStatus: \"Unpaid\",\n    totalAmount: \"$350.00\",\n    paymentMethod: \"Bank Transfer\",\n  },\n  {\n    invoice: \"INV004\",\n    paymentStatus: \"Paid\",\n    totalAmount: \"$450.00\",\n    paymentMethod: \"Credit Card\",\n  },\n  {\n    invoice: \"INV005\",\n    paymentStatus: \"Paid\",\n    totalAmount: \"$550.00\",\n    paymentMethod: \"PayPal\",\n  },\n  {\n    invoice: \"INV006\",\n    paymentStatus: \"Pending\",\n    totalAmount: \"$200.00\",\n    paymentMethod: \"Bank Transfer\",\n  },\n  {\n    invoice: \"INV007\",\n    paymentStatus: \"Unpaid\",\n    totalAmount: \"$300.00\",\n    paymentMethod: \"Credit Card\",\n  },\n];\n\nexport default function TableDemo(): JSX.Element {\n  return (\n    <Table>\n      <TableCaption>A list of your recent invoices.</TableCaption>\n      <TableHeader>\n        <TableRow>\n          <TableHead className=\"w-[100px]\">Invoice</TableHead>\n          <TableHead>Status</TableHead>\n          <TableHead>Method</TableHead>\n          <TableHead className=\"text-right\">Amount</TableHead>\n        </TableRow>\n      </TableHeader>\n      <TableBody>\n        {invoices.map((invoice) => (\n          <TableRow key={invoice.invoice}>\n            <TableCell className=\"font-medium\">{invoice.invoice}</TableCell>\n            <TableCell>{invoice.paymentStatus}</TableCell>\n            <TableCell>{invoice.paymentMethod}</TableCell>\n            <TableCell className=\"text-right\">{invoice.totalAmount}</TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n      <TableFooter>\n        <TableRow>\n          <TableCell colSpan={3}>Total</TableCell>\n          <TableCell className=\"text-right\">$2,500.00</TableCell>\n        </TableRow>\n      </TableFooter>\n    </Table>\n  );\n}\n"}]
  },
  "demos/ui/react/table/data-table": {
    component: React.lazy(() => import("@/registry/demos/ui/react/table/data-table")),
    code: [{"title":"data-table.tsx","code":"\"use client\";\n\nimport * as React from \"react\";\nimport {\n  Column,\n  ColumnDef,\n  ColumnFiltersState,\n  Row,\n  SortingState,\n  VisibilityState,\n  flexRender,\n  getCoreRowModel,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  getSortedRowModel,\n  useReactTable,\n} from \"@tanstack/react-table\";\nimport { ArrowUpDown, ChevronDown, MoreHorizontal } from \"@/lib/icons\";\nimport { Checkbox } from \"@/registry/ui/react/checkbox\";\nimport { Button } from \"@/registry/ui/react/button\";\nimport {\n  Dropdown,\n  DropdownCheckboxItem,\n  DropdownContent,\n  DropdownItem,\n  DropdownLabel,\n  DropdownSeparator,\n  DropdownTrigger,\n} from \"@/registry/ui/react/dropdown\";\nimport { TextField } from \"@/registry/ui/react/text-field\";\nimport {\n  Table,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableBody,\n  TableHeader,\n} from \"@/registry/ui/react/table\";\n\nconst data: Payment[] = [\n  {\n    id: \"m5gr84i9\",\n    amount: 316,\n    status: \"success\",\n    email: \"ken99@yahoo.com\",\n  },\n  {\n    id: \"3u1reuv4\",\n    amount: 242,\n    status: \"success\",\n    email: \"Abe45@gmail.com\",\n  },\n  {\n    id: \"derv1ws0\",\n    amount: 837,\n    status: \"processing\",\n    email: \"Monserrat44@gmail.com\",\n  },\n  {\n    id: \"5kma53ae\",\n    amount: 874,\n    status: \"success\",\n    email: \"Silas22@gmail.com\",\n  },\n  {\n    id: \"bhqecj4p\",\n    amount: 721,\n    status: \"failed\",\n    email: \"carmella@hotmail.com\",\n  },\n];\n\nexport type Payment = {\n  id: string;\n  amount: number;\n  status: \"pending\" | \"processing\" | \"success\" | \"failed\";\n  email: string;\n};\n\nexport const columns: ColumnDef<Payment>[] = [\n  {\n    id: \"select\",\n    header: ({ table }) => (\n      <Checkbox\n        checked={\n          table.getIsAllPageRowsSelected() ||\n          (table.getIsSomePageRowsSelected() && \"indeterminate\")\n        }\n        onCheckedChange={(value) => table.toggleAllPageRowsSelected(!!value)}\n        aria-label=\"Select all\"\n      />\n    ),\n    cell: ({ row }) => (\n      <Checkbox\n        checked={row.getIsSelected()}\n        onCheckedChange={(value) => row.toggleSelected(!!value)}\n        aria-label=\"Select row\"\n      />\n    ),\n    enableSorting: false,\n    enableHiding: false,\n  },\n  {\n    accessorKey: \"status\",\n    header: \"Status\",\n    cell: ({ row }) => (\n      <div className=\"capitalize\">{row.getValue(\"status\")}</div>\n    ),\n  },\n  {\n    accessorKey: \"email\",\n    header: ({\n      column,\n    }: {\n      column: Column<Payment, unknown>;\n    }): React.ReactNode => {\n      return (\n        <Button\n          variant=\"quiet\"\n          onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\n        >\n          Email\n          <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n        </Button>\n      );\n    },\n    cell: ({ row }) => <div className=\"lowercase\">{row.getValue(\"email\")}</div>,\n  },\n  {\n    accessorKey: \"amount\",\n    header: () => <div className=\"text-right\">Amount</div>,\n    cell: ({ row }: { row: Row<Payment> }): React.ReactNode => {\n      const amount = parseFloat(row.getValue(\"amount\"));\n\n      // Format the amount as a dollar amount\n      const formatted = new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\",\n      }).format(amount);\n\n      return <div className=\"text-right font-medium\">{formatted}</div>;\n    },\n  },\n  {\n    id: \"actions\",\n    enableHiding: false,\n    cell: ({ row }: { row: Row<Payment> }): React.ReactNode => {\n      const payment = row.original;\n\n      return (\n        <Dropdown>\n          <DropdownTrigger asChild>\n            <Button variant=\"quiet\" className=\"h-8 w-8 p-0\">\n              <span className=\"sr-only\">Open menu</span>\n              <MoreHorizontal className=\"h-4 w-4\" />\n            </Button>\n          </DropdownTrigger>\n          <DropdownContent align=\"end\">\n            <DropdownLabel>Actions</DropdownLabel>\n            <DropdownItem\n              onClick={() => navigator.clipboard.writeText(payment.id)}\n            >\n              Copy payment ID\n            </DropdownItem>\n            <DropdownSeparator />\n            <DropdownItem>View customer</DropdownItem>\n            <DropdownItem>View payment details</DropdownItem>\n          </DropdownContent>\n        </Dropdown>\n      );\n    },\n  },\n];\n\nexport default function DataTableDemo(): JSX.Element {\n  const [sorting, setSorting] = React.useState<SortingState>([]);\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>(\n    [],\n  );\n  const [columnVisibility, setColumnVisibility] =\n    React.useState<VisibilityState>({});\n  const [rowSelection, setRowSelection] = React.useState({});\n\n  const table = useReactTable({\n    data,\n    columns,\n    onSortingChange: setSorting,\n    onColumnFiltersChange: setColumnFilters,\n    getCoreRowModel: getCoreRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    onColumnVisibilityChange: setColumnVisibility,\n    onRowSelectionChange: setRowSelection,\n    state: {\n      sorting,\n      columnFilters,\n      columnVisibility,\n      rowSelection,\n    },\n  });\n\n  return (\n    <div className=\"w-full\">\n      <div className=\"flex items-center py-4\">\n        <TextField\n          placeholder=\"Filter emails...\"\n          value={(table.getColumn(\"email\")?.getFilterValue() as string) ?? \"\"}\n          onChange={(event) =>\n            table.getColumn(\"email\")?.setFilterValue(event.target.value)\n          }\n          className=\"max-w-sm\"\n        />\n        <Dropdown>\n          <DropdownTrigger asChild>\n            <Button variant=\"outline\" className=\"ml-auto\">\n              Columns <ChevronDown className=\"ml-2 h-4 w-4\" />\n            </Button>\n          </DropdownTrigger>\n          <DropdownContent align=\"end\">\n            {table\n              .getAllColumns()\n              .filter((column) => column.getCanHide())\n              .map((column) => {\n                return (\n                  <DropdownCheckboxItem\n                    key={column.id}\n                    className=\"capitalize\"\n                    checked={column.getIsVisible()}\n                    onCheckedChange={(value) =>\n                      column.toggleVisibility(!!value)\n                    }\n                  >\n                    {column.id}\n                  </DropdownCheckboxItem>\n                );\n              })}\n          </DropdownContent>\n        </Dropdown>\n      </div>\n      <div className=\"rounded-md border\">\n        <Table>\n          <TableHeader>\n            {table.getHeaderGroups().map((headerGroup) => (\n              <TableRow key={headerGroup.id}>\n                {headerGroup.headers.map((header) => {\n                  return (\n                    <TableHead key={header.id}>\n                      {header.isPlaceholder\n                        ? null\n                        : flexRender(\n                            header.column.columnDef.header,\n                            header.getContext(),\n                          )}\n                    </TableHead>\n                  );\n                })}\n              </TableRow>\n            ))}\n          </TableHeader>\n          <TableBody>\n            {table.getRowModel().rows?.length ? (\n              table.getRowModel().rows.map((row) => (\n                <TableRow\n                  key={row.id}\n                  data-state={row.getIsSelected() && \"selected\"}\n                >\n                  {row.getVisibleCells().map((cell) => (\n                    <TableCell key={cell.id}>\n                      {flexRender(\n                        cell.column.columnDef.cell,\n                        cell.getContext(),\n                      )}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            ) : (\n              <TableRow>\n                <TableCell\n                  colSpan={columns.length}\n                  className=\"h-24 text-center\"\n                >\n                  No results.\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </div>\n      <div className=\"flex items-center justify-end space-x-2 py-4\">\n        <div className=\"flex-1 text-sm text-muted-foreground\">\n          {table.getFilteredSelectedRowModel().rows.length} of{\" \"}\n          {table.getFilteredRowModel().rows.length} row(s) selected.\n        </div>\n        <div className=\"space-x-2\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => table.previousPage()}\n            disabled={!table.getCanPreviousPage()}\n          >\n            Previous\n          </Button>\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => table.nextPage()}\n            disabled={!table.getCanNextPage()}\n          >\n            Next\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/tabs/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/tabs/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\n\nimport { Button } from \"@/registry/ui/react/button\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/registry/ui/react/card\";\nimport { Label } from \"@/registry/ui/react/label\";\nimport {\n  Tabs,\n  TabsContent,\n  TabsList,\n  TabsTrigger,\n} from \"@/registry/ui/react/tabs\";\nimport { TextField } from \"@/registry/ui/react/text-field\";\n\nexport default function TabsDemo(): JSX.Element {\n  return (\n    <Tabs defaultValue=\"account\" className=\"w-[400px]\">\n      <TabsList className=\"grid w-full grid-cols-2\">\n        <TabsTrigger value=\"account\">Account</TabsTrigger>\n        <TabsTrigger value=\"password\">Password</TabsTrigger>\n      </TabsList>\n      <TabsContent value=\"account\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Account</CardTitle>\n            <CardDescription>\n              Make changes to your account here. Click save when you&apos;re\n              done.\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            <div className=\"space-y-1\">\n              <Label htmlFor=\"name\">Name</Label>\n              <TextField id=\"name\" defaultValue=\"Pedro Duarte\" />\n            </div>\n            <div className=\"space-y-1\">\n              <Label htmlFor=\"username\">Username</Label>\n              <TextField id=\"username\" defaultValue=\"@peduarte\" />\n            </div>\n          </CardContent>\n          <CardFooter>\n            <Button>Save changes</Button>\n          </CardFooter>\n        </Card>\n      </TabsContent>\n      <TabsContent value=\"password\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Password</CardTitle>\n            <CardDescription>\n              Change your password here. After saving, you&apos;ll be logged\n              out.\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            <div className=\"space-y-1\">\n              <Label htmlFor=\"current\">Current password</Label>\n              <TextField id=\"current\" type=\"password\" />\n            </div>\n            <div className=\"space-y-1\">\n              <Label htmlFor=\"new\">New password</Label>\n              <TextField id=\"new\" type=\"password\" />\n            </div>\n          </CardContent>\n          <CardFooter>\n            <Button>Save password</Button>\n          </CardFooter>\n        </Card>\n      </TabsContent>\n    </Tabs>\n  );\n}\n"}]
  },
  "demos/ui/react/text-field/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/text-field/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\n\nimport { TextField } from \"@/registry/ui/react/text-field\";\n\nexport default function TextFieldDemo(): JSX.Element {\n  return <TextField type=\"email\" placeholder=\"Email\" />;\n}\n"}]
  },
  "demos/ui/react/text-field/prefix-suffix": {
    component: React.lazy(() => import("@/registry/demos/ui/react/text-field/prefix-suffix")),
    code: [{"title":"prefix-suffix.tsx","code":"\"use client\";\n\nimport { TextField } from \"@/registry/ui/react/text-field\";\nimport { Upload } from \"@/lib/icons\";\n\nexport default function TextFieldDemo(): JSX.Element {\n  return (\n    <div className=\"flex gap-4\">\n      <TextField prefix={<Upload />} />\n      <TextField suffix={<Upload />} />\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/text-field/description": {
    component: React.lazy(() => import("@/registry/demos/ui/react/text-field/description")),
    code: [{"title":"description.tsx","code":"\"use client\";\n\nimport { TextField } from \"@/registry/ui/react/text-field\";\n\nexport default function TextFieldDemo(): JSX.Element {\n  return <TextField description=\"This is a description\" />;\n}\n"}]
  },
  "demos/ui/react/text-field/label": {
    component: React.lazy(() => import("@/registry/demos/ui/react/text-field/label")),
    code: [{"title":"label.tsx","code":"\"use client\";\n\nimport { TextField } from \"@/registry/ui/react/text-field\";\n\nexport default function TextFieldDemo(): JSX.Element {\n  return <TextField label=\"label\" />;\n}\n"}]
  },
  "demos/ui/react/text-field/error": {
    component: React.lazy(() => import("@/registry/demos/ui/react/text-field/error")),
    code: [{"title":"error.tsx","code":"\"use client\";\n\nimport { TextField } from \"@/registry/ui/react/text-field\";\n\nexport default function TextFieldDemo(): JSX.Element {\n  return <TextField isInvalid errorMessage=\"This is an error\" />;\n}\n"}]
  },
  "demos/ui/react/text-field/help": {
    component: React.lazy(() => import("@/registry/demos/ui/react/text-field/help")),
    code: [{"title":"help.tsx","code":"\"use client\";\n\nimport { TextField } from \"@/registry/ui/react/text-field\";\n\nexport default function TextFieldDemo(): JSX.Element {\n  return <TextField contextualHelp=\"help  message\" />;\n}\n"}]
  },
  "demos/ui/react/textarea/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/textarea/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\n\nimport { Textarea } from \"@/registry/ui/react/textarea\";\n\nexport default function TextareaDemo(): JSX.Element {\n  return <Textarea placeholder=\"Type your message here.\" />;\n}\n"}]
  },
  "demos/ui/react/textarea/description": {
    component: React.lazy(() => import("@/registry/demos/ui/react/textarea/description")),
    code: [{"title":"description.tsx","code":"\"use client\";\n\nimport { Textarea } from \"@/registry/ui/react/textarea\";\n\nexport default function TextareaDemo(): JSX.Element {\n  return (\n    <Textarea\n      placeholder=\"Type your message here.\"\n      description=\"This is a description\"\n    />\n  );\n}\n"}]
  },
  "demos/ui/react/textarea/label": {
    component: React.lazy(() => import("@/registry/demos/ui/react/textarea/label")),
    code: [{"title":"label.tsx","code":"\"use client\";\n\nimport { Textarea } from \"@/registry/ui/react/textarea\";\n\nexport default function TextareaDemo(): JSX.Element {\n  return <Textarea placeholder=\"Type your message here.\" label=\"label\" />;\n}\n"}]
  },
  "demos/ui/react/textarea/error": {
    component: React.lazy(() => import("@/registry/demos/ui/react/textarea/error")),
    code: [{"title":"error.tsx","code":"\"use client\";\n\nimport { Textarea } from \"@/registry/ui/react/textarea\";\n\nexport default function TextareaDemo(): JSX.Element {\n  return (\n    <Textarea\n      placeholder=\"Type your message here.\"\n      isInvalid\n      errorMessage=\"This is an error\"\n    />\n  );\n}\n"}]
  },
  "demos/ui/react/textarea/help": {
    component: React.lazy(() => import("@/registry/demos/ui/react/textarea/help")),
    code: [{"title":"help.tsx","code":"\"use client\";\n\nimport { Textarea } from \"@/registry/ui/react/textarea\";\n\nexport default function TextareaDemo(): JSX.Element {\n  return (\n    <Textarea\n      placeholder=\"Type your message here.\"\n      contextualHelp=\"help  message\"\n    />\n  );\n}\n"}]
  },
  "demos/ui/react/timeline/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/timeline/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\n\nimport React from \"react\";\n\nimport {\n  Timeline,\n  TimelineContent,\n  TimelineDot,\n  TimelineHeading,\n  TimelineItem,\n  TimelineLine,\n} from \"@/registry/ui/react/timeline\";\n\nexport default function TimelineDemo(): JSX.Element {\n  return (\n    <Timeline>\n      <TimelineItem status=\"done\">\n        <TimelineHeading>Plan!</TimelineHeading>\n        <TimelineDot status=\"done\" />\n        <TimelineLine done />\n        <TimelineContent status=\"done\">\n          Before diving into coding, it is crucial to plan your software project\n          thoroughly. This involves defining the project scope, setting clear\n          objectives.\n        </TimelineContent>\n      </TimelineItem>\n      <TimelineItem status=\"done\">\n        <TimelineHeading side=\"right\" className=\"text-danger\">\n          Design\n        </TimelineHeading>\n        <TimelineDot status=\"error\" />\n        <TimelineLine done />\n        <TimelineContent status=\"done\">\n          Designing your software involves creating a blueprint that outlines\n          the structure, user interface, and functionality of your application.\n        </TimelineContent>\n      </TimelineItem>\n      <TimelineItem status=\"done\">\n        <TimelineHeading>Code</TimelineHeading>\n        <TimelineDot status=\"current\" />\n        <TimelineLine />\n        <TimelineContent status=\"done\">\n          The coding phase involves translating your design into actual code.\n          Choose a programming language and framework that aligns with your\n          project requirements.\n        </TimelineContent>\n      </TimelineItem>\n      <TimelineItem>\n        <TimelineHeading>Test</TimelineHeading>\n        <TimelineDot />\n        <TimelineLine />\n        <TimelineContent>\n          Thorough testing is essential to ensure the quality and reliability of\n          your software. Implement different testing methodologies, including\n          unit testing, integration testing, and user acceptance testing.\n        </TimelineContent>\n      </TimelineItem>\n      <TimelineItem>\n        <TimelineHeading>Deploy</TimelineHeading>\n        <TimelineDot />\n        <TimelineLine />\n        <TimelineContent>\n          Once your software has passed rigorous testing, it&apos;s time to\n          deploy it. Consider the deployment environment, whether it&apos;s\n          on-premises or in the cloud.\n        </TimelineContent>\n      </TimelineItem>\n      <TimelineItem>\n        <TimelineHeading>Done!</TimelineHeading>\n        <TimelineDot />\n      </TimelineItem>\n    </Timeline>\n  );\n}\n"}]
  },
  "demos/ui/react/timeline/left": {
    component: React.lazy(() => import("@/registry/demos/ui/react/timeline/left")),
    code: [{"title":"left.tsx","code":"\"use client\";\n\nimport React from \"react\";\n\nimport {\n  Timeline,\n  TimelineContent,\n  TimelineDot,\n  TimelineHeading,\n  TimelineItem,\n  TimelineLine,\n} from \"@/registry/ui/react/timeline\";\n\nexport default function TimelineDemo(): JSX.Element {\n  return (\n    <Timeline>\n      <TimelineItem status=\"done\">\n        <TimelineHeading>Plan!</TimelineHeading>\n        <TimelineDot status=\"done\" />\n        <TimelineLine done />\n        <TimelineContent status=\"done\">\n          Before diving into coding, it is crucial to plan your software project\n          thoroughly. This involves defining the project scope, setting clear\n          objectives.\n        </TimelineContent>\n      </TimelineItem>\n      <TimelineItem status=\"done\">\n        <TimelineHeading side=\"right\" className=\"text-danger\">\n          Design\n        </TimelineHeading>\n        <TimelineDot status=\"error\" />\n        <TimelineLine done />\n        <TimelineContent status=\"done\">\n          Designing your software involves creating a blueprint that outlines\n          the structure, user interface, and functionality of your application.\n        </TimelineContent>\n      </TimelineItem>\n      <TimelineItem status=\"done\">\n        <TimelineHeading>Code</TimelineHeading>\n        <TimelineDot status=\"current\" />\n        <TimelineLine />\n        <TimelineContent status=\"done\">\n          The coding phase involves translating your design into actual code.\n          Choose a programming language and framework that aligns with your\n          project requirements.\n        </TimelineContent>\n      </TimelineItem>\n      <TimelineItem>\n        <TimelineHeading>Test</TimelineHeading>\n        <TimelineDot />\n        <TimelineLine />\n        <TimelineContent>\n          Thorough testing is essential to ensure the quality and reliability of\n          your software. Implement different testing methodologies, including\n          unit testing, integration testing, and user acceptance testing.\n        </TimelineContent>\n      </TimelineItem>\n      <TimelineItem>\n        <TimelineHeading>Deploy</TimelineHeading>\n        <TimelineDot />\n        <TimelineLine />\n        <TimelineContent>\n          Once your software has passed rigorous testing, it&apos;s time to\n          deploy it. Consider the deployment environment, whether it&apos;s\n          on-premises or in the cloud.\n        </TimelineContent>\n      </TimelineItem>\n      <TimelineItem>\n        <TimelineHeading>Done!</TimelineHeading>\n        <TimelineDot />\n      </TimelineItem>\n    </Timeline>\n  );\n}\n"}]
  },
  "demos/ui/react/timeline/right": {
    component: React.lazy(() => import("@/registry/demos/ui/react/timeline/right")),
    code: [{"title":"right.tsx","code":"\"use client\";\n\nimport React from \"react\";\n\nimport {\n  Timeline,\n  TimelineContent,\n  TimelineDot,\n  TimelineHeading,\n  TimelineItem,\n  TimelineLine,\n} from \"@/registry/ui/react/timeline\";\n\nexport default function TimelineDemo(): JSX.Element {\n  return (\n    <Timeline positions=\"right\">\n      <TimelineItem status=\"done\">\n        <TimelineHeading side=\"left\">Plan!</TimelineHeading>\n        <TimelineDot status=\"done\" />\n        <TimelineLine done />\n        <TimelineContent status=\"done\" side=\"left\">\n          Before diving into coding, it is crucial to plan your software project\n          thoroughly. This involves defining the project scope, setting clear\n          objectives.\n        </TimelineContent>\n      </TimelineItem>\n      <TimelineItem status=\"done\">\n        <TimelineHeading side=\"left\" className=\"text-danger\">\n          Design\n        </TimelineHeading>\n        <TimelineDot status=\"error\" />\n        <TimelineLine done />\n        <TimelineContent status=\"done\" side=\"left\">\n          Designing your software involves creating a blueprint that outlines\n          the structure, user interface, and functionality of your application.\n        </TimelineContent>\n      </TimelineItem>\n      <TimelineItem status=\"done\">\n        <TimelineHeading side=\"left\">Code</TimelineHeading>\n        <TimelineDot status=\"current\" />\n        <TimelineLine />\n        <TimelineContent status=\"done\" side=\"left\">\n          The coding phase involves translating your design into actual code.\n          Choose a programming language and framework that aligns with your\n          project requirements.\n        </TimelineContent>\n      </TimelineItem>\n      <TimelineItem>\n        <TimelineHeading side=\"left\">Test</TimelineHeading>\n        <TimelineDot />\n        <TimelineLine />\n        <TimelineContent side=\"left\">\n          Thorough testing is essential to ensure the quality and reliability of\n          your software. Implement different testing methodologies, including\n          unit testing, integration testing, and user acceptance testing.\n        </TimelineContent>\n      </TimelineItem>\n      <TimelineItem>\n        <TimelineHeading side=\"left\">Deploy</TimelineHeading>\n        <TimelineDot />\n        <TimelineLine />\n        <TimelineContent side=\"left\">\n          Once your software has passed rigorous testing, it&apos;s time to\n          deploy it. Consider the deployment environment, whether it&apos;s\n          on-premises or in the cloud.\n        </TimelineContent>\n      </TimelineItem>\n      <TimelineItem>\n        <TimelineDot />\n        <TimelineHeading side=\"left\">Done!</TimelineHeading>\n      </TimelineItem>\n    </Timeline>\n  );\n}\n"}]
  },
  "demos/ui/react/timeline/alternating": {
    component: React.lazy(() => import("@/registry/demos/ui/react/timeline/alternating")),
    code: [{"title":"alternating.tsx","code":"\"use client\";\n\nimport React from \"react\";\n\nimport {\n  Timeline,\n  TimelineContent,\n  TimelineDot,\n  TimelineHeading,\n  TimelineItem,\n  TimelineLine,\n} from \"@/registry/ui/react/timeline\";\n\nexport default function TimelineDemo(): JSX.Element {\n  return (\n    <Timeline positions=\"center\">\n      <TimelineItem status=\"done\">\n        <TimelineHeading side=\"left\">Plan!</TimelineHeading>\n        <TimelineDot status=\"done\" />\n        <TimelineLine done />\n        <TimelineContent status=\"done\" side=\"left\">\n          Before diving into coding, it is crucial to plan your software project\n          thoroughly. This involves defining the project scope, setting clear\n          objectives.\n        </TimelineContent>\n      </TimelineItem>\n      <TimelineItem status=\"done\">\n        <TimelineHeading side=\"right\" className=\"text-danger\">\n          Design\n        </TimelineHeading>\n        <TimelineDot status=\"error\" />\n        <TimelineLine done />\n        <TimelineContent status=\"done\">\n          Designing your software involves creating a blueprint that outlines\n          the structure, user interface, and functionality of your application.\n        </TimelineContent>\n      </TimelineItem>\n      <TimelineItem status=\"done\">\n        <TimelineHeading side=\"left\">Code</TimelineHeading>\n        <TimelineDot status=\"current\" />\n        <TimelineLine />\n        <TimelineContent status=\"done\" side=\"left\">\n          The coding phase involves translating your design into actual code.\n          Choose a programming language and framework that aligns with your\n          project requirements.\n        </TimelineContent>\n      </TimelineItem>\n      <TimelineItem>\n        <TimelineHeading>Test</TimelineHeading>\n        <TimelineDot />\n        <TimelineLine />\n        <TimelineContent>\n          Thorough testing is essential to ensure the quality and reliability of\n          your software. Implement different testing methodologies, including\n          unit testing, integration testing, and user acceptance testing.\n        </TimelineContent>\n      </TimelineItem>\n      <TimelineItem>\n        <TimelineHeading side=\"left\">Deploy</TimelineHeading>\n        <TimelineDot />\n        <TimelineLine />\n        <TimelineContent side=\"left\">\n          Once your software has passed rigorous testing, it&apos;s time to\n          deploy it. Consider the deployment environment, whether it&apos;s\n          on-premises or in the cloud.\n        </TimelineContent>\n      </TimelineItem>\n      <TimelineItem>\n        <TimelineDot />\n        <TimelineHeading>Done!</TimelineHeading>\n      </TimelineItem>\n    </Timeline>\n  );\n}\n"}]
  },
  "demos/ui/react/timeline/lable": {
    component: React.lazy(() => import("@/registry/demos/ui/react/timeline/lable")),
    code: [{"title":"lable.tsx","code":"\"use client\";\n\nimport React from \"react\";\n\nimport {\n  Timeline,\n  TimelineContent,\n  TimelineDot,\n  TimelineHeading,\n  TimelineItem,\n  TimelineLine,\n} from \"@/registry/ui/react/timeline\";\n\nexport default function TimelineDemo(): JSX.Element {\n  return (\n    <Timeline positions=\"center\">\n      <TimelineItem status=\"done\">\n        <TimelineHeading side=\"left\">Plan!</TimelineHeading>\n        <TimelineHeading side=\"right\" variant=\"neutral\">\n          Done (05/04/2024)\n        </TimelineHeading>\n        <TimelineDot status=\"done\" />\n        <TimelineLine done />\n        <TimelineContent status=\"done\" side=\"left\">\n          Before diving into coding, it is crucial to plan your software project\n          thoroughly. This involves defining the project scope, setting clear\n          objectives.\n        </TimelineContent>\n      </TimelineItem>\n      <TimelineItem status=\"done\">\n        <TimelineHeading side=\"right\" className=\"text-danger\">\n          Design\n        </TimelineHeading>\n        <TimelineHeading side=\"left\" variant=\"neutral\">\n          Failed (05/04/2024)\n        </TimelineHeading>\n        <TimelineDot status=\"error\" />\n        <TimelineLine done />\n        <TimelineContent status=\"done\">\n          Designing your software involves creating a blueprint that outlines\n          the structure, user interface, and functionality of your application.\n        </TimelineContent>\n      </TimelineItem>\n      <TimelineItem status=\"done\">\n        <TimelineHeading side=\"left\">Code</TimelineHeading>\n        <TimelineHeading side=\"right\" variant=\"neutral\">\n          Current step\n        </TimelineHeading>\n        <TimelineDot status=\"current\" />\n        <TimelineLine />\n        <TimelineContent status=\"done\" side=\"left\">\n          The coding phase involves translating your design into actual code.\n          Choose a programming language and framework that aligns with your\n          project requirements.\n        </TimelineContent>\n      </TimelineItem>\n      <TimelineItem>\n        <TimelineHeading>Test</TimelineHeading>\n        <TimelineHeading side=\"left\" variant=\"neutral\">\n          Next step\n        </TimelineHeading>\n        <TimelineDot />\n        <TimelineLine />\n        <TimelineContent>\n          Thorough testing is essential to ensure the quality and reliability of\n          your software. Implement different testing methodologies, including\n          unit testing, integration testing, and user acceptance testing.\n        </TimelineContent>\n      </TimelineItem>\n      <TimelineItem>\n        <TimelineHeading side=\"left\">Deploy</TimelineHeading>\n        <TimelineHeading side=\"right\" variant=\"secondary\">\n          Deadline (05/10/2024)\n        </TimelineHeading>\n        <TimelineDot />\n        <TimelineLine />\n        <TimelineContent side=\"left\">\n          Once your software has passed rigorous testing, it&apos;s time to\n          deploy it. Consider the deployment environment, whether it&apos;s\n          on-premises or in the cloud.\n        </TimelineContent>\n      </TimelineItem>\n      <TimelineItem>\n        <TimelineDot />\n        <TimelineHeading>Done!</TimelineHeading>\n        <TimelineHeading side=\"left\" variant=\"secondary\">\n          Here everything ends\n        </TimelineHeading>\n      </TimelineItem>\n    </Timeline>\n  );\n}\n"}]
  },
  "demos/ui/react/toast/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/toast/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\n\nimport { Button } from \"@/registry/ui/react/button\";\nimport { useToast } from \"@/registry/ui/react/use-toast\";\n\nexport default function ToastDemo(): JSX.Element {\n  const { toast } = useToast();\n\n  return (\n    <Button\n      variant=\"outline\"\n      onClick={() => {\n        toast({\n          title: \"Scheduled: Catch up \",\n          description: \"Friday, February 10, 2023 at 5:57 PM\",\n        });\n      }}\n    >\n      Add to calendar\n    </Button>\n  );\n}\n"}]
  },
  "demos/ui/react/toast/variant": {
    component: React.lazy(() => import("@/registry/demos/ui/react/toast/variant")),
    code: [{"title":"variant.tsx","code":"\"use client\";\n\nimport { Button } from \"@/registry/ui/react/button\";\nimport { useToast } from \"@/registry/ui/react/use-toast\";\n\nconst variants = [\"default\", \"primary\", \"secondary\", \"danger\"] as const;\n\nexport default function ToastDemo(): JSX.Element {\n  const { toast } = useToast();\n\n  return (\n    <div className=\"grid grid-cols-2 gap-2\">\n      {variants.map((variant) => (\n        <Button\n          key={variant}\n          variant={variant}\n          onClick={() => {\n            toast({\n              variant,\n              title: \"Scheduled: Catch up \",\n              description: \"Friday, February 10, 2023 at 5:57 PM\",\n            });\n          }}\n        >\n          {variant}\n        </Button>\n      ))}\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/toast/action": {
    component: React.lazy(() => import("@/registry/demos/ui/react/toast/action")),
    code: [{"title":"action.tsx","code":"\"use client\";\n\nimport { Button } from \"@/registry/ui/react/button\";\nimport { ToastAction } from \"@/registry/ui/react/toast\";\nimport { useToast } from \"@/registry/ui/react/use-toast\";\n\nexport default function ToastDemo(): JSX.Element {\n  const { toast } = useToast();\n\n  return (\n    <Button\n      onClick={() => {\n        toast({\n          title: \"Scheduled: Catch up \",\n          description: \"Friday, February 10, 2023 at 5:57 PM\",\n          action: (\n            <ToastAction altText=\"Goto schedule to undo\">Undo</ToastAction>\n          ),\n        });\n      }}\n    >\n      Add to calendar\n    </Button>\n  );\n}\n"}]
  },
  "demos/ui/react/toc/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/toc/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\n\nimport {\n  TableOfContents,\n  TableOfContent,\n  TableOfContentsTitle,\n} from \"@/registry/ui/react/toc\";\n\nexport default function TocDemo(): JSX.Element {\n  return (\n    <TableOfContents>\n      <TableOfContentsTitle>Table of Contents</TableOfContentsTitle>\n      <TableOfContent href=\"#first-section\">First Section</TableOfContent>\n      <TableOfContent href=\"#second-section\">Second Section</TableOfContent>\n      <TableOfContent href=\"#third-section\">Third Section</TableOfContent>\n    </TableOfContents>\n  );\n}\n"}]
  },
  "demos/ui/react/toc/nested": {
    component: React.lazy(() => import("@/registry/demos/ui/react/toc/nested")),
    code: [{"title":"nested.tsx","code":"\"use client\";\n\nimport {\n  TableOfContents,\n  TableOfContent,\n  TableOfContentsTitle,\n  TableOfContentsList,\n} from \"@/registry/ui/react/toc\";\n\nexport default function TocDemo(): JSX.Element {\n  return (\n    <TableOfContents>\n      <TableOfContentsTitle>Table of Contents</TableOfContentsTitle>\n      <TableOfContent href=\"#first-section-nested\">\n        First Nested Section\n      </TableOfContent>\n      <TableOfContentsList indent>\n        <TableOfContent href=\"#first-nested-section-nested\">\n          First Nested Section\n        </TableOfContent>\n        <TableOfContent href=\"#second-nested-section-nested\" indent>\n          Second Nested Section\n        </TableOfContent>\n      </TableOfContentsList>\n      <TableOfContent href=\"#third-section-nested\">\n        Third Section\n      </TableOfContent>\n    </TableOfContents>\n  );\n}\n"}]
  },
  "demos/ui/react/toc/active": {
    component: React.lazy(() => import("@/registry/demos/ui/react/toc/active")),
    code: [{"title":"active.tsx","code":"\"use client\";\n\nimport {\n  TableOfContents,\n  TableOfContent,\n  TableOfContentsTitle,\n} from \"@/registry/ui/react/toc\";\n\nexport default function TocDemo(): JSX.Element {\n  return (\n    <TableOfContents>\n      <TableOfContentsTitle>Active Item Table of Contents</TableOfContentsTitle>\n      <TableOfContent href=\"#first-section\">First Section</TableOfContent>\n      <TableOfContent isActive href=\"#second-section\" indent>\n        Second Section\n      </TableOfContent>\n      <TableOfContent href=\"#third-section\">Third Section</TableOfContent>\n    </TableOfContents>\n  );\n}\n"}]
  },
  "demos/ui/react/toggle/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/toggle/default")),
    code: [{"title":"default.tsx","code":"import { Toggle } from \"@/registry/ui/react/toggle\";\nimport { Pin } from \"@/lib/icons\";\n\nexport default function ToggleDemo(): JSX.Element {\n  return (\n    <Toggle>\n      <Pin />\n    </Toggle>\n  );\n}\n"}]
  },
  "demos/ui/react/toggle/variants": {
    component: React.lazy(() => import("@/registry/demos/ui/react/toggle/variants")),
    code: [{"title":"variants.tsx","code":"import { Toggle } from \"@/registry/ui/react/toggle\";\nimport { Pin } from \"@/lib/icons\";\n\nconst variants = [\"outline\", \"quiet\", \"accent\"] as const;\n\nexport default function ToggleDemo(): JSX.Element {\n  return (\n    <div className=\"flex space-x-4\">\n      {variants.map((variant) => (\n        <Toggle key={variant} variant={variant}>\n          <Pin />\n        </Toggle>\n      ))}\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/toggle/sizes": {
    component: React.lazy(() => import("@/registry/demos/ui/react/toggle/sizes")),
    code: [{"title":"sizes.tsx","code":"import { Toggle } from \"@/registry/ui/react/toggle\";\nimport { Pin } from \"@/lib/icons\";\n\nexport default function ToggleDemo(): JSX.Element {\n  return (\n    <div className=\"flex w-full items-center justify-center gap-4\">\n      <Toggle size=\"sm\">\n        <Pin />\n      </Toggle>\n      <Toggle size=\"md\">\n        <Pin />\n      </Toggle>\n      <Toggle size=\"lg\">\n        <Pin />\n      </Toggle>\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/toggle/shapes": {
    component: React.lazy(() => import("@/registry/demos/ui/react/toggle/shapes")),
    code: [{"title":"shapes.tsx","code":"import { Toggle } from \"@/registry/ui/react/toggle\";\nimport { Pin } from \"@/lib/icons\";\n\nexport default function ToggleDemo(): JSX.Element {\n  return (\n    <div className=\"flex w-full items-center justify-center gap-4\">\n      <Toggle shape=\"square\">\n        <Pin />\n      </Toggle>\n      <Toggle shape=\"circle\">\n        <Pin />\n      </Toggle>\n      <Toggle shape=\"rectangle\">\n        <Pin />\n      </Toggle>\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/toggle/disabled": {
    component: React.lazy(() => import("@/registry/demos/ui/react/toggle/disabled")),
    code: [{"title":"disabled.tsx","code":"import { Toggle } from \"@/registry/ui/react/toggle\";\nimport { Pin } from \"@/lib/icons\";\n\nexport default function ToggleDemo(): JSX.Element {\n  return (\n    <Toggle isDisabled>\n      <Pin />\n    </Toggle>\n  );\n}\n"}]
  },
  "demos/ui/react/toggle/uncontrolled": {
    component: React.lazy(() => import("@/registry/demos/ui/react/toggle/uncontrolled")),
    code: [{"title":"uncontrolled.tsx","code":"import { Toggle } from \"@/registry/ui/react/toggle\";\nimport { Pin } from \"@/lib/icons\";\n\nexport default function ToggleDemo(): JSX.Element {\n  return (\n    <Toggle defaultSelected>\n      <Pin />\n    </Toggle>\n  );\n}\n"}]
  },
  "demos/ui/react/toggle/controlled": {
    component: React.lazy(() => import("@/registry/demos/ui/react/toggle/controlled")),
    code: [{"title":"controlled.tsx","code":"\"use client\";\n\nimport { Toggle } from \"@/registry/ui/react/toggle\";\nimport { Pin } from \"@/lib/icons\";\nimport { useState } from \"react\";\n\nexport default function ToggleDemo(): JSX.Element {\n  const [isSelected, setSelected] = useState(true);\n\n  return (\n    <Toggle isSelected={isSelected} onPressedChange={setSelected}>\n      <Pin className=\"rotate-45\" />\n    </Toggle>\n  );\n}\n"}]
  },
  "demos/ui/react/tooltip/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/tooltip/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\n\nimport { Button } from \"@/registry/ui/react/button\";\nimport { Tooltip } from \"@/registry/ui/react/tooltip\";\n\nexport default function TooltipDemo(): JSX.Element {\n  const Content = () => <p>Add to library</p>;\n\n  return (\n    <Tooltip content={<Content />}>\n      <Button>Hover</Button>\n    </Tooltip>\n  );\n}\n"}]
  },
  "demos/ui/react/tooltip/variant": {
    component: React.lazy(() => import("@/registry/demos/ui/react/tooltip/variant")),
    code: [{"title":"variant.tsx","code":"\"use client\";\n\nimport { Button } from \"@/registry/ui/react/button\";\nimport { Tooltip } from \"@/registry/ui/react/tooltip\";\n\nconst variants = [\"default\", \"outline\", \"secondary\"] as const;\n\nexport default function TooltipDemo(): JSX.Element {\n  return (\n    <div className=\"grid grid-cols-2 gap-2\">\n      {variants.map((variant) => (\n        <Tooltip\n          key={variant}\n          content={`This is a ${variant} tooltip`}\n          variant={variant}\n        >\n          <Button>{variant}</Button>\n        </Tooltip>\n      ))}\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/tooltip/placement": {
    component: React.lazy(() => import("@/registry/demos/ui/react/tooltip/placement")),
    code: [{"title":"placement.tsx","code":"\"use client\";\n\nimport { Button } from \"@/registry/ui/react/button\";\nimport { Tooltip } from \"@/registry/ui/react/tooltip\";\n\nconst placements = [\"top\", \"right\", \"left\", \"bottom\"] as const;\n\nexport default function TooltipDemo(): JSX.Element {\n  return (\n    <div className=\"grid grid-cols-2 gap-2\">\n      {placements.map((placement) => (\n        <Tooltip\n          key={placement}\n          content={`Tooltip on the ${placement}`}\n          placement={placement}\n        >\n          <Button>{placement}</Button>\n        </Tooltip>\n      ))}\n    </div>\n  );\n}\n"}]
  },
  "demos/ui/react/tooltip/offset": {
    component: React.lazy(() => import("@/registry/demos/ui/react/tooltip/offset")),
    code: [{"title":"offset.tsx","code":"\"use client\";\n\nimport { Button } from \"@/registry/ui/react/button\";\nimport { Tooltip } from \"@/registry/ui/react/tooltip\";\n\nexport default function TooltipDemo(): JSX.Element {\n  return (\n    <Tooltip content=\"This tooltip is 20px away\" offset={20}>\n      <Button>Hover me</Button>\n    </Tooltip>\n  );\n}\n"}]
  },
  "demos/ui/react/tooltip/arrow": {
    component: React.lazy(() => import("@/registry/demos/ui/react/tooltip/arrow")),
    code: [{"title":"arrow.tsx","code":"\"use client\";\n\nimport { Button } from \"@/registry/ui/react/button\";\nimport { Tooltip } from \"@/registry/ui/react/tooltip\";\n\nexport default function TooltipDemo(): JSX.Element {\n  return (\n    <Tooltip content=\"This tooltip has an arrow\" arrow>\n      <Button>Hover me</Button>\n    </Tooltip>\n  );\n}\n"}]
  },
  "demos/ui/react/tooltip/delay": {
    component: React.lazy(() => import("@/registry/demos/ui/react/tooltip/delay")),
    code: [{"title":"delay.tsx","code":"\"use client\";\n\nimport { Button } from \"@/registry/ui/react/button\";\nimport { Tooltip } from \"@/registry/ui/react/tooltip\";\n\nexport default function TooltipDemo(): JSX.Element {\n  return (\n    <Tooltip content=\"This tooltip appears after a delay\" delay={300}>\n      <Button>Hover me</Button>\n    </Tooltip>\n  );\n}\n"}]
  },
  "demos/ui/react/tooltip/composition": {
    component: React.lazy(() => import("@/registry/demos/ui/react/tooltip/composition")),
    code: [{"title":"composition.tsx","code":"\"use client\";\n\nimport { Button } from \"@/registry/ui/react/button\";\nimport {\n  Tooltip,\n  TooltipArrow,\n  TooltipContent,\n  TooltipTrigger,\n} from \"@/registry/ui/react/tooltip\";\n\nexport default function TooltipDemo(): JSX.Element {\n  return (\n    <Tooltip>\n      <TooltipTrigger asChild>\n        <Button>Hover</Button>\n      </TooltipTrigger>\n      <TooltipContent>\n        <p>Add to library</p>\n        <TooltipArrow />\n      </TooltipContent>\n    </Tooltip>\n  );\n}\n"}]
  },
  "demos/ui/react/tour/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/tour/default")),
    code: [{"title":"default.tsx","code":"\"use client\";\nimport * as React from \"react\";\n\nimport { Button } from \"@/registry/ui/react/button\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/registry/ui/react/card\";\nimport { TextField } from \"@/registry/ui/react/text-field\";\nimport { TourFactory } from \"@/registry/ui/react/tour\";\n\nconst tour = TourFactory([\n  \"buttonOne\",\n  \"buttonTwo\",\n  \"missingButton\",\n  \"buttonFour\",\n  \"emailInput\",\n]);\n\nfunction TourDisplay(props: {\n  children: React.ReactNode;\n  title?: string;\n  description?: string;\n}) {\n  const ctx = tour.useContext();\n  return (\n    <Card className=\"w-[350px]\">\n      <CardHeader>\n        <CardTitle>{props.title}</CardTitle>\n        <CardDescription>{props.description}</CardDescription>\n      </CardHeader>\n      <CardContent>{props.children}</CardContent>\n      <CardFooter>\n        {ctx.current < ctx.nodes.size ? (\n          <div className=\"flex w-full justify-between\">\n            <Button variant=\"outline\" onClick={ctx.close}>\n              Close\n            </Button>\n            <div>\n              <Button onClick={ctx.previous}>Previous</Button>\n              <Button onClick={ctx.next}>Next</Button>\n            </div>\n          </div>\n        ) : (\n          <div className=\"flex w-full justify-end\">\n            <Button onClick={ctx.previous}>Previous</Button>\n            <Button className=\"bg-green-800\" onClick={ctx.close}>\n              Finish\n            </Button>\n          </div>\n        )}\n      </CardFooter>\n    </Card>\n  );\n}\n\nfunction TourApplication() {\n  const ctx = tour.useContext();\n  return (\n    <div className=\"flex h-96 w-full items-center justify-center\">\n      <div className=\"absolute bottom-2 left-2 flex gap-2\">\n        <tour.TourFocus\n          name=\"buttonOne\"\n          tourRender={\n            <TourDisplay title=\"Create Incident\">\n              <h1>This button creates an incident</h1>\n              <p>helpful text about this button</p>\n            </TourDisplay>\n          }\n        >\n          <Button>Create Incident</Button>\n        </tour.TourFocus>\n        <tour.TourFocus\n          name=\"buttonFour\"\n          tourRender={\n            <TourDisplay title=\"Update Incident\">\n              <h1>This button pushes your updates</h1>\n              <p>helpful text about this button</p>\n            </TourDisplay>\n          }\n        >\n          <Button>Update Incident</Button>\n        </tour.TourFocus>\n      </div>\n      <div className=\"absolute right-2 top-12 flex gap-2\">\n        <tour.TourFocus\n          name=\"buttonTwo\"\n          tourRender={\n            <TourDisplay title=\"Resolve Incident\">\n              <h1>This button Resolves the Incident</h1>\n              <p>helpful text about this button</p>\n            </TourDisplay>\n          }\n        >\n          <Button>Resolve Incident</Button>\n        </tour.TourFocus>\n      </div>\n      <div>\n        <tour.TourFocus\n          name=\"emailInput\"\n          tourRender={\n            <TourDisplay title=\"Email Input\">\n              <h1>This is where you put incident info</h1>\n              <p>helpful text about this input</p>\n            </TourDisplay>\n          }\n        >\n          <TextField type=\"email\" placeholder=\"Email\" />\n        </tour.TourFocus>\n      </div>\n      <div className=\"absolute bottom-2 right-2\">\n        <Button onClick={ctx.open}>Open Tour</Button>\n      </div>\n    </div>\n  );\n}\n\nexport default function TourDemo(): JSX.Element {\n  return (\n    <tour.TourProvider>\n      <TourApplication />\n    </tour.TourProvider>\n  );\n}\n"}]
  },
  "demos/ui/react/tree/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/tree/default")),
    code: [{"title":"default.tsx","code":"import { File, Folder, Tree } from \"@/registry/ui/react/tree\";\n\nexport default function FileTreeDemo(): JSX.Element {\n  return (\n    <div className=\"bg-background relative flex h-[300px] w-1/2 flex-col items-center justify-center overflow-hidden rounded-lg border md:shadow-xl\">\n      <Tree\n        className=\"bg-background overflow-hidden rounded-md p-2\"\n        initialSelectedId=\"7\"\n        initialExpandedItems={[\n          \"1\",\n          \"2\",\n          \"3\",\n          \"4\",\n          \"5\",\n          \"6\",\n          \"7\",\n          \"8\",\n          \"9\",\n          \"10\",\n          \"11\",\n        ]}\n        elements={ELEMENTS}\n      >\n        <Folder element=\"src\" value=\"1\">\n          <Folder value=\"2\" element=\"app\">\n            <File value=\"3\">\n              <p>layout.tsx</p>\n            </File>\n            <File value=\"4\">\n              <p>page.tsx</p>\n            </File>\n          </Folder>\n          <Folder value=\"5\" element=\"components\">\n            <Folder value=\"6\" element=\"ui\">\n              <File value=\"7\">\n                <p>button.tsx</p>\n              </File>\n            </Folder>\n            <File value=\"8\">\n              <p>header.tsx</p>\n            </File>\n            <File value=\"9\">\n              <p>footer.tsx</p>\n            </File>\n          </Folder>\n          <Folder value=\"10\" element=\"lib\">\n            <File value=\"11\">\n              <p>utils.ts</p>\n            </File>\n          </Folder>\n        </Folder>\n      </Tree>\n    </div>\n  );\n}\n\nconst ELEMENTS = [\n  {\n    id: \"1\",\n    isSelectable: true,\n    name: \"src\",\n    children: [\n      {\n        id: \"2\",\n        isSelectable: true,\n        name: \"app\",\n        children: [\n          {\n            id: \"3\",\n            isSelectable: true,\n            name: \"layout.tsx\",\n          },\n          {\n            id: \"4\",\n            isSelectable: true,\n            name: \"page.tsx\",\n          },\n        ],\n      },\n      {\n        id: \"5\",\n        isSelectable: true,\n        name: \"components\",\n        children: [\n          {\n            id: \"6\",\n            isSelectable: true,\n            name: \"header.tsx\",\n          },\n          {\n            id: \"7\",\n            isSelectable: true,\n            name: \"footer.tsx\",\n          },\n        ],\n      },\n      {\n        id: \"8\",\n        isSelectable: true,\n        name: \"lib\",\n        children: [\n          {\n            id: \"9\",\n            isSelectable: true,\n            name: \"utils.ts\",\n          },\n        ],\n      },\n    ],\n  },\n];\n"}]
  },
  "demos/ui/vue/button/default": {
    component: React.lazy(() => import("@/registry/demos/ui/react/button/default")),
    code: [{"title":"default.vue","code":"<script setup lang=\"ts\">\nimport Button from '@/lib/components/vue/button.vue';\n</script>\n\n<template>\n  <Button>Button</Button>\n</template>"}]
  },
  "demos/ui/vue/button/variants": {
    component: React.lazy(() => import("@/registry/demos/ui/react/button/variants")),
    code: [{"title":"variants.vue","code":"<script setup lang=\"ts\">\nimport Button from '@/lib/components/vue/button.vue';\n\nconst variants = [\n  \"default\",\n  \"primary\",\n  \"secondary\",\n  \"outline\",\n  \"quiet\",\n  \"success\",\n  \"warning\",\n  \"danger\",\n] as const;\n</script>\n\n\n<template>\n  <div class=\"grid grid-cols-4 gap-2\">\n    <Button v-for=\"variant in variants\" :key=\"variant\" :variant=\"variant\">\n      {{ variant }}\n    </Button>\n  </div>\n</template>\n"}]
  },
  "demos/ui/vue/button/sizes": {
    component: React.lazy(() => import("@/registry/demos/ui/react/button/sizes")),
    code: [{"title":"sizes.vue","code":"<script setup lang=\"ts\">\nimport Button from '@/lib/components/vue/button.vue';\n</script>\n\n<template>\n    <div className=\"flex w-full items-center justify-center gap-4\">\n      <Button size=\"sm\">Button</Button>\n      <Button size=\"md\">Button</Button>\n      <Button size=\"lg\">Button</Button>\n    </div>\n</template>"}]
  },
  "demos/ui/vue/button/shapes": {
    component: React.lazy(() => import("@/registry/demos/ui/react/button/shapes")),
    code: [{"title":"shapes.vue","code":"<script setup lang=\"ts\">\nimport Button from '@/lib/components/vue/button.vue';\nimport { UploadIcon } from \"@/lib/icons\";\n</script>\n\n<template>\n  <div className=\"flex items-center justify-center gap-4\">\n    <Button size=\"sm\" shape=\"square\" aria-label=\"upload\">\n      <UploadIcon />\n    </Button>\n    <Button size=\"md\" shape=\"square\" aria-label=\"upload\">\n      <UploadIcon />\n    </Button>\n    <Button size=\"lg\" shape=\"square\" aria-label=\"upload\">\n      <UploadIcon />\n    </Button>\n    <Button size=\"sm\" shape=\"circle\" aria-label=\"upload\">\n      <UploadIcon />\n    </Button>\n    <Button size=\"md\" shape=\"circle\" aria-label=\"upload\">\n      <UploadIcon />\n    </Button>\n    <Button size=\"lg\" shape=\"circle\" aria-label=\"upload\">\n      <UploadIcon />\n    </Button>\n  </div>\n</template>"}]
  },
  "demos/ui/vue/button/prefix-and-suffix": {
    component: React.lazy(() => import("@/registry/demos/ui/react/button/prefix-and-suffix")),
    code: [{"title":"prefix-and-suffix.vue","code":"<script setup lang=\"ts\">\nimport Button from '@/lib/components/button.vue';\nimport { UploadIcon } from \"@/lib/icons\";\n</script>\n\n<template>\n  <div className=\"flex items-center gap-2\">\n    <Button :prefix=\"UploadIcon\">\n      Button\n    </Button>\n    <Button :suffix=\"UploadIcon\">\n      Button\n    </Button>\n  </div>\n</template>\n"}]
  },
  "demos/ui/vue/button/loading": {
    component: React.lazy(() => import("@/registry/demos/ui/react/button/loading")),
    code: [{"title":"loading.vue","code":"<script setup lang=\"ts\">\nimport Button from '@/lib/components/vue/button.vue';\nimport { ref } from 'vue';\nconst someVariable = ref(5);\n</script>\n\n<template>\n  <div className=\"flex w-full items-center justify-center gap-2\">\n    <Button size=\"sm\" :isLoading=\"someVariable === 5\">\n      Button\n    </Button>\n    <Button size=\"md\" isLoading>\n      Button\n    </Button>\n    <Button size=\"lg\" isLoading>\n      Button\n    </Button>\n  </div>\n</template>\n"}]
  },
  "demos/ui/vue/button/disabled": {
    component: React.lazy(() => import("@/registry/demos/ui/react/button/disabled")),
    code: [{"title":"disabled.vue","code":"<script setup lang=\"ts\">\nimport Button from '@/lib/components/vue/button.vue';\nimport { ref } from 'vue';\nconst someVariable = ref(5);\n</script>\n\n<template>\n  <Button :isDisabled=\"someVariable === 5\">Button</Button>\n</template>\n"}]
  },
  "demos/ui/vue/button/link-button": {
    component: React.lazy(() => import("@/registry/demos/ui/react/button/link-button")),
    code: [{"title":"link-button.vue","code":"<script setup lang=\"ts\">\nimport Button from '@/lib/components/vue/button.vue';\nimport { LinkIcon } from '@/lib/icons';\n</script>\n\n<template>\n  <Button href=\"/login\" target=\"_blank\" :prefix=\"LinkIcon\">\n    Login\n  </Button>\n</template>"}]
  },
};
