{
  "name": "toggle",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-toggle"
  ],
  "files": [
    {
      "path": "ui/react/toggle.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\";\r\nimport { tv, type VariantProps } from \"tailwind-variants\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst toggleStyles = tv({\r\n  base: \"inline-flex items-center justify-center gap-2 rounded-md leading-normal text-sm font-medium ring-offset-bg transition-colors disabled:cursor-default disabled:bg-disabled disabled:text-disabled-fg\",\r\n  variants: {\r\n    variant: {\r\n      quiet:\r\n        \"bg-transparent hover:bg-neutral/40 active:bg-neutral/20 text-fg data-[state=on]:bg-primary data-[state=on]:text-primary-fg data-[state=on]:hover:bg-primary-hover data-[state=on]:active:bg-primary-active\",\r\n      outline:\r\n        \"border border-border-field bg-transparent hover:bg-neutral/40 active:bg-neutral/20 active:border-transparent text-fg data-[state=on]:bg-primary data-[state=on]:border-transparent data-[state=on]:text-primary-fg data-[state=on]:hover:bg-primary-hover data-[state=on]:active:bg-primary-active\",\r\n      accent:\r\n        \"border border-border-field bg-transparent hover:bg-neutral/40 active:bg-neutral/20 active:border-transparent text-fg data-[state=on]:bg-accent data-[state=on]:border-transparent data-[state=on]:hover:bg-accent-hover data-[state=on]:active:bg-accent-active data-[state=on]:text-accent-fg\",\r\n    },\r\n    size: {\r\n      sm: \"p-1.5 w-8 h-8 [&_svg]:w-4 [&_svg]:h-4\",\r\n      md: \"p-2 w-9 h-9 [&_svg]:w-4 [&_svg]:h-4\",\r\n      lg: \"p-2 w-10 h-10 [&_svg]:w-5 [&_svg]:h-5\",\r\n    },\r\n    shape: {\r\n      rectangle: \"\",\r\n      square: \"\",\r\n      circle: \"rounded-full\",\r\n    },\r\n  },\r\n  compoundVariants: [\r\n    {\r\n      size: \"sm\",\r\n      shape: \"rectangle\",\r\n      className: \"px-3 w-auto\",\r\n    },\r\n    {\r\n      size: \"md\",\r\n      shape: \"rectangle\",\r\n      className: \"px-4 w-auto\",\r\n    },\r\n    {\r\n      size: \"lg\",\r\n      shape: \"rectangle\",\r\n      className: \"px-5 w-auto\",\r\n    },\r\n  ],\r\n  defaultVariants: {\r\n    variant: \"quiet\",\r\n    size: \"md\",\r\n    shape: \"square\",\r\n  },\r\n});\r\n\r\ninterface ToggleProps\r\n  extends Omit<\r\n      React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root>,\r\n      \"prefix\" | \"onChange\"\r\n    >,\r\n    VariantProps<typeof toggleStyles> {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n  prefix?: React.ReactNode;\r\n  suffix?: React.ReactNode;\r\n  isDisabled?: boolean;\r\n  defaultSelected?: boolean;\r\n  isSelected?: boolean;\r\n  onPressedChange?: (isSelected: boolean) => void;\r\n}\r\n\r\nconst Toggle = React.forwardRef<\r\n  React.ElementRef<typeof TogglePrimitive.Root>,\r\n  ToggleProps\r\n>((props: ToggleProps, ref: React.ForwardedRef<HTMLButtonElement>) => {\r\n  const {\r\n    className,\r\n    variant,\r\n    size,\r\n    shape,\r\n    prefix,\r\n    isDisabled,\r\n    suffix,\r\n    defaultSelected,\r\n    isSelected,\r\n    onPressedChange,\r\n    ...restProps\r\n  } = props;\r\n\r\n  return (\r\n    <TogglePrimitive.Root\r\n      ref={ref}\r\n      disabled={isDisabled}\r\n      className={cn(toggleStyles({ variant, size, shape, className }))}\r\n      defaultPressed={defaultSelected}\r\n      pressed={isSelected}\r\n      onPressedChange={onPressedChange}\r\n      {...restProps}\r\n    >\r\n      {prefix && <span className=\"mr-2\">{prefix}</span>}\r\n      {props.children}\r\n      {suffix && <span className=\"ml-2\">{suffix}</span>}\r\n    </TogglePrimitive.Root>\r\n  );\r\n});\r\n\r\nToggle.displayName = \"Toggle\";\r\n\r\ntype ToggleContextValue = VariantProps<typeof toggleStyles>;\r\nconst ToggleContext = React.createContext<ToggleContextValue>({});\r\nconst useToggleContext = () => {\r\n  return React.useContext(ToggleContext);\r\n};\r\n\r\nexport type { ToggleProps };\r\nexport { Toggle, toggleStyles, ToggleContext, useToggleContext };\r\n",
      "type": "registry:ui",
      "target": "components/ui/toggle.tsx"
    }
  ]
}